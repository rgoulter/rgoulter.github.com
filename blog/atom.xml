<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Richard Goulter's Blog</title>
    <link href="http://www.rgoulter.com/blog//atom.xml" rel="self" />
    <link href="http://www.rgoulter.com/blog/" />
    <id>http://www.rgoulter.com/blog//atom.xml</id>
    <author>
        <name>Richard Goulter</name>
        <email>richard.goulter+blog@gmail.com</email>
    </author>
    <updated>2016-11-26T00:00:00Z</updated>
    <entry>
    <title>Catching up on Action Games</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2016-11-26-catching-up-on-action-games.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2016-11-26-catching-up-on-action-games.html</id>
    <published>2016-11-26T00:00:00Z</published>
    <updated>2016-11-26T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on November 26, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/game.just%20cause.html">game.just cause</a>, <a href="/tags/game.call%20of%20duty.html">game.call of duty</a>
    
</div>

<p>So I recently got a new gaming PC. It’s good to not have to say “can’t play that game, my computer is so old”.</p>
<p>I was able to re-play through Just Cause 3. – I’d played through on a friend’s PS4; but since then the DLC for the game has been released.<br />
JC3 was already very much an action-playground. The DLC added to this: a jetpack (where you get to shoot machine-guns / missiles while flying around), mechs, and a super-action-jetboat (with machine-guns and missiles).<br />
– My thoughs on JC3 remain more/less the same as at the start of the year; I still wish you could customise things (like in Saints Row), etc. – But in terms of “crazy action-man gameplay”, I can’t imagine how Just Cause 4 could possible top Just Cause 3.</p>
<p>I’ve also spent some time catching up on the Call of Duty games. (I was able to get away with playing CoD:Black Ops 2 on my laptop, barely).<br />
– I almost feel the need for a disavowal: CoD is barely more of a game than The Sims is. No serious, enthusiastic gamer would be proud to say they enjoyed playing CoD. (As opposed to, say, The Witcher 3 or Dark Souls or etc.). – That’s fine, but also for the most part refers to CoD <em>multiplayer</em>. Which I don’t touch. (Nor the zombies, for that matter).<br />
– I just play the dumb action campaign, influences of which has somehow come to dominate the FPS genre. – Which is kindof weird; ’cause the CoD games tend to throw in ACTION like the player will get bored if they go for 3 seconds without seeing an explosion or something cool happen. – And games like Homefront which follow the formula pretty closely (albeit with a more budget feel) cop a lot of shit.</p>
<p><em>That</em> stuff I don’t mind so much.<br />
With CoD you pretty much know what you’re getting.</p>
<p>CoD Ghosts, I recall, caught many bad reviews.<br />
It’s “the one with the dog”.</p>
<p>– I think Zero Punctuation’s review remarked that so much of CoD gameplay involved “hey, here’s a new toy, which you get to use once, and never again”. – I think that’s accurate, and it really limits how good a ‘game’ CoD could be.<br />
Rather than incrementally expanding a player’s tools (&amp; the enemies they face).. fancy gimmicks which get used once leads to the game feeling like Dora-the-Explorer: receiving instructions for when to push which button at which time.</p>
<p>So, yeah, CoD Ghosts does that.<br />
And continues the CoD tradition of having a super-bad-guy who wants-to-get-caught. And who you fight at the end only through a series of quick-time-events.<br />
– So, yeah. You know what you’re getting.</p>
<p>CoD: Advanced Warfare. “the one with Kevin Spacey”.<br />
– Holy shit, I found it hard to tell whether the (pre-rendered) cutscenes were computer-rendered or live-action. I’m fairly sure the scenes must be computer-generated.</p>
<p>CoD:AW at least adds a game-mechanic you get to keep using throughout: you have a new exo-suit. (Kindof like a lamer version of Crysis’ exo-suit, although it’ll be different in different levels).<br />
– There was also one interesting level: your left-arm gets injured, so you’re unable to reload and must continuously pick up weapons (with ammo) from fallen enemies. – It’s a nice example of requiring the player to <em>adapt</em> from the game’s typical gameplay.</p>
<p>CoD:AW was less annoying than CoD:Ghosts. But they’re both the same blob-ish cinematic blur of action, which is fun enough.</p>
]]></summary>
</entry>
<entry>
    <title>My Impression of Ruby So Far</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2016-10-15-my-impression-of-ruby-so-far.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2016-10-15-my-impression-of-ruby-so-far.html</id>
    <published>2016-10-15T00:00:00Z</published>
    <updated>2016-10-15T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October 15, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/programming.ruby.html">programming.ruby</a>, <a href="/tags/programming.scala.html">programming.scala</a>, <a href="/tags/programming.haskell.html">programming.haskell</a>
    
</div>

<h3 id="background">Background</h3>
<p>I’ve recently started programming in Ruby. I’ve inherited a codebase for writing automated-UI tests against a website. The tests make use of Capybara, which provides a high-level “DSL” for interacting with a webpage/browser in the sameway a user would; Capybara itself does this by abstracting over Selenium (or some other driver, like Poltergeist/PhantomJS); Selenium itself allows interaction with different web-browsers, by providing abstractions for different drivers of browsers (e.g. ChromeDriver).</p>
<p>As is also common for tests like these (called “UI tests”, “acceptance tests”, “functional tests”, “specifications”, “end to end tests” depending on who you ask) is use of Cucumber. – But that’s not too important for this post.</p>
<h3 id="very-first-impression">Very First Impression</h3>
<p>Anyway,<br />
I’d first read a few books before getting my hands dirty. (“Ruby Best Practices” and some of “The Ruby Way”). What I read was exciting enough: Ruby seems to be a language with decent pedigree, inheriting aspects from Lisp and the emphasis on message-passing from SmallTalk (as well as e.g. the power of Regular Expressions from Perl).<br />
Also cool was e.g. Ruby’s dynamic features. Everything is an object, objects pass messages between each other. And so by overriding a few magic methods, some pretty cool things can be done. – e.g. the <code>method_missing</code> method is called if the object was called with a method that wasn’t defined on that object; so an object overriding this can have different behaviour.</p>
<p>That Ruby isn’t a low-pedigree language surprised me. ‘cause I kindof thought of Ruby as a “slightly prettier Python”. (It really isn’t, the philosophies of the two languages are quite different).<br />
And while I’d heard Ruby documentation was ’good’, it was ‘good’ by-way-of “here’s an example of probably what you’ll want to do”.<br />
And, well, if all someone knew was “Ruby on Rails”, then it’s kindof a good indicator that that person (prob’ly) doesn’t know how to program.</p>
<p>Steve Yegge also gave the language well-nuanced praise: that he didn’t <em>like</em> the language, but he found himself using it for everything when he had the choice; that he didn’t <em>know</em> the language, but he found he didn’t need to read the documentation while writing it (unlike other languages he was more familiar with).</p>
<h3 id="actually-using-it">Actually Using It</h3>
<p>I’d say, Ruby isn’t as nice a blub language as Python is. To me it feels like a blub language, but with a message-passing system.</p>
<p>I guess I don’t like it as much coming from a Scala background:<br />
“Ruby’s nice ’cause you can map/reduce over lists” … just like Scala. But without pattern matching.<br />
And Ruby has nice “no brackets” syntax … like Scala. (Except in Ruby, it’s like <code>o.m(x,y,z)</code> can be <code>o.m x, y, z</code>; in Scala it’s more like <code>x.op(y)</code> can be written as <code>x op y</code>; in Haskell it’s <code>f(x,y,z)</code> must be written as <code>f x y z</code>). – Also, in Scala, operator overloading works for any symbol which is a valid method name, whereas Ruby takes C++’s approach.</p>
<p>That Ruby has symbols (like Lisp) is one thing I certainly do like about it, though.</p>
<p>And I guess I don’t like it as much coming from a Haskell background:<br />
Say what you like about how shit Haskell documentation can be; (and I suppose outside “being too academic”, large-scale shit like Lenses can be god-damn atrocious to read). But at least it’s clear what <em>types</em> things have.<br />
Ruby documentation makes clear what <em>messages</em> the objects receive. – The expectation is that the documentation give examples of different ways to use the method. Fucking good luck to you if the documentation lacks that. – This is slightly exasperated by Ruby’s “there’s more than one way to skin a monkey” philosophy, wherein a call to the same method-definition with different kinds of arguments ought to do the-right-thing.</p>
<p>And I guess it kind-of, sort-of makes sense for those familiar with Ruby, but I was surprised to learn that methods like <code>map</code>, etc. accept <em>only</em> procs; even if an objects method receives the same type of argument as an equivalent proc, the higher-order methods only take procs.<br />
– The lack of tuples (in the same sense as Haskell or Scala or Python) also seems strange to me.</p>
<p>But the biggest woe I have with Ruby at the moment is “wtf errors”, presumably from the magic. – It’s not completely uncommon in statements calling Capybara (and therefore, Selenium, and ChromeDriver) to throw an <code>&quot;undefined method 'map' for 0:Fixnum</code> (or <code>nil:NilClass</code>), when the statement contains no calls to map, nor any numbers/nil values. (I guess as a hint, the same statement may sometimes throw other errors about connection problems for some pipe).<br />
– i.e. the call-stack from the exception doesn’t show the actual call-stack.<br />
It’s possible, but very difficult, to debug this sort of thing. I still haven’t figured it out.</p>
<p>– All that said; this was on an non-idiomatic codebase I’d inherited. And I’m by no means yet comfortable with writing Ruby.</p>
<h3 id="conclusion-hopes">Conclusion / Hopes</h3>
<p>So I find the syntax and semantics of Ruby conflict with what I’d expect, coming from a Scala/Haskell/Python background.<br />
I’m not saying Ruby is a <em>bad</em> language. It looks like it’s pretty nice at writing message-passing paradigm programs. – But I don’t yet have love for the Ruby environment.</p>
<hr />
<h4 id="btw-about-cucumber">Btw, About Cucumber</h4>
<p>Cucumber is a tool to help write “executable specifications”. The specification is written in e.g. Gherkin; the main aspect of a Gherkin specification is its sequence of Given/When/Then steps, written in a natural-language like English. – Cucumber tests will then bind these steps to code by matching the steps against a regex, and executing some code for that.<br />
(In terms of “does the program pass tests”, this is kindof a costly abstraction to make, and for programmers-only, it’s easier to just write the executed code directly. – The purported benefit of writing executable specifications is more about communication: first that those involved in writing/reviewing the specification come up with an agreement of what the program ‘is’, &amp; what terminology/phrases to use when discussing it; second that you get a (readable!) “living document” which describes what features the program has).</p>
<p>The automated testing suite is still quite young (currently working on getting it stable). I’m interested in seeing what difficulties come up in maintaining it (both from a technical and ‘social’ standpoint).</p>
]]></summary>
</entry>
<entry>
    <title>My Hope for Political Discussion</title>
    <link href="http://www.rgoulter.com/blog//posts/argument/2016-10-15-my-hope-for-political-discussion.html" />
    <id>http://www.rgoulter.com/blog//posts/argument/2016-10-15-my-hope-for-political-discussion.html</id>
    <published>2016-10-15T00:00:00Z</published>
    <updated>2016-10-15T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October 15, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/politics.html">politics</a>
    
</div>

<p>The other day something wonderful happened in a chat group I’m in.<br />
Upon reading David Wong’s excellent <a href="http://www.cracked.com/blog/6-reasons-trumps-rise-that-no-one-talks-about/">discussion of rural voter mindset</a>, a friend made the remark like “we need more ‘empathic explainers’, rather than ‘explainer’ articles”.</p>
<p>I agree with the sentiment.. but my mind thinks in ways like “what are the obstacles”.<br />
So I can agree that the stated “people aren’t sharing articles which empathetically discuss the other”, and prob’ly “it’s difficult to find resources to help emphathise with the other”.. essentially I’d say the people apparently don’t want to sympathise with the other; and maybe the infrastructure in place is such that they’re unlikely to.</p>
<hr />
<p>Taking an example. My understanding is Fox News was made as a ‘safe space’ for right-wing ideology. But it’s not hard to believe the right has <a href="https://praxis.ink/2016/08/the-conservative-media-echo-chamber-has-made-the-right-deaf-to-reality/">“constructed an intellectual ghetto that no one else wants to visit”</a>.</p>
<p>The title of the previous link refers to an echo chamber; I’d say the problem of echo chambers isn’t unique to one side. On the other hand, though, while it’s convenient to discuss the problems as symmetric at the meta-level, I don’t believe the climate is symmetric (unless maybe considered on a long-enough timeline).</p>
<p>But, y’see… who exactly has a neutral view of things? Something it seems my news feed doesn’t seem to understand is,<br />
if you ask a non-fanatic Clinton supporter “who’s going to win 2016 election?”, they’re likely to say “oh, probably Trump” prob’ly followed by “so many voters are idiots”;<br />
and similarly a non-fanatic Trump supporter, “oh, probably Clinton” prob’ly followed by “the elites &amp; MSM have pretty much rigged the system”.<br />
– Or, rather, “who’s going to win? probably not my candidate”.<br />
And the next iteration of thought then ought to be .. “gee, people seem to always think their side is losing; but, really, <em>those</em> people are the ones with power”.<br />
– I don’t mean “people are biased”. My lament is that people are <em>unaware</em> that their opponents often think in the same <em>form</em> as they do.</p>
<p>And if people don’t recognise <em>forms</em> of thought like this.. how can we expect people to themselves become more empathetic to opinions they don’t know about?</p>
<hr />
<p>I like Miller’s Law. I think Wikipedia’s phrasing is like “Suspend judgement until you’ve listened to find out what statement you’re hearing is true about”.<br />
My understanding is more like this. No one genuinely says something while thinking “hey this is dumb of me to say”; but many genuinely expressed opinions are gross or otherwise dumb.<br />
Like “how could this guy be so stupid” dumb. (ProTip, “because he’s racist/sexist/gross” isn’t sufficient effort to count as “listening”).<br />
– Ergo, if a statement sounds really awfully dumb in such a way you couldn’t pass Intellectual-Turing-Test for it, you’ve not understood the truth the statement brings.</p>
<p>Sturgeon’s Law is probably another nice law here: “90 percent of everything is crap”.</p>
<p>– With the above two in mind, what fucking point is there in the common anger in how politics usually gets discussed: “look, someone from the other tribe said something dumb!”. (Watch <em>any</em> John Oliver or Daily Show video to see this form of statement). – It’s <em>so</em> satisfying to see how stupid those from the other tribe are. (Well, beneath the anger, anyway).</p>
<p>The other tribe is disgusting <em>by definition</em>.<br />
The other tribe isn’t bad at the things you think the other tribe is bad at; the other tribe is bad at things your tribe is good at.</p>
<p>And your tribe is bad at things the other tribe is good at.<br />
– In reaction to “people are biased; I’m a person and so I don’t know what things I’m wrong about”, I suppose a rational response would be to have people who can disagree with you on-hand so you can find out what you’re wrong about. Who does that? I mean, I think it’s fine that people aren’t truth-seekers like this. But still.</p>
<p>Short of that, for myself, I’d say it’s possible to reason about the things you’re wrong about by their form.<br />
Tools and rules ought to work impartially.<br />
If someone from the other tribe would be a complete-fucking-idiot for saying the same kindof thing, then prob’ly you should hold off.</p>
<p>(Other heuristics are like, e.g. “the world is a complicated place; unqualified or unnuanced statements are probably wrong overall, though may contain some truths”, or forms like “if the other side were consistent about X, then they would say/do Y”, etc.).</p>
<hr />
<p>“The purpose of the internet is to say all sorts of random shit, and then defend what you say as if it were God’s own truth” is something like a tweet I saw once. I quite liked it.</p>
<p>I’d love to see an adaptation of a particular xkcd comic.<br />
Not the “someone on the internet was <em>wrong</em>” one. (The artist is still a smug piece of shit there; holding that the artist’s opinion is probably the right one).<br />
The one which goes “there are too many competing standards, we need a new standard to bring them together” and suddenly there are N+1 competing standards.<br />
– There are too many dumb opinions on the internet. Someone ought to give a right opinion with nuance showing people the errors in their thinking. And suddenly there are N+1 dumb opinions on the internet.</p>
<p>I vaguely recall an old Bertrand Russell quote(?) … <a href="http://quoteinvestigator.com/2015/03/04/self-doubt/">this one</a>. “The fundamental cause of the trouble in the modern world today is that the stupid are cocksure while the intelligent are full of doubt”.<br />
(Russell apparently had some good quotes; e.g. <a href="https://www.brainyquote.com/quotes/quotes/b/bertrandru403503.html">“Why is propaganda so much more successful when it stirs up hatred than when it tries to stir up friendly feeling?</a>, <a href="https://en.wikiquote.org/wiki/Bertrand_Russell">“Nine-tenths of the activities of a modern Government are harmful; therefore the worse they are performed, the better.”</a>).<br />
– I’d adapt this idea a bit: those sensible enough to know that expressing political opinions is fucking annoying know to not share their opinion.</p>
<p>If you had a dumb opinion, how would you know?<br />
Surely you’d still feel your opinion superior, that “the people need to know!”?</p>
<hr />
<p>The way Facebook and Twitter structure their interaction also shapes how people think.</p>
<p>Tumblr is prob’ly the worst, wherein you don’t get to see responses to posts; so propaganda can proliferate uninterrupted.</p>
<p>Facebook is ‘notorious’ in this respect for its filter-bubble, wherein its newsfeed only shows you parts of things.. – But on the whole, filtered-information-shapes-thought has been around for ages; it’s why English translations of the Bible were so controversial at first. (It’d bypass the in-place power structure, right).<br />
– But, really, wouldn’t it be great if your tribe could have such influence over mainstream media and education, etc. such that the views of the other tribe were pretty much unheard of?</p>
<p>I’d say the limitation with Facebook is it’s “among friends”. And if your friends aren’t INTJs, arguing doesn’t seem to be so welcomed.</p>
<p>I don’t think Twitter is necessarily limited by its 140-character posts. People seem to chain them well enough, mostly. – I even prefer it for that; the cost of a tweet is much lower, so it’s easier to share interesting tweets.<br />
But the inevitable problem is, you’re defining your own stream of information.</p>
<hr />
<p><a href="https://popehat.com/2014/10/10/strange-seeds-on-distant-shores/">“fish don’t know that they’re in water”</a>. (The quote continues “We’re so surrounded by people who think like us, that it’s impossible to see that what we think are universal truths are just our local culture. / We can’t see it until we get outside of it.”).<br />
– The quote is well enough in theme with the above; the article is a nice discussion of the culture-wars, going all the way back to English Civil War.</p>
<p><a href="http://status451.com/2016/01/06/splain-it-to-me/">Alice Maz’s utterly fantastic post here</a> discusses, ostensibly, how different people view interactions on Twitter differently; and goes on to discuss ‘status-games and signalling’; how the social games people play forms culture. (And how the same actions get seen as normal or as rude depending on which cultural group you’re from).</p>
<p>Similarly good is anything from Jonathan Haidt discussing morality.<br />
His book “The Righteous Mind” discusses humanity’s righteousness as “a feature, not a bug”.<br />
The most fascinating model from the book is the <a href="http://moralfoundations.org/">Moral Foundation Theory</a>. (The link includes a paragraph discussing MFT for modelling the culture wars of recent decades in the US).</p>
<hr />
<p>I use the terms “tribal” and “the other” a lot in the above; for a good overview of tribalism, I’d recommend <a href="http://slatestarcodex.com/2014/09/30/i-can-tolerate-anything-except-the-outgroup/">“I can tolerate anything except the outgroup”</a> (although it is rather long, yes).</p>
<p>While of course all models are wrong, some models are useful; and I’d think tribalism well-covers the culture wars, and you’d be hard-pressed to find a different model you can substitute in its place.</p>
<hr />
<p>If there’s any sense to the above, it’s a “takes one to know one” kinda thing.<br />
In that respect, I don’t suppose I’d hope for “people to get along better”, or “people to be all super-rational”, etc. – But surely at some point after enough anger and outrage, people have to be aware of the rules of the game?</p>
]]></summary>
</entry>
<entry>
    <title>Future Cop LAPD</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2016-10-07-future-cop-lapd.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2016-10-07-future-cop-lapd.html</id>
    <published>2016-10-07T00:00:00Z</published>
    <updated>2016-10-07T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October  7, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/games.future%20cop.html">games.future cop</a>
    
</div>

<p>Future Cop LAPD is an old game, released for PlayStation One, as well as PC.</p>
<p>It looks like there are <a href="https://gaming.youtube.com/game/UCqgd3IH34aVYaV-P8FUt6aQ#tab=2">dozens</a> of videos about it on YouTube, getting ~1k-10k views each. The comments are usually filled with “man, this was such a cool game”.</p>
<p>Sadly, as happens with ‘legacy’ games, it doesn’t look possible to purchase on modern systems. Even on Sony’s ‘PSOne Classics’, it looks <a href="https://store.playstation.com/#!/en-us/games/future-cop-lapd-(ps3-psp)/cid=UP9000-NPUJ00739_00-0000000000000001">only available for PS3, PSP</a>. (Presumably it’s not further avaible on PS4 or PSVita due to licensing/rights issues).</p>
<p>– For myself, I have vague recollections of the game, on a family-friend’s PlayStation.</p>
<p>The gist of the game is you play as a transforming mech/hovertank, with an arsenal of machinegun/rockets/mortar (or various upgrades). The gameplay is either a single-player campaign with the usual bells &amp; whistles, or a ‘MOBA-style’ match against another player (or an AI): ‘MOBA’ in that you control a powerful unit, but victory depends on getting a weaker AI-controlled unit to reach the enemy’s base.<br />
– I don’t know which game would’ve been first with MOBA gameplay. I’ve heard <a href="https://en.wikipedia.org/wiki/Herzog_Zwei">Herzog Zwei</a> on the Sega Genesis as one of the first RTS/MOBA games. – These days, the game AirMech gets a mention in terms of “games with transforming mechs and underling units”.</p>
<p>Watching a couple of the <a href="https://www.youtube.com/watch?v=v760C4AmJfQ">hard</a> <a href="https://www.youtube.com/watch?v=_uqECVDAngI">levels</a> of this MOBA-style gameplay, I do get the impression that there’s a much greater demand for polish in games these days. It looks like “wow this game was cool” is tained with nostalgia and forgotten memories:</p>
<p>– For one, the gameplay design looks somewhat stunted; in both of these videos, the winning strategy is apparently quite similar. Since the victory objective is “get one of your tanks inside their base”, it’s better to pick the tank which can take punishment. (A potential alternative, I guess, is ‘pick a weaker tank, but from closer to the enemy base’; this doesn’t seem viable?). This also seems to require a certain amount of points have been built up first.<br />
– But, like. It strikes me that in the video, the enemy AI has captured towers on the player’s side, and the player doesn’t seem to see benefit in destroying the tower.<br />
– That enemy missiles travel the same speed as the player’s hovertank strikes me as a cute feature; that the player’s mortar (which can apparently destroy a tower in one hit) is so slow that the dynamic of “destroy a tower” is apparently “fire a mortar, then kindof wait around for the mortar to land” feels.. lame.<br />
– Ammunition is kept as one large amount, rather than smaller amounts which could be replenished at a base. (The effect is, the possible-gameplay-time is the limit; when you run out of ammo you lose. Smaller-but-replenishable instead demands moderation: the short-term cost of firing is much higher).</p>
<p>– In terms of ‘polish’… not so much ‘bad graphics’ (which I’d call ‘charming graphics’), so much as the poor interface: the camera feels wonky, which is perhaps balanced by the simple-ish maps, and short range on enemy towers. The enemy spawning a super-tank is apparently quite a big event, but the UI doesn’t make a big deal of it. There’s no healthbar on towers/tanks (YMMV); no timer or other indication of when a destroyed tower will respawn.<br />
Outposts can be captured once. Idk, it just feels strange that there’s apparently not any (expensive) way for an outpost to be re-captured.</p>
<p>I guess ’cause of the ostensible simplicity of the gameplay, there’s some ambition for I-could-do-that-remake. (e.g. <a href="https://theunemployedartist.wordpress.com/2016/03/22/the-project-future-cop-lapd-remake/">this</a> artists amazing recreation of the mech from the cutscenes. Wow). – “We don’t do it because it’s easy; we do it because we thought it would be.”.<br />
– I’ll totally admit that in an undergrad module, I made an abysmal-failure of an attempt to make something inspired by Future Cop LAPD. – All the same, you’d think that e.g. the maps of the MOBA gameplay would be something more available on the internet.</p>
]]></summary>
</entry>
<entry>
    <title>On Programming and Testability</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2016-09-21-on-programming-and-testability.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2016-09-21-on-programming-and-testability.html</id>
    <published>2016-09-21T00:00:00Z</published>
    <updated>2016-09-21T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on September 21, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>I’ve been reading some interesting blogposts recently:</p>
<ul>
<li><p>This summary of <a href="https://blog.acolyer.org/2016/09/14/why-functional-programming-matters/">“Why Functional Programming Matters”</a>, (I’ve not read the piece it summarizes, would probably be interesting) argues roughly that the usual pitch of FP is its purity (“no side effects, no having to reason about side effects”), &amp; that this is a bad pitch. Rather, the benefits FP brings are that it offers a better way to write programs modularly (just as control structures allow for modularity where GOTO doesn’t).</p></li>
<li><p><a href="https://www.youtube.com/watch?v=dawFyaWvFg4">“Beyond Design Patterns”</a> talk at PHP Conference Barcelona is a fascinating view on the GoF Design Patterns (which I’ve not read up on – this talk provides a context which might make them more bearable to look at).<br />
<a href="https://pinboard.in/u:rgoulter/b:f41d9c055c12">My notes here</a>, but the key point he makes is that the GoF Design Patterns come down to patterns of information flow. This relates to Alan Kay’s emphasis that ‘OOP’ really ought to be more about the <em>messages</em> between objects.</p></li>
<li><p>The <a href="http://fabiopereira.me/blog/2010/05/27/ttdd-tautological-test-driven-development-anti-pattern/">Tautological Unit Test</a> <em><em>anti-pattern</em></em>. (Because SDLC dipshits can’t communicate whether a concept is good or bad without using the word “pattern”). The post emphasises that tests ought to make assertions about a code’s behaviour, rather than the code’s implementation. It somewhat defeats the point of a “ensure nothing broke” test if you have to update it as you update the program under test. – Tests are more likely to become tautological, the post suggests, through over-use of mocking. (A small example is provided, to try to illustrate the point).</p></li>
<li><p>cf. <a href="http://c2.com/cgi/wiki?PortsAndAdaptersArchitecture">“Ports and Adapters”</a>, which sometimes is mentioned in terms of making a system testable. (In “Working Effectively with Legacy Systems”, the idea of a ‘contact point’ is brought up; i.e. a point wherein you can change/inject a dependency without having to modify the code using it). – “Ports and Adapters” somewhat suggests for ‘large’ components, but these ideas all seem the same to me.</p></li>
</ul>
<p>My fresh, recent understanding of this last point is that in order to be able to inject things, constructing/initialising objects (using “new”) within methods is bad.</p>
<pre><code>class SomeInterestingClass {
  // ...
  public function computeSomething($x) {
    $service = new ServiceFromOtherModule(); // Can&#39;t be changed in here
    return $service-&gt;compute($this-&gt;val, $x);
  }
}</code></pre>
<p>The way to replace this, then, would be to store <code>$service</code> as a property, initialised in constructor instead of “where it’s used”, which can be <code>set</code>. And maybe some more complicated variation for if this class we depend on needs to be initialised with variables the constructor.<br />
– The same more/less applies if the ‘dependency’ is a function call, etc.</p>
<p>My understanding is, then, that for non-trivial computations, “testing behaviour” comes down to assertions on how mocked-up classes/functions are used. Some white-box understanding of how behaviour is implemented is needed to know what can be stubbed. – This somewhat makes unit tests a ‘declarative’ companion to the code: “In this circumstance, this should happen”.</p>
<p>Rephrasing the above in roughly terms of ‘information-flow’: I’m guessing that at least some white-box knowledge of what kinds of messages are received (from what kind of sender), what kinds of messages are sent (to what kind of recipient) is an inevitability; perhaps it’s that it becomes a tautology when the mocking explicitly (albeit limitedly) declares the same messages/relations which the SUT code does.</p>
<p>– But I don’t know. It’s something I’d like to think about some more.</p>
]]></summary>
</entry>
<entry>
    <title>On QA Automation Blogposts</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2016-09-18-on-qa-automation-blogposts.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2016-09-18-on-qa-automation-blogposts.html</id>
    <published>2016-09-18T00:00:00Z</published>
    <updated>2016-09-18T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on September 18, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/test-automation.html">test-automation</a>, <a href="/tags/writing.html">writing</a>
    
</div>

<p>I’ve been reading up on the topic of test-automation.</p>
<p>One kindof useful resource has been <a href="https://www.thoughtworks.com/insights/software-testing">ThoughtWorks’ insights blog</a>, but my feelings towards this are mixed.<br />
Some of the posts have great insights, others are more mundane; and there’s a fetishization of nouns which makes wading through the bullshit to find the useful tips all that much harder.</p>
<p>As an example of the latter; in response to DHH saying “TDD is dead”, everyone apparently blew-their-fucking-minds. – That makes no sense to me, unless you’ve fetishized ‘TDD’ to mean ‘some specific thing which is the best, &amp; which we all should do’.<br />
Which is bullshit.<br />
Either your current practices in making software work well, in which case it doesn’t matter one way or the other whether ‘TDD’ is proclaimed ‘dead’; or there are ways you can improve your software development (in which case, it doesn’t matter whether ‘TDD’ is proclaimed better than Jesus).</p>
<p>(After reading Steve Yegge’s <a href="http://steve-yegge.blogspot.sg/2008/02/portrait-of-n00b.html">“Portrait of a n00b”</a>, I suspect closer to the truth is “all software is bad, all the time”; but that some approaches are less-bad in some circumstances).</p>
<p>If programmers had better propensity for moderation, this wouldn’t be so bad.</p>
<p>But fetishizing nouns is more annoying noise than anything else. (Although I suspect it also indicates immaturity).<br />
The other flavours of blogposts tend to come in 1) “here’s this fundamentally useful concept you might not’ve heard of”. (e.g. describing the Test Pyramid, or that tests should assert about behaviours, executable specifications should be written declaratively, etc.), 2) “here are good ideas for ways to do things”.</p>
<p>The trouble with “here are good ideas” is … it comes across as “obvious” while everyone’s still unable to readily apply it. e.g. one blogpost discussed “what to automate”: it mentioned ‘repeated, tedious/painful processes’, which makes sense, but the more salient point written was that “when you’re busy, you might not notice that these things can/should be automated”.<br />
– Simply saying “automate tedious/repetitive processes” is tautological. Saying “be aware that there may be things you’d benefit from automating” comes from experience.</p>
<p>It’s largely natural for programmers to ‘program’ without considering testability of their code. Some computations are hard to test. – I wish the blogposts were focussed more on “here’s why we ended up in a state where testing became difficult” (or, “here’s how we’ve improved; here’s why we were doing things we’ve improved-from”).</p>
]]></summary>
</entry>
<entry>
    <title>On Wet Shaving</title>
    <link href="http://www.rgoulter.com/blog//posts/2016-09-04-on-wet-shaving.html" />
    <id>http://www.rgoulter.com/blog//posts/2016-09-04-on-wet-shaving.html</id>
    <published>2016-09-04T00:00:00Z</published>
    <updated>2016-09-04T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on September  4, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/wet-shaving.html">wet-shaving</a>, <a href="/tags/singapore.html">singapore</a>
    
</div>

<p>It occurs to me I’ve never written about wet-shaving on this blog.</p>
<p>“wet-shaving”, I’d say, is shaving not-with foam-from-a-can / cartridge-razor. So, using a shaving-brush with some shaving-soap (or shaving-cream), lathering the soap for the face, + using a safety/double-edged razor (or a straight-razor) to shave.<br />
Pretty old-school. – I guess in the same way that programmers now may prefer mechanical keyboards, in a “like how it used to be” kindof way, wet-shaving is healthier, cheaper, more luxurious way of shaving.</p>
<p>“Healthier / more luxurious” is nice, but it’s surely striking that it needn’t be all that expensive. If it’s well known that cartridge-razors’ price model is to “sell the razor cheap, the cartridges expensive”, then it’s kindof odd that people would opt for that rather than “expensive razor, cheap blades”.<br />
– As a <em>downside</em>, the main downside to wet-shaving is it can take much longer, and is more difficult than using a cartridge-razor. (Another “downside” is you’ll naturally want to get more out of your shave; you’ll care about your face more than you did before).</p>
<p>Wet-shaving has a strong online community, with plenty of advice / suggestions. – Though, pretty much everything is a matter of “whatever works; whatever is most comfortable for you”.</p>
<p>For Singapore, there’s an online community, sure. Buying supplies is a bit harder. Mustafa Centre sells cheap razors + cheap blades, as well as e.g. Tabac soaps, etc. – Though there’s less variety there now than there was.<br />
– A recommendation I saw was to order from <a href="http://connaughtshaving.com/">Connaught Shaving</a>; where apparently the shipping cost is free if you order enough (even though the website says this only applies to US, UK, CA). – When I ordered a couple of hundred blades from them, the shipping was 2GBP.<br />
– It’s prob’ly worth picking up a good DE razor. (For myself, I’ve got a Goodfella DE razor; albeit it’s prob’ly too expensive to get outside of NZ).</p>
<p>Of DEs vs Safety Razors, my impression is, the initial investment for SRs is much higher.. prob’ly the biggest difference in effort is maintenance of the blade. DEs take disposable blades; SRs need to be stropped before each shave, and as the blade blunts after some time, the blade then needs to be honed. – So not only is it a higher investment of money, there’re more skills required to use it. (This isn’t helped by that, apparently, outside the US it can be difficult to find a honemeister who can hone a SR for you).</p>
<p>– I think some people enjoy reading reviews about expensive products. (Like cameras or laptops, or fountain-pens or whatever). I’d think wet-shaving is perfect for such people, since there’re various pre-shave oils, soaps (and shaving creams), shaving brushes, DE razors &amp; DE blades, aftershave splashes, post-shave balms, etc.<br />
But even aside from the over-enthusiastic madness, I’d say that just for the (potentially) lower cost for wet-shaving, it’s worth trying.</p>
]]></summary>
</entry>
<entry>
    <title>RWBY's Arkos Ship is Adorable</title>
    <link href="http://www.rgoulter.com/blog//posts/romance/2016-08-24-rwbys-arkos-ship-is-adorable.html" />
    <id>http://www.rgoulter.com/blog//posts/romance/2016-08-24-rwbys-arkos-ship-is-adorable.html</id>
    <published>2016-08-24T00:00:00Z</published>
    <updated>2016-08-24T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on August 24, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/media.rwby.html">media.rwby</a>
    
</div>

<p>Recently I went back and re-watched <a href="https://www.youtube.com/watch?v=hq1lk-QWxNg">RWBY’s Volume 3, Chapter 12</a>.<br />
Spoilers (up to end of Season 3) below; although I reckon RWBY’s story is good enough that it wouldn’t be “spoiled” by lack of surprise.</p>
<p>I also had some fun watching some of the reaction videos for the episode.<br />
I’m not a big fan of reaction videos in general; nothing against them, it’s just I’d rather watch the video myself than see someone else watch it.<br />
– But V3C12 (or, S3E12) is so intense that it’s a lot of fun to share the reaction with them. – And, also, watching these videos, you can’t help but notice “wow, these people are geeks like me”. &lt;3 – The other benefit is the fans will each point out details of the episode I didn’t notice.</p>
<p>The episode’s first half concludes the combat which has been raging since Volume 3 Chapter 10. – For a show which’d previously been very skimpy on fighting scenes, it’s suffice to say this is an <em>intense</em> sequence.<br />
But chiefly, Pyrrha finally kisses Jaune, then she goes off to battle the big boss baddie and gets killed.</p>
<hr />
<p>I found it a delight to search “Arkos” on YouTube and come across <a href="https://www.youtube.com/watch?v=rECjoGkVz20">“The Shipping Corner: Arkos”</a> from Romance Scrooge.<br />
– The video does a great job discussing the ship between Jaune Ark and Pyrrha Nikos. (NiKos? … took me a long time to get that one).</p>
<p>Maybe worth mentioning, and not obvious to me, but together with the other two on their team (Nora and Ren, who are also shipped together, but currently not “together together”), the characters are loosely based upon cross-dressers: Ren is Mulan, Nora is Thor; Jaune Ark is … Joan of Arc, Pyrrha Nikos is Achilles.<br />
– Small touch, but Pyrrha is shot in the Achilles Heel before her death.</p>
<p>– Anyway, yeah, what I liked about the video is it did a good job of explaining why the relationship was mutually beneficial between Pyrrha and Jaune. Otherwise it’s quite clear that he’s certainly with a better person.<br />
In a way there’s a kind-of symmetry to them: Pyrrha recognises potential in Jaune that others fail to see it; Jaune recognises humanity in Pyrrha where others fail to see it. (&amp; Jaune’s potential increasingly becomes realised under Pyrrha’s mentorship; Pyrrha’s humanity increasingly comes to fore ’till she decides her duty/pursuit of destiny was more important).</p>
<p>(Personally my favourite AMV under the search is <a href="https://www.youtube.com/watch?v=E0uh49_S3X0">this one</a>. &lt;3 the fan art, n’awwwh).</p>
<hr />
<p>Even so, I’d like to keep track of some of the great moments for the Arkos ship. Forgiving out-of-order:</p>
<ul>
<li><p><a href="https://youtu.be/hq1lk-QWxNg?t=3m35s">V3C12</a> (from 3:35) they finally kiss. You can see the conflict in her eyes, which harkens to..</p></li>
<li><p><a href="https://youtu.be/u7uU_tKYHiM?t=9m33s">V3C8</a> (from 9:33), Jaune comes to comfort Pyrrha; seeing she’s got something on her mind.</p></li>
</ul>
<p>This in turn mirrors</p>
<ul>
<li><p><a href="https://youtu.be/i7wkw3yEbvQ?t=3m33s">V2C6</a> where Pyrrha encourages Jaune to have heart/courage for asking Weiss to the dance. – But just the way she walks as Nora admonishes her.</p></li>
<li><p>and <a href="https://youtu.be/nur1pCHD4hU?t=9m25s">V2C5</a> was where Jaune admits he’s interested in asking another girl to the dance.</p></li>
<li><p>V2C5 opens with an awesome combat sequence of Pyrrha fighting.</p></li>
<li><p>The dance itself, <a href="https://youtu.be/0-f-mGvOba8?t=2m27s">V2C7</a>, Pyrrha gives a heart-felt confession that the way others treat her makes her feel isolated; but that the way Jaune treats her has allowed her to make friends. (Jaune <a href="https://youtu.be/0-f-mGvOba8?t=6m55s">later following-through with his promise</a> to her).</p></li>
<li><p>V1C11-14, The <a href="https://youtu.be/N5D0NDAR8sU">Jaundice</a>, <a href="https://youtu.be/M_Loqu0jo7k">II</a>, <a href="https://youtu.be/h0QiT-GxN6k">Forever Fall</a>, <a href="https://youtu.be/PS9huFMmSoc">II</a> arc (total runtime around 25 mins) is culminates in the first/most <em>awesome</em> fight Jaune really shows himself in. – After being bullied by Cardin at the beginning of the arc, (&amp; pissing Pyrrha off by harshly rejecting her offer of help), Jaune stands up to fight this big Ursa monster.<br />
– Jaune then accepts Pyrrha’s mentorship.<br />
The parallels are cute here: Both Pyrrha and Jaune feel they have a duty to live up to something great; though Pyrrha’s actually good where Jaune isn’t (at least initially). At the beginning of the arc, Cardin stands over Jaune in victory, remarking that he hoped a monster in the wild would eat him; at the end of the arc, Jaune stands over Cardin, after having defeated the monster which was about to eat Cardin.</p></li>
<li><p>There’re various tidbits in how they come to meet early on in the first volume: V1C4-8 (<a href="https://www.youtube.com/watch?v=H09KTtyElWQ">The First Step</a>, <a href="https://www.youtube.com/watch?v=1JZgPfbKbU4">II</a>, <a href="https://www.youtube.com/watch?v=N1TJ5YA3jfw">The Emerald Forest</a>, <a href="https://www.youtube.com/watch?v=z8wPhihrzvU">II</a>, <a href="https://www.youtube.com/watch?v=ctiDu69kIho">Players and Pieces</a>),</p></li>
<li><ol start="4" style="list-style-type: decimal">
<li>Pyrrha’s first appearance; she meets Jaune as everyone is excited about which teams they’ll get to be on,</li>
</ol></li>
<li><ol start="5" style="list-style-type: decimal">
<li>Pyrrha chooses to team up with Jaune,</li>
</ol></li>
<li><ol start="6" style="list-style-type: decimal">
<li>Pyrrha unlocks Jaune’s aura after he suffers a cut to the face.</li>
</ol></li>
<li><ol start="7" style="list-style-type: decimal">
<li>They run away from a deathstalker,</li>
</ol></li>
<li><ol start="8" style="list-style-type: decimal">
<li>Jaune forms as team leader of JNPR, as they kill the deathstalker.<br />
Pyrrha is happy. (This is also, imho, the coolest fight in RWBY so far; “Red Like Roses” is such an awesome soundtrack to the fight).</li>
</ol></li>
</ul>
<p>That covers the highlights, for me; but some other tidbits:</p>
<ul>
<li><p><a href="https://youtu.be/-p4iS_p3b8E">V2C12</a>: The finale of Volume 2 features a brief incursion of evil monsters into the city. Pyrrha, from a distance, is glad to see Jaune improved in being able to take care of himself in combat.</p></li>
<li><p><a href="https://youtu.be/RzEo0F8thL4">V3C2</a> has them in a tournament fight.<br />
It’s a little cringe-worthy, but Jaune mentions that Ren and Nora are team “flower power”. This leads Pyrrha to ask “so what’s our ‘team name’?”. She’s less than enthused about the name “Arkos”.</p></li>
</ul>
<p>I guess the light-hearted RWBY-Chibi has a few more. <a href="https://youtu.be/WW3Pm5pdajw?t=1m45s">RWBY Chibi 9</a> features a game of tag, Pyrrha tags Jaune. (One of the fan-submitted subtitles, now sadly gone, was “You’re mine tonight”, ha).</p>
<h3 id="shoulder-love">Shoulder Love</h3>
<p>It’s also a bit strange, but it seems that shoulders play an important part of their relationship. Mostly in terms of touching-shoulder as encouragement.</p>
<ul>
<li><p>In the opening screen in Volume 1, Pyrrha touches Jaune on the shoulder. In Volume 2, Jaune touches Pyrrha on the shoulder.</p></li>
<li><p>V1C6 (Emerald Forest): Here she touches his cheek/chest, not his shoulder; <em>but</em> her line of dialogue features “by my shoulder, protect thee”.</p></li>
<li><p>V1C8 (Players and Pieces), Pyrrha affectionately hits Jaune on the arm as congratulations.</p></li>
<li><p>V1C12 (Jaundice II), she’s touches him on the shoulder, encouraging him (before he admits that he faked his way into the academy).</p></li>
<li><p>V2C5 (Extracurricular), as he admits he wants to ask another girl to the dance, she touches his shoulder in encouragement.</p></li>
<li><p>V2C7 (Dance Dance Infiltration), he reaches for her shoulder as she goes away, after she’s made her confession.</p></li>
<li><p>V3C8 (Destiny) Pyrrha rests her head on Jaune’s shoulder.</p></li>
</ul>
<p>If nothing else, I guess that highlights just how much of their relationship is mutual faith and encouragement.</p>
<hr />
<p>The other thing I noticed re-watching the above; Ruby and Weiss’s partnership improves dramatically. W. can’t stand R. at the beginning; W.’s pride tells her that <em>she</em> should have been leader, and R. isn’t so competent. – Yet by this latest episode, W. follows R.’s leadership as Ruby makes the heroic decision to go after their missing friends in the city devastated by monsters. – That character growth/development is a really nice touch.</p>
]]></summary>
</entry>
<entry>
    <title>On Revising in Programming and Blogging</title>
    <link href="http://www.rgoulter.com/blog//posts/meta/2016-08-16-on-revising-in-programming-and-blogging.html" />
    <id>http://www.rgoulter.com/blog//posts/meta/2016-08-16-on-revising-in-programming-and-blogging.html</id>
    <published>2016-08-16T00:00:00Z</published>
    <updated>2016-08-16T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on August 16, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/programming.html">programming</a>, <a href="/tags/writing.html">writing</a>
    
</div>

<p>In one of the more fascinating sidebars in “The Cucumber Book”, Dan North discusses his first experience pair-programming with Martin Fowler; initially aghast that Fowler spent time re-arranging the test code (and at times, duplicating) snippets of code.. until realising the improvement the changes brought: the test code became a more readable story.<br />
(The principle “Don’t Repeat Yourself” was superseeded by – wait for it – Direct And Meaningful Phrases).</p>
<p>I mention that because it draws a connection between programming and writing.<br />
– Two areas which at first glance share much in common (both involve textual content), then not so much in common (computationally interpreted texts by computers vs naturally interpreted texts by people; so further connections are usually interesting to make.</p>
<p>Anyway. I bring that up because recently I’ve had fun tinkering with old side-projects of mine. (<a href="http://www.commitstrip.com/en/2014/11/25/west-side-project-story/">Obligatory commitstrip</a>). – Don’t be shocked, but such play-around side-projects tended to be in fairly unmaintainable conditions: a bad (or absent) README file; poor (or absent) documentation; poor (or absent) tests. (Let alone other things, like how easy the project is to get up and running, file organisation, etc.).</p>
<p>It’s kind of fun to do this tinkering, especially with the goal in mind of improving maintainability and/or how polished the project is, since there’s a feeling of bringing order where there was disorder.<br />
– In doing so, a lot of this involves re-reading code; code that was written a long time ago. I reckon this has helped me to value the importance of documenting things, and on commenting about subtle concepts which explain why things were written the way they were. (A counter-lesson of learning between bullshit documentation and good documentation probably needs me to neglect the side-project for another half-year or so before coming back to it).<br />
This maintenance also makes it clear that more time will be spent reading the code than is spent writing it. In the case of my side-projects, presumably I’m the only one even reading it.</p>
<p>But I find when I write blogposts, I usually hate re-reading what I’ve written. (The same applies for writing for schoolwork). – It’s not that I never hit the backspace key before I publish the post, though.</p>
<p>I know that for authors, writing a book involves not just putting words on the page, but a process of editing and re-writing.</p>
<p>My blog and my programming side-projects have similar standing: Neither are apparently wildly popular, but I still find value in writing them for my own sake.<br />
– However, by parallel, just as the code in my side-projects were in an abysmal state when unmaintained, it’s hardly a stretch to say that my blogposts (and my writing ability) .. would improve with attention.</p>
<p>– To be honest, I do feel bad about this neglected state for a handful of my blogposts: the ones which are found high-up in Google searches for particular keywords (particularly my SBT v Gradle, and OneNote v Org-Mode posts); there’s a clear difference between what I’d expect to read for the title, and what the post contains.<br />
For opinion-based posts, though, it’s disingenuous to silently make edits without notice. (On the other hand, if old opinions cannot be removed, that makes it possible to attack someone for an opinion they used to hold, and people can be silly enough to do that).</p>
]]></summary>
</entry>
<entry>
    <title>Cinematic Lego Games</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2016-08-11-cinematic-lego-games.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2016-08-11-cinematic-lego-games.html</id>
    <published>2016-08-11T00:00:00Z</published>
    <updated>2016-08-11T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on August 11, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/media.lego.html">media.lego</a>
    
</div>

<p>Lego Star Wars: The Complete Saga is a classic game worth having in your library. (Ironically, it’s not the <em>complete</em> saga of the Lego games).<br />
– Since then, there’ve been many other Lego games of the same style, like Lego Indiana Jones, Batman, Harry Potter, etc.; the most recent one being for Star Wars: The Force Awakens.</p>
<p>If you’ve played the more recent ones, I think LSW:TCS perhaps comes across as a bit archaic, but there’s something so charming about it.<br />
The gameplay is ‘simple’. Smash stuff in the world to get points, solve puzzles to get through the level or to get collectibles. – The ‘puzzle’ part comes in terms of, you need a Jedi character to do Jedi things, a droid to do droid things, etc. – Playing with the characters of movies in Lego form really is kindof adorable.</p>
<p>Part of what else is charming about the old classic is there’s no dialogue; so the story plays out (&amp; probably only makes sense) if you’ve seen the movie.<br />
Sometimes with jokes thrown in.<br />
The newer Lego games (I’m not sure since when, but I know Lego: Lord of the Rings has it) instead feature dialogue.</p>
<p>As well as voice-dialogue, Lego LOTR adjusts the “you need this character to unlock this puzzle” formula: it’s more item-based, so you need a fishing-rod to fish, a bow &amp; arrow to shoot targets, etc.; these are items which some characters will have (e.g. Legolas has bow &amp; arrow; Gimli has an axe), or which can be unlocked as a collectible.<br />
– The other cool thing about Lego LOTR is that, between chapters of the story, your characters get to freely roam around a small-scale Middle Earth. (So you can simply walk into M.. etc. etc.).</p>
<p>– After replaying through these two, I decided to pick up Lego Star Wars: The Force Awakens, for the PS Vita.<br />
It’s still a bunch of fun, but certainly feels more sophisticated than the aforementioned. – e.g., For situations when you need to interact with a particular puzzle with a particular character, LSW:TFA let’s you quickly switch to that character with the press of a button.<br />
LSW:TFA also adds on some cover-based shooting sections throughout the levels, which felt a bit gimmicky, but managed to still retain the essence of the action + puzzle-solving that the rest of the game has.</p>
<p>These are all still pretty fun to play. I’m not sure if it’s true for all the Lego games, but for these three at least, they get to borrow the music from their source films, and the music of Star Wars and Lord of the Rings is also pretty good.</p>
]]></summary>
</entry>

</feed>
