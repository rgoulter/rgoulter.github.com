<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Richard Goulter's Blog</title>
    <link href="http://www.rgoulter.com/blog//atom.xml" rel="self" />
    <link href="http://www.rgoulter.com/blog/" />
    <id>http://www.rgoulter.com/blog//atom.xml</id>
    <author>
        <name>Richard Goulter</name>
        <email>richard.goulter+blog@gmail.com</email>
    </author>
    <updated>2016-03-13T00:00:00Z</updated>
    <entry>
    <title>Arduino Spaceship Interface in the Atom DSL</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2016-03-13-arduino-spaceship-interface-in-the-atom-dsl.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2016-03-13-arduino-spaceship-interface-in-the-atom-dsl.html</id>
    <published>2016-03-13T00:00:00Z</published>
    <updated>2016-03-13T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 13, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/programming.arduino.html">programming.arduino</a>, <a href="/tags/programming.c.html">programming.c</a>, <a href="/tags/programming.atomdsl.html">programming.atomdsl</a>
    
</div>

<p>In my <a href="../../posts/programming/2016-03-12-explaining-pure-c-blink-example.html">previous post</a>, I discussed some of the simple details behind a pure C example programming an Arduino.<br />
Using that understanding, I was able to implement a pure C implementation of the <a href="https://www.arduino.cc/en/ArduinoStarterKit/Prj02">Spaceship Interface</a> project. (“Spaceship Interface” = “green LED + 2 blinking red LEDs”, btw).</p>
<p>The <a href="https://hackage.haskell.org/package/atom-1.0.13">Atom EDSL</a> is a DSL embedded in Haskell; and is advantageous in <a href="https://haskellembedded.github.io/posts/2015-02-06-how-i-got-here.html">certain use cases</a>. (That “Haskell Embedded” blog is fascinating – well worth reading; and one of the few places online to have a <a href="https://haskellembedded.github.io/posts/2015-02-17-atom-examples.html">fairly involved</a> example of Atom code).</p>
<p>Translating the code to Atom wasn’t too hard. (If you’re willing to relax your definition of “translation”; my Atom implementation stops ‘blinking’ <strong>as soon as the switch is released</strong>, whereas the Arduino implementation delays up to 250ms. – My translation captures the essence).<br />
I thought it’d be an interesting, simple comparison.</p>
<p>Code examples in Arduino, pure C, and Atom can be found at <a href="https://github.com/rgoulter/arduino-atom-examples">rgoulter/arduino-atom-examples</a>.<br />
e.g. <a href="https://raw.githubusercontent.com/rgoulter/arduino-atom-examples/059aa93be42f4f523aa4802a69fbdb7ec95f9d33/blink/atom/blink.hs">the Blink example in Atom</a>, for a look at a less-involved Atom example.</p>
<p>The main snippet from <a href="https://raw.githubusercontent.com/rgoulter/arduino-atom-examples/059aa93be42f4f523aa4802a69fbdb7ec95f9d33/spaceshipinterface/c/spaceship.c">the C code</a>:</p>
<pre><code>if (switchState == 0) {
    /* enable PortD3 (green), disable PortD4 &amp; PortD5 (red) */
    PORTD |= _BV(PORTD3);
    PORTD &amp;= ~(_BV(PORTD4) | _BV(PORTD5));
} else {
    /* disable PortD3 (green) */
    PORTD &amp;= ~_BV(PORTD3);

    /* disable PortD4, enable PortD5 (red) */
    PORTD &amp;= ~_BV(PORTD4);
    PORTD |= _BV(PORTD5);
    _delay_ms(BLINK_DELAY_MS);

    /* enable PortD4, disable PortD5 (red) */
    PORTD |= _BV(PORTD4);
    PORTD &amp;= ~_BV(PORTD5);
    _delay_ms(BLINK_DELAY_MS);
}</code></pre>
<p>The <em>whole</em> Atom code (<a href="https://raw.githubusercontent.com/rgoulter/arduino-atom-examples/059aa93be42f4f523aa4802a69fbdb7ec95f9d33/spaceshipinterface/atom/Spaceship.hs">src</a>):</p>
<pre><code>{-# LANGUAGE QuasiQuotes #-}
module Spaceship (main) where

import Text.Heredoc
import Language.Atom

greenLED = &quot;PORTD3&quot;
redLED1  = &quot;PORTD4&quot;
redLED2  = &quot;PORTD5&quot;

ledOn  led = action (\v -&gt; &quot;PORTD |= _BV(&quot; ++ led ++ &quot;)&quot;)  []
ledOff led = action (\v -&gt; &quot;PORTD &amp;= ~_BV(&quot; ++ led ++ &quot;)&quot;) []

-- | Our main Atom program.
spaceship :: Atom ()
spaceship = do
    switchState &lt;- bool &quot;switchState&quot; True

    -- read into switchState
    call &quot;readButton&quot;

    atom &quot;standBy&quot; $ do
        cond $ not_ (value switchState)
        ledOn greenLED
        ledOff redLED1
        ledOff redLED2

    atom &quot;blinking&quot; $ do
        cond (value switchState)
        ledOff greenLED

        let halfDelay = 25000
        let blinkPeriod = 2 * halfDelay

        period blinkPeriod $ phase 0 $ atom &quot;blink1&quot; $ do
            ledOff redLED1
            ledOn  redLED2

        period blinkPeriod $ phase halfDelay $ atom &quot;blink2&quot; $ do
            ledOn  redLED1
            ledOff redLED2

cHeader :: String
cHeader = [here|
#include &lt;avr/io.h&gt;

static inline void readButton(void);
|]

cFooter :: String
cFooter = [here|
static inline void readButton() {
    // read switch state into the Atom variable
    state.Spaceship.switchState = (PIND &amp; _BV(PORTD2)) != 0;
}

int main (void) {
    // Set input PD2,
    // Set output PD3, PD4, PD5
    DDRD &amp;= ~_BV(DDD2);
    DDRD |= _BV(DDD3) | _BV(DDD4) | _BV(DDD5);

    while(1) {
        Spaceship();
    }

    return 0; // Never reaches
}
|]

main :: IO ()
main = do
    let atomName = &quot;Spaceship&quot;
    let code _ _ _ = (cHeader, cFooter)
    let cfg = defaults {cCode = code,
                        cRuleCoverage = False,
                        cAssert = False}
    (schedule, _, _, _, _) &lt;- compile atomName cfg spaceship
    putStrLn $ reportSchedule schedule</code></pre>
<p>Remarks:</p>
<ul>
<li><p>There’re obviously other ways of writing the “interface with C” bits in the Haskell code. – There’re other ways to implement the C code, too.</p></li>
<li><p>The Atom code <strong>is</strong> longer.<br />
<em>But</em>. In a contest between “which is more obvious to read?”, I’d say the Atom code wins hands-down, once you understand that Atom is declarative. (Only 1 comment in the Atom part!).<br />
– In a contest of “refactorability”/“changeability”, surely Atom wins here, too: the seam-points and abstractions, and thus <em>where</em> and <em>what</em> to change, are evident.<br />
– The extra length comes from various `atom “ruleName $ do” lines (which build ‘abstractions’ of instructions), as well as the Atom boilerplate, and the C footer/header to do the low-level operations (where the code is basically the same as my C implementation).</p></li>
<li>If I must explain on the program:<br />
It’s structured:
<ul>
<li>Stuff which <code>spaceship :: Atom ()</code> uses,</li>
<li>The main Atom program (<code>spaceship :: Atom ()</code>),<br />
– This is further broken down into “declaration (of a variable)”, and the various “rules” of “compute-what, when-what, at what period/phase”.</li>
<li>The C interface &amp; low-level code,</li>
<li>The Atom boilerplate.</li>
</ul></li>
<li><p>Haskell usually has a promise like “if it compiles, it works” (with a footnote of “until you get a memory leak”). – Whether that applies to Atom constructs depends on the Atom compiler.</p></li>
<li><p>There are implicit couplings between the Atom and the C code in the above program: <code>state.Spaceship.switchState</code> (in the C) depends on variables in Haskell’s <code>main</code>, as well as in the <code>spaceship :: Atom ()</code> construct. – Similarly, <code>ledOn</code>, etc. in Haskell reference <code>PORTD</code>.<br />
– I’m not sure how to minimise such couplings.</p></li>
<li><p>For a contrivedly (or, pedagogically) simple program, the advantage to using Atom is outweighed by the length.</p></li>
<li><p>The <code>25000</code> seems pretty magic to me. (And I guess if you need precise timing, you’d be more explicit about that in the C code).</p></li>
<li><p>Wow, Make <a href="https://raw.githubusercontent.com/rgoulter/arduino-atom-examples/059aa93be42f4f523aa4802a69fbdb7ec95f9d33/spaceshipinterface/atom/Makefile">can be useful</a>.</p></li>
</ul>
]]></summary>
</entry>
<entry>
    <title>Explaining Pure C Blink Example</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2016-03-12-explaining-pure-c-blink-example.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2016-03-12-explaining-pure-c-blink-example.html</id>
    <published>2016-03-12T00:00:00Z</published>
    <updated>2016-03-12T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 12, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/programming.c.html">programming.c</a>, <a href="/tags/programming.arduino.html">programming.arduino</a>
    
</div>

<p>I’ve been playing around with an Arduino Uno this past week.</p>
<p>I came across <a href="https://balau82.wordpress.com/2011/03/29/programming-arduino-uno-in-pure-c/">this post from balau82</a>: it gives a basic “blink” example program in C, and a high-level overview of how to come up with such a program.<br />
The high-level overview wasn’t obvious for me, so I’d complement that blogpost with this, to explain in further detail.</p>
<p>e.g. When the post says:</p>
<blockquote>
<p>from the <a href="https://www.arduino.cc/en/uploads/Main/arduino-uno-schematic.pdf">Arduino Uno schematics</a> we can find out where the pins are connected, for example we can find that the LED is connected to the PB5 pin of the Atmega328p chip</p>
</blockquote>
<p>These are the pertinent details of the schematic:</p>
<div class="figure">
<img src="http://i.imgur.com/8oNoyZL.png" />

</div>
<ul>
<li>The Arduino board also has an ‘L’ beside the LED.. and the in-built LED is <a href="https://www.arduino.cc/en/Tutorial/Blink?from=Tutorial.BlinkingLED">on ‘Pin 13’</a> (thus the green 13, I guess).</li>
<li>PB5 is the name of the pin on the ATmega328P controller. (<a href="http://www.atmel.com/images/Atmel-8271-8-bit-AVR-Microcontroller-ATmega48A-48PA-88A-88PA-168A-168PA-328-328P_datasheet_Complete.pdf">Datasheet here</a>).</li>
</ul>
<hr />
<p>Looking at snippets from the code:</p>
<pre><code>int main (void) {
 DDRB |= _BV(DDB5); /* set Port B bit-5 to output */

 while(1) {
  PORTB |= _BV(PORTB5); /* turn on LED */
  ....
 }
}</code></pre>
<p>This left a novice like me with questions:<br />
Where do these constants come from? What’s <code>DDRB</code>? How does <code>DDB5</code> refer to PB5? Why <code>PORTB = ...</code> to change the LED? What’s the difference between <code>DDB5</code> and <code>PORTB5</code>?<br />
(At least I understood the <code>magicVar |= 1 &lt;&lt; 5</code> &amp; <code>magicVar &amp;= ~(1 &lt;&lt; 5)</code> bitmasking. – my <a href="https://github.com/rgoulter/c-worksheet.vim">C-Worksheet</a> is useful for playing around with this, also, btw).</p>
<ul>
<li><p><strong>Where do these (macro) constants come from?</strong><br />
Well, look at the <code>#include &lt;avr/io.h&gt;</code>. (Probably found in <code>/usr/lib/avr/include</code>), and the <a href="http://www.nongnu.org/avr-libc/user-manual/group__avr__io.html">online reference</a>:<br />
it includes <a href="http://www.nongnu.org/avr-libc/user-manual/group__avr__sfr.html">avr/sfr_defs.h</a> (SFR = Special Function Registers), which has the <code>_BV</code> macro as well as explaining the <code>sfr |= _BV(bit)</code> replacing some <code>sbi (sfr, bit)</code> instruction. – The specific file (in this case, <code>avr/iom328p.h</code>) defines the <code>DDB5</code>, etc. macros.</p></li>
<li><p><strong>What’s <code>DDRB</code>?</strong><br />
Reading the datasheet, Ctrl-F for <code>DDR</code> leads us to Section 14.2 “Ports as General Digital I/O”.</p>
<blockquote>
<p>Each port pin consists of three register bits: DDxn, PORTxn, and PINxn. As shown in ”Register Description”, the DDxn bits are accessed at the DDRx I/O address, the PORTxn bits at the PORTx I/O address, and the PINxn bits at the PINx I/O address.<br />
The DDxn bit in the DDRx Register selects the direction of this pin. If DDxn is written logic one, Pxn is configured as an output pin. If DDxn is written logic zero, Pxn is configured as an input pin.</p>
</blockquote>
<p>DDR = Data Direction Register. Ohhh.[1]<br />
<code>DDRB</code> is the byte (of the data direction of Port B), <code>DDB5</code> for referring to Port B (x = B), and its 5th bit (n = 5). (The register summary in Section 35, p615 shows this).</p>
<p>So, when the Arduino code has:</p>
<pre><code>pinMode(13, OUTPUT);</code></pre>
<p>it is <strong>essentially</strong> equivalent to:</p>
<pre><code>DDRB |= _BV(DDB5);</code></pre>
<p>….Obviously.[2]</p></li>
<li><p><strong>How does <code>DDB5</code> refer to PB5?</strong><br />
It just does?<br />
PB5 is the 5th bit of Port B. (Section 1.1.3).<br />
Section 14 also has this to say:</p>
<blockquote>
<p>Three I/O memory address locations are allocated for each port, one each for the Data Register – <code>PORTx</code>, Data Direction Register – <code>DDRx</code>, and the Port Input Pins – <code>PINx</code>. The Port Input Pins I/O location is read only, while the Data Register and the Data Direction Register are read/write. However, writing a logic one to a bit in the PINx Register, will result in a toggle in the corresponding bit in the Data Register.</p>
</blockquote></li>
<li><p><strong>Why <code>PORTB = ...</code> to change the LED?</strong><br />
Because it’s the data register. Aforementioned sections of the datasheet should have made this clear by now.[3]<br />
There’s also compiler magic translating from <code>sfr |= _BV(bit)</code> to <code>sbi</code>/<code>cbi</code> etc. as explained in the avr-libc documentation. – Section 37 of the datasheet mentions <code>sbi</code> = “set bit in I/O register”, <code>cbi</code> = “clear bit …”.</p></li>
<li><p>What’s the difference between <code>DDB5</code> and <code>PORTB5</code>?<br />
This should be evident from above; one is for referring to the bit of a Data-Direction register, the other for the bit of Port B.<br />
– I think they both evaluate to <code>5</code>; so unless the compiler does any magic with them, I’m guessing one could incorrectly interchange them and the program would still work. – It’s kinda tempting to just write the number <code>5</code>, since the identifier has a <code>5</code> in it anyway..</p></li>
</ul>
<hr />
<p>The commands to compile and upload it I take on faith as “just work”. (Or, rather, I didn’t need to mess with them).</p>
<p><a href="https://raw.githubusercontent.com/rgoulter/arduino-atom-examples/059aa93be42f4f523aa4802a69fbdb7ec95f9d33/blink/c/Makefile">Here’s a Makefile</a> adapted from these commands, which will probably be useful. (<code>make upload</code> will build &amp; upload the program to an Arduino).</p>
<hr />
<p>I wanted to translate the <a href="https://www.arduino.cc/en/ArduinoStarterKit/Prj02">Spaceship Interface</a> (Project 02 of the book which comes with the Arduino Starter Kit) to C, also.<br />
The only difference from the Blink example is that the Spaceship Interface example reads input from a pin.</p>
<p>Following the aforementioned tutorial, the switch is in (Arduino) pin 2, and the LEDs in pins 3, 4, 5.<br />
From the schematic, this corresponds to PD2 .. PD5. (<code>%s/B/D/</code> is evident, even without the above understanding).</p>
<p>Reading from a pin should also be ‘easy’ from the above understanding.[4] – And, again, the <code>avr/sfr_defs.h</code> documentation mentions that <code>PORTx = 0x33; unsigned char i = PINx</code> will magically get translated to the correct instructions.</p>
<p>I was able to come up with <a href="https://gist.githubusercontent.com/rgoulter/9fcc09c6524ad882f477/raw/4c826aa5ee8ac5bd57baa2bad12d8fa7a2cb2b19/spaceship.c">this</a>. And it worked and I was so happy.</p>
<p>Then I translated the example to the <a href="https://hackage.haskell.org/package/atom-1.0.13">Atom EDSL</a>. Read about the fun in my <a href="../../posts/programming/2016-03-13-arduino-spaceship-interface-in-the-atom-dsl.html">next blog post</a>.</p>
<hr />
<p>[1] Reading is useful. But, on the other hand, the datasheet is like 600 pages long.</p>
<p>[2] Is it fair to call this ‘hard’ (for non-engineers), in the sense that all that isn’t obvious by looking at the C code &amp; blog? OTOH, math is hard, and that’s kindof a problem with the user, not the content.</p>
<p>[3] But writing lots of stupid questions is still useful for clarifying to yourself what you don’t know! – Indeed, asking questions in a programming journal is valuable even if you never get back to answering them, I’d say.</p>
<p>[4] Or from getting lucky by finding the example in Section 14 reading from <code>PINB</code>.</p>
]]></summary>
</entry>
<entry>
    <title>International Women's Day, Holidays, and Businesses</title>
    <link href="http://www.rgoulter.com/blog//posts/argument/2016-03-10-international-womens-day-and-businesses.html" />
    <id>http://www.rgoulter.com/blog//posts/argument/2016-03-10-international-womens-day-and-businesses.html</id>
    <published>2016-03-10T00:00:00Z</published>
    <updated>2016-03-10T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 10, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/international-womens-day.html">international-womens-day</a>
    
</div>

<p>My <a href="../../posts/argument/2015-03-10-silly-things-to-say-on-international-womens-day.html">previous post</a> about “Silly Things to Say on International Women’s Day” got some attention on International Women’s Day this year. I thought I’d continue the tradition of writing about it this year:</p>
<p>What I saw on Facebook this year was rather tame, but still interesting:<br />
Facebook presented a large banner, “Happy International Women’s Day” emblazoned, with a minimum-effort-required ‘Share’ button shown. A few of my friends did ‘Share’ this.<br />
Almost every other post about International Women’s Day were ones like this, from <a href="https://www.facebook.com/razer/photos/a.77781772575.101784.13848807575/10154659038967576/?type=3&amp;theater">Razer</a>. (“Happy International Women’s Day. We celebrate women.”).</p>
<p>The former is ‘interesting’ in terms of, how do people support things like this on social media, etc.. (On my Facebook feed, I didn’t see any manually written posts about the day, but that’s just my feed).</p>
<p>Now, the latter is very interesting in terms of how businesses ‘support’ such holidays:</p>
<p>Compare it to Christmas: On the one hand, everyone knows it’s observed by Christians as celebrating the birth of Jesus. Some businesses will say “Merry Christmas” or some “Happy Holidays”, depending on the cultural context &amp; whichever is more appropriate. (I know people who get upset at the former, and people who get upset at the latter. Among other things to get upset over about all this. Go figure. Anyway).<br />
– But it’s not <em>really</em> the case that businesses actually care about the-birth-of-Jesus: Christmas is valuable as a holiday, as a day for which people will spend money above-and-beyond the typical day of the year. - And if that’s why Christmas is important, then in contrast what Christmas allows is for the business to muscle for attention: ‘Christmas is special, and this message is special. Buy our stuff.’.<br />
– Usually it’s better for broad-appealing businesses to stay away from controversial topics (<a href="http://acculturated.com/catalog-culture-wars/">even topics controversial-by-proxy</a>); so if a broad-appealing business supports a message, it’s going to be a fairly ‘safe’ one. - Can’t condemn that.</p>
<p>And yet, just as Christmas has believers who care passionately about birth-of-Jesus celebrate this at Christmas,<br />
International Women’s Day serves as a platform for celebrations of the victories of the feminist movements, as well as <a href="https://pen.org/blog/march-featured-cases-celebrating-courageous-women-writers">grievance-mongering</a> for the plight of women in the Western world. (Basically, ‘situation as normal’).<br />
International Women’s Day is treated as a de-facto “Feminist’s Day”, as such.<br />
– So it’s also no surprise you also get posts like <a href="http://www.independent.co.uk/voices/international-women-s-day-2016-we-spoke-to-the-women-who-won-t-be-celebrating-a6917506.html">this from women who don’t call themselves feminists</a>, saying “boo feminists”; with statements hardly long enough to allow for more than a handful of “why I’m not a feminist” cliches among them. (It’s a bit frustrating that such brevity won’t further public discussion much, and I’d bet <a href="../../posts/argument/2014-07-19-women-against-women-against-feminism.html">only gets ire</a> from a “feminism is about equality” reader).</p>
<p>Putting two and two together:<br />
There’s the chance for more consumption if a tradition were pushed along the lines of “International Women’s Day: Give a gift to your feminist/women pals”. (Even better if we got a day off for it, too).</p>
]]></summary>
</entry>
<entry>
    <title>On Anger and Activists</title>
    <link href="http://www.rgoulter.com/blog//posts/argument/2016-01-31-on-anger-and-activists.html" />
    <id>http://www.rgoulter.com/blog//posts/argument/2016-01-31-on-anger-and-activists.html</id>
    <published>2016-01-31T00:00:00Z</published>
    <updated>2016-01-31T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on January 31, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/activists.html">activists</a>, <a href="/tags/politics.html">politics</a>
    
</div>

<p>Oh, activists. &lt;3</p>
<p>As a couple of examples, here’s <a href="http://idlewords.com/talks/what_happens_next_will_amaze_you.htm">IdleWord’s post</a> about how to fix online advertising. – It’s an insightful, well-informed piece, with thought-provoking conclusions.<br />
As another example, here’s <a href="https://howwegettonext.com/maximum-wage-3e21048fc107#.gz56hwayd">Steve Johnson’s discussion</a> of a ‘maximum wage ratio’. It’s less impressive, but still has some interesting discussion points.</p>
<p>In both of the above pieces, the authors discuss an issue they care passionately about, identifying concerning problems, and suggesting solutions which would fix the issue. So far so good. – But, then, both authors can’t help but go the next step and make jabs at their ideological opponents.<br />
Johnson’s piece includes a rather irrelevant paragraph about “well, you think SV is libertarian, but actually it’s not” (as if anyone things California is anything but a socially progressive state..). IdleWords can’t help but lambast people like Elon Musk, whom he thinks are working on unimportant products <em>while there are good things which still need to be done</em>. – <em>That</em> is a bad thing; it’s irrelevant to the issue they’re trying to progress. Whether it’d be in progress of equality for wage-ratio to be considered a metric isn’t affected by whether libertarians are cool or not. Whether various solutions to advertising would be beneficial for all involved doesn’t depend on whether the talented, rich and powerful are pursuing socially-left goals or not.<br />
– The motivation seems to be “these things are too important”, but the effect is that we’re left with a distraction with which to argue over.</p>
<p>I’d accuse that part of the motivation comes from an anger; the activist <em>cannot stand</em> their ideological opponent. The activist is the good guy, and anyone not helping is the bad guy. – And if someone’s a bad guy, you’re allowed to (and must!) take jabs at them.<br />
And in addition to the anger.. the activist’s attitude is one of ‘destruction’. It doesn’t matter if the activist isn’t nice, so long as the activist is <em>effective</em>.</p>
<p>– Yet, despite this, I can’t quite say activists are a bane.<br />
At the opposite end of the spectrum, there’s the attitude which says “Why be angry with everything? Life’s too short for that.”, “Why be angry with what you can’t change?”. I think this itself is in response to the outrage machine that fills social media; people getting angry over petty things which don’t impact them at all. This clearly isn’t constructive.<br />
Between these two extremes, one has to sympathise with the activist more: it’s clear that there are many problems to be solved. (I’ll qualify that, though, with that sometimes people will see problems where there are none. It suits those not in power to stir trouble for those in power. Much ink has been spilt as to which problems are ‘real’ or not, usually across political divides).</p>
<p>And it’s somewhat persuasive to say that changes don’t happen without some external force. Those who are in power will want to stay in power; those who aren’t in power will want to gain power. – This probably needs to be qualified, too: killing flies with howitzers is just too much, counterproductive. (And things get tricky: those in power will say the angry are using too much force, while the activists not in power will always say they <em>need</em> to use such power. Drama ensues).</p>
<p>With all the above understood simply (it’s not, it’s a complicated topic which needs nuance),<br />
what’s left is the issue of effectiveness and permanence.<br />
– In her <a href="http://status451.com/2015/12/21/totalizing-politics-and-insurance-rackets/">inaugural post for Status 451</a>, Meredith Patterson (who usually writes <em>outstandingly</em> well) writes with a sharp-axe-swinging. (Aside from 3 paragraphs, which praise some other women working on diversity efforts in tech, which are quite nice). In the post, Patterson asserts that divisive efforts for change bring about only temporary victory; and that cooperative efforts beat out those who are for “all vs all” or “some vs all”. (She links to <a href="https://www-ee.stanford.edu/~hellman/Breakthrough/book/pdfs/axelrod.pdf">an article</a> justifying this). – Meredith’s a smart person. I hope she’s right.</p>
]]></summary>
</entry>
<entry>
    <title>Drama in Romancelandia: On the Courtney Milan post about Bobbi Dumas</title>
    <link href="http://www.rgoulter.com/blog//posts/romance/2016-01-30-drama-in-romancelandia.html" />
    <id>http://www.rgoulter.com/blog//posts/romance/2016-01-30-drama-in-romancelandia.html</id>
    <published>2016-01-30T00:00:00Z</published>
    <updated>2016-01-30T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on January 30, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/discourse.html">discourse</a>, <a href="/tags/politics.html">politics</a>, <a href="/tags/diversity.html">diversity</a>
    
</div>

<p>One doesn’t tend to think of romancelandia as discordant.<br />
Perhaps I’ve not been reading romances long enough. You’d also think that a genre set on characters having Happily Ever Afters, where characters get along after conflicting disagreeing with each other (&amp; where the problem is <em>almost always</em> “poor communication”), wouldn’t have a problem with authors getting along with each other.</p>
<p>What drama?<br />
<a href="https://www.rwa.org/p/bl/et/blogid=20&amp;blogaid=1404">The RWA so daintily</a> describes the conflict:</p>
<blockquote>
<p>Romance Writers of America’s Board of Directors is aware of a difference in opinion regarding a column from a well-known reviewer on the subject of diversity and members of RWA who did not agree with the reviewer’s treatment of the subject.</p>
</blockquote>
<p>(RWA then goes on to say that ‘kids fighting in the playground’ (paraphrase) isn’t their business, unless it violates their Code of Ethics. Fair enough).</p>
<p>The “column from a well known reviewer” responsible for the drama being <a href="https://www.kirkusreviews.com/features/new-year-new-reading-resolutions/">this</a>, from Bobbi Dumas, wherein Dumas celebrates diversity in the romance genre, and recommends various diverse romance novels.<br />
Take the time to spot what’s problematic about it.</p>
<p>A prominent example of “difference of opinion” from a member of the RWA <a href="http://www.courtneymilan.com/ramblings/2016/01/29/speaking-up-against-systemic-racism-in-the-publishing-industry/">here</a>, Courtney Milan’s post “Speaking Up Against Systematic Racism in the Publishing Industry”, wherein Milan completely blasts Dumas for her post, particularly a quote stating “Kirkus doesn’t review enough diverse novels”, or so. The post also includes whispers and rumours of bad behaviour of the target, without providing an evidence/examples of this, as well as a “call to arms” to join in the good fight.<br />
Milan’s inferences here seem a little disingenuous to me, but anyway.</p>
<hr />
<p>For some added context, here’re various glimpses of various Twitter conversations. (I hope these are representative, and aren’t cherry-picking):</p>
<ul>
<li><p><a href="https://twitter.com/courtneymilan/status/692469486591569921">Here’s a rant</a> from Courtney Milan which could be summarised as “people who don’t read diverse (romance) novels are bad people”.<br />
Some gems:</p>
<blockquote>
<p>If I enumerated all the ways Bobbi’s latest post hurt the cause of diversity rather than helping, it would take me dozens of hours.</p>
</blockquote>
<p>“dozens of hours”? Fantastic hyperbole, in any case.</p>
<blockquote>
<p>If someone won’t read a contemporary, okay, fine. If someone won’t read a book about black people? That’s a racist.</p>
</blockquote>
<p>This is worth discussing a bit:<br />
The converse (“racists wouldn’t want to read a book about black people”) makes sense.<br />
But this seems to conflate ambiguities in “not interested”, as if the only reason to be not interested in a diverse book is hating diversity. (Trying this with similar statements: “If you don’t read books with white people, you hate white people” doesn’t work. “If you don’t read romances, you hate women” …).<br />
– Fun to consider is the extension of “you’re a bad person if you don’t like it”: looking for sins of anyone who rates a diverse book less than 5/5.<br />
(This’d all be less disingenuous without the ambiguity at play, btw, before going in and saying “the other person is bad”).</p>
<blockquote>
<p>And! Not only that! The post then goes on to explain that the author’s GOAL is to reach those people. The racists.<br />
That’s the important work she’s doing—reaching out to racists who don’t want to read about black people.</p>
<p>Um, hell no.</p>
</blockquote>
<p>Take the time to examine, unfold this:<br />
Milan seems to think it’s problematic that someone would suggest diverse books to people who don’t read diverse books. – I’m not sure how else people who don’t read diverse books are to know about them.<br />
More concerning than practicalities, though, is this “with me or against me” notion, exaggerated to “you’d better not <em>talk</em> to people who are against me”. (One implication of this, of not talking to “the other” is that those who are angry aren’t going to express their anger to “the other”, so we can expect more eats-their-own drama in the future).<br />
– Also worth noting is the notion that, Milan’s driving discontent isn’t that Kirkus reviews don’t review a diverse enough set of books, or that the bookshelves of libraries aren’t filled with diverse books, but that there are people who don’t read diverse books.</p>
<blockquote>
<p>“it’s 2016”</p>
</blockquote>
<p><a href="http://www.theonion.com/article/report-stating-current-year-still-leading-argument-35288">Stating Current Year Still Leading Argument For Social Reform - The Onion</a></p></li>
<li><p>Or tweets like <a href="https://twitter.com/O_Waite/status/691809939296247808">this</a>:</p>
<blockquote>
<p>Shorter Bobbi: “ME ME ME poc person ME ME unnamed friend ME ME Courtney Milan whom I admire so much I will write an extra 1k rebutting her.”</p>
</blockquote>
<p>Also note Courtney Milan’s reply “This isn’t”mocking&quot; her. It’s <em>calling her out</em> for repeatedly treating people badly. That’s not “nice.”&quot; (emphasis mine).<br />
While this is great snark, it’s clearly an inaccurate portrayal of where Dumas is coming from. (What Susie says about Sally says more about Susie than it does about Sally, or something). – But apparently the important thing is “<em>calling out</em>” inappropriate behaviour, so.</p></li>
<li><p>Understand that it’s not as if this anger is coming from nowhere. Consider tweets like <a href="https://twitter.com/Laforesta1/status/692504515904409600">this</a>:</p>
<blockquote>
<p>It is exhausting fighting this uphill battle EVERY DAY. I see women like <span class="citation">@courtneymilan</span> <span class="citation">@AlishaRai</span> <span class="citation">@suleikhasnyder</span> <span class="citation">@FarrahRochon</span> speak up</p>
</blockquote>
<p>(Tweeter’s bio includes the phrase “I try to be as nice as people think I am.”).<br />
This nice tweeter draws the metaphor of fighting.<br />
(Also interesting is “uphill battle”: fear and anger are much better motivators than happiness; everyone always thinks that <em>the other</em> side is winning).</p></li>
<li><p><a href="https://twitter.com/MsAnnAguirre/status/692442931697950720">This</a> from Milan:</p>
<blockquote>
<p>If you write a post about diversity and people of color drag it for being candy-coated racism and you delete and say people made you cry maybe consider that if dozens and dozens of POC are dragging it, you SHOULD feel badly.</p>
</blockquote>
<p>There’s very little nuance/sophistication to a view like “any time a bunch of coloured people call a white person racist, it must be true”. (Credit where credit is due: the emphasis of “dozens and dozens” at least better than “any POC”).<br />
It’s not hard to see this falls into the realms of Identity Politics. (One might’ve expected phrases like “white tears”).<br />
– But, again, the righteousness and certainty that what they’re doing is for the greater good.</p></li>
</ul>
<p>The above tweets are just a brief (&amp; clearly incomplete) scan of twitterspace. (And with my remarks, you see how I feel about them). Don’t be offended if your tweets were left out, or if your tweets were included. I suspect a glance at the profiles of usual suspects would lead to a better understanding of the context.</p>
<hr />
<p><em>That</em> drama.<br />
A prominent author calls out a prominent reviewer, based on one wild inferences from odd statements. A surrounding community of those interested in diversity in romance see the virtue of Milan’s statements, and the heresy in Dumas’. (At a glance, most of the replies I saw were more “thank you for saying this” than “isn’t this a little excessive?”. Maybe the smart people who dissent are keeping their heads down, and <a href="http://free.bridal-shower-themes.com/img/i/-/i-am-not-a-clever-man_1.jpg">I am not a clever man</a>).</p>
<p>Perhaps the most interesting part of all this is the righteous tone of “she deserves it” as to the harassment/bullying Dumas is receiving; that those doing the bullying aren’t the bad people here.<br />
I don’t think anyone is socially conscious of the need for diversity in romance novels, without also being concerned about things like <a href="http://www.themarysue.com/tag/harassment/">online harassment of women</a>.<br />
This dissonance isn’t so hard to understand, though. <a href="../../posts/argument/2016-01-31-on-anger-and-activists.html">It seems to be an activist thing.</a>. So cries of “that’s bullying” is met with “yes, I’m not being ‘nice’, this is important”; cries of “this is disproportionate; you’re killing a fly with a howitzer” aren’t met with sympathy, either. (Aside from the note in aforementioned link, I suppose it’s that there’d be no need to be “angry” if things improved without the anger).<br />
– It’s also not hard to sympathise with. – If anyone knows a cure for righteous anger, I’d love to hear it, as quickly as your fingers allow.</p>
<p>My concern isn’t so much “Milan &amp; community are bullying a ‘bad’ person for the greater good.”:<br />
While that’s fun in itself to discuss, I think the greater concern is <em>why</em> the target was lambasted. The hate seems to miss the general message (“hey, diversity in romance isn’t as good as it could be; here are some good, diverse romances”) and instead focus on the sins of (inferences from!) specific sentences!<br />
– Whatsmore, while the repeated drumline for diversity in romance is “everyone deserves to get their HEA”, it doesn’t seem all that inclusive to bully-out of your in-group someone who transgresses by a sentence or two?<br />
Surely this is arbitrary condemnation? I tend to think the angry reviewers who write “Well, the book was nice, except for this one sentence about female sexuality…” are immature. This is like that, times 100. – Moreover, is it more .. beneficial to the ’cause of diversity in romance to attack a prominent figure promoting diversity?<br />
(Sorry, activists, but <a href="https://www-ee.stanford.edu/~hellman/Breakthrough/book/pdfs/axelrod.pdf">cooperation wins out over division</a>).</p>
<p>– If one wants hints for a more “collaborative” diversity effort: aside from the reminder that reading is good, and that reading has the amazing ability to get into someone else’s head.. how can one be against it? If people are writing books you don’t like, it’s no skin off your nose, y’know.</p>
<p>Personally, I’m not particularly persuaded by rumours/hearsay of “Dumas is a bad person”, if encounters <a href="https://twitter.com/suleikhasnyder/status/663197701715206144">like this</a>, wherein Dumas is criticised for using the phrase “namaste” while being white, are the crimes. – I’ve not seen all of twittersphere, though.</p>
<p>Some of the above tweets make use of terminology like “ally”. Unfortunately, it seems in these domains of the socially-conscious, similar <a href="http://uberfeminist.blogspot.co.uk/2015/10/friendly-fire-demise-of-social-justice.html">incidents of friendly-fire</a> aren’t unheard of.</p>
<p>If one is brave, one could also draw comparison between this divide in romancelandia, and the recent controversies in other entertainment media, wherein each side yells at the other “we care more about diversity / LGBTQ+ than they do”. Strange times. (I think it’d cause more upset to discuss than not; I’m not so brave, then).</p>
<hr />
<p>I do tend to think Dumas isn’t guilty of anything.<br />
But if I can further make explicit some of the political beliefs at play here: Even if Dumas <em>weren’t</em> in favour of diversity, so what? There seems to be this nice thought that what’s “fair” and “equal” should win. (And anger will get us there).</p>
<p>It seems to be a moral imperative to this crowd that Dumas, as a prominent reviewer, do everything in her power for the cause. Why? In a free market, the disruptor’s need neither permission nor help from those at the top in order to make money doing things in an improved way.<br />
Similarly, it’s understood (grudgingly) that what books are “popular” aren’t necessarily the same as what books “good quality”. Sometimes things aren’t fair.<br />
(Of course, I guess such thinking also sees there’s no need to be “fair” about bullying anyone, either, so).</p>
<hr />
<p>One doesn’t tend to think of romancelandia as discordant.<br />
You’d also think that a genre set on characters having Happily Ever Afters wouldn’t have a problem with authors getting along with each other. – I guess if the present drama were in a RN, you’d probably rate it 2-stars, for how flat the characters seem to be, and how they don’t talk respectively to one another.</p>
]]></summary>
</entry>
<entry>
    <title>What Makes a Game a Good Toy</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2016-01-24-what-makes-a-game-a-good-toy.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2016-01-24-what-makes-a-game-a-good-toy.html</id>
    <published>2016-01-24T00:00:00Z</published>
    <updated>2016-01-24T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on January 24, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/game.minecraft.html">game.minecraft</a>, <a href="/tags/game.saints%20row.html">game.saints row</a>, <a href="/tags/game.just%20cause.html">game.just cause</a>, <a href="/tags/game%20design.html">game design</a>, <a href="/tags/analysis.html">analysis</a>
    
</div>

<p>I recently played through Just Cause 3, and had a lot of fun playing that. - I think, though, that after ‘liberating’ all the towns, collecting all the collectibles, and completing all the missions, there’s not as much innate incentive to play the game as I would’ve thought.<br />
Considering Just Cause 3 is a game where you can fly-like-batman, grapple, and parachute your way around an environment, in addition to blowing-shit-up, hijacking all kinds of vehicles easily, etc. etc. it’s a bit strange. – I get the impression it would be fair to describe Just Cause 3 as “a game where you unlock things, so that you get a fun toy/playground at the end of it”. (e.g., unlocking more vehicles to request, or unlocking a higher request-tokens capacity as you get nearer the end). – So what makes for an interesting ‘toy’ game?</p>
<p>Minecraft is the ultimate ‘toy’ game.<br />
To such an insane extent. Google for it, but you hear of things like people building BASIC interpreters, or processors, or whatever using the redstone mechanics.<br />
From what I’ve played, I think why it’s fun like this, more specific than “you can do anything you want (like farm, or fight)”, is Minecraft involves creating systems. (e.g. “here is my house, here is where I mine, here is the chest were I put stuff”). And so the <em>narrative</em> follows from that. “Here’s my mine… I’m going to mine further”, “here’s my house. I want some glass, so I’m going to get sand”, “at night, I need to fight my way back to my house, clear the surrounding area. Or maybe just survive the night through combat”. – I suppose there’s motivation which comes from taking a wild/unordered region (the generated world), and conquering/colonising it; e.g. tunnelling through the underground, chopping down trees, terraforming uneven parts of land.</p>
<p>Minecraft is quite, quite different from Just Cause 3, in that the latter is much more obviously a “game” than the former.</p>
<p>The Saints Row series is much closer to what Just Cause has. (In particular, I like Saints Row the Third best, but whatever).<br />
Both these games involve having fun from destruction and unrealistic-violence in a conquerable, open-world setting.<br />
I’ve certainly had a lot of fun screwing around in Saints Row the Third. – Though, unfortunately, if Saints Row is a better toy, Just Cause is a better game: the minigames (and missions) in Just Cause aren’t boring.</p>
<p>So what makes Saints Row a better toy?<br />
I wonder if part of it isn’t that in Saints Row, you get the ‘cheats’ like Invulnerability, Infinite Ammunition <em>in-game</em>. You have to buy them, (&amp; so there’s strong incentive to play the game to earn the money, etc.). – Free reign to cause havock and destruction, after earning this by playing the game ‘legitimately’ sounds fun.<br />
And while you can’t construct/modify the environment, so can’t “create systems” like in Minecraft, Saints Row lets you customise your character and your character’s things. The character’s body/face/hair, the character’s clothing (&amp; what colours), the weapons (to an extent), and the cars. – You can choose to dress your character in all-yellow, driving an all-yellow car if you want. (Why not, right?). I think your character can even have actually-yellow, also. Or you can dress up in costume. – I guess that’s very Barbie-doll ish. But it’s fun.<br />
The setting in Saints Row does lend itself to <em>some</em> narrative-making: gangsters from your gang will roam the streets, as will gangsters from other teams, and the police. So you can easily pick fights if you want, &amp; then have a good ol’ car-chase to escape. There’re also random-events like “defend this area for 3 waves” which the player can be prompted with.</p>
<p>Just Cause 3 has some of these things that Saints Row has: there will be random encounters / mini-quests, involving tasks like “hijack this car, then get clear of your wanted level”. And you can ‘collect’ different vehicles. You can certainly cause mayhem if you want, &amp; there will be patrols of bad-guys you can pick fights with every now and then, too.<br />
One (dumb) idea might be, that the enemy would try to re-conquer towns/areas that the player ‘liberated’. – This would have some narrative, but makes it quite a chore to keep the whole territory ‘liberated’. – There’s no benefit from the ‘liberated’ regions that impacts the player much; not like “more reinforcements to help you” or “hourly cash income”. (Well, the ‘main’ benefit actually seems to be there aren’t as many bad guys, and you can do ‘suspicious’ things without getting a wanted level. Still). – What I <em>do</em> like from Just Cause 3 is that you can always have some town/settlement “re-oppressed” so it can be “re-liberated”.<br />
Perhaps the whole “not using cash to upgrade/unlock stuff” is strange, also.. in that, it <em>demands</em> skill to unlock better features (like “more ammo capacity”), rather than demanding player spend “more time playing the game”.<br />
– And Just Cause 3 has some cool.. features that lend itself to being a fun toy, like the tether.<br />
But I wanna be able to customise <em>my</em> car, to be able to tear-shit-up with infinite-rockets, &amp; screw-around in pew-pew shootouts without worrying too much about things like ammo, or health. (Which isn’t really a “game”, sure).</p>
<p>All the same, I can’t help but think that a marriage of Just Cause 3 and Saints Row would be a ridiculously fun carnage-causing sandbox.</p>
]]></summary>
</entry>
<entry>
    <title>Thoughts on Sky Rogue</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2015-12-03-thoughts-on-sky-rogue.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2015-12-03-thoughts-on-sky-rogue.html</id>
    <published>2015-12-03T00:00:00Z</published>
    <updated>2015-12-03T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on December  3, 2015
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/game.sky%20rogue.html">game.sky rogue</a>, <a href="/tags/roguelike.html">roguelike</a>, <a href="/tags/analysis.html">analysis</a>, <a href="/tags/game.atom%20zombie%20smasher.html">game.atom zombie smasher</a>, <a href="/tags/game.faster%20than%20light.html">game.faster than light</a>
    
</div>

<p>I recently purchased a cheap flight-stick (a Logitech Extreme 3D Pro) so I could play through some of the old X-Wing games. (Although, supposedly it’s <em>possible</em> to play through these with a controller, and some thought).<br />
Naturally, I then also bought whatever flight games that looked fun on the Steam store.</p>
<p>Sky Rogue was one of the stand-out games.<br />
It’s a rogue-like game, where you control a fighter-plane … in the sky.<br />
The graphics are strikingly minimalist. (It’s indie, and apparently, <a href="http://skyroguegame.tumblr.com/">from their site</a>, only has 3 developers). – I find the graphics charming.</p>
<p>The controlling feels excellent. I wish every arcade flight-sim were so nice to fly as this.</p>
<h2 id="gameplay-currently">Gameplay Currently</h2>
<p>It’s “Early Access”.<br />
I hope they do improve it some more; as it is now, it’s already quite good:<br />
The gameplay is this: you fly off from your air-carrier in some jet, with some loadout of guns/missiles/rockets/bombs, and can blow up bad-guy jets, buildings, ships to earn currency. There will be some designated objective, which is some particular enemy jet/building/etc. which you need to blow up. – Once you destroy the objective, return to your air-carrier, the level regenerates as “Day N+1”, with more difficult enemies and a new objective.<br />
I’ve heard Day 4 is very hard; but I’ve not yet made it to that.</p>
<p>Currency-wise; this was updated recently: Rogue-like means “perma-death”, &amp; typically allows for some “global progression”. e.g. in Faster Than Light, you can unlock new ships / ship layouts for your player profile, but you don’t get to re-use the same instance of a ship once you’ve died.<br />
What Sky Rogue does now is to have a global progression by “unlocking” different types of jets/weapons, and per-session progression by “upgrading” particular weapons. (e.g. Level I gun to a Level II gun). – When you die, you don’t get to keep your upgrades, but you get to permanently unlock some new jet/weapon.<br />
(The UI isn’t entirely clear here as to whether blowing up additional enemies yields more money for upgrades, or more tech-points).</p>
<p>– This kindof works to create the cycle: “blow up more stuff so I can have cooler tech” / “with my cooler tech I can blow up more stuff”. <em>But</em>. Somehow it’s not a very compelling cycle.<br />
Part of this could be the UI; from the in-game UI, there’s no description given as to what a weapon is supposedly “good for”. So. Everything just kindof looks like “point and shoot”, rather than “this is a weapon I really want for this kind of target”.<br />
Part of it, I think, is also.. because it’s <em>“arcade”</em>, there’s no “campaign” to win. – I think this is solvable, in an engaging way beyond “Mission 1 = Day 1”, “Get to Day 10 to Face Big Bad-Guy and Win”.</p>
<p>(As an aside; I think an unfortunate dynamic from the above rules: if you return to your carrier without having beaten the objective, you get to change which jet you use, and which loadout of weapons you’re using. – If blowing-up additional enemies/buildings is beneficial, this means that it becomes “save the objective ’till last” – if blowing up additional enemies/buildings isn’t beneficial, it’s not obvious either way).</p>
<p>EDIT: After playing the game some more, I feel it’s worth emphasising that the gameplay they do have is very good.<br />
The dogfighting tends to involve missiles. – The player <em>can</em> use guns, but there’s no target-lead indicator which makes this difficult. (Also, there’s a control to “fire gun”, even if the selected weapon is not a gun). – And the missiles all have some kind of lock-on. The lock-on mechanic is <em>very</em> satisfying: a wee lock-on box will drag across the UI, chasing the current target box; when it locks on, there’s a beep. (Hit not guaranteed, of course).<br />
Bombing is quite satisfying. It maybe feels like the bombs fall quite slowly?, but it looks really cool to drop bombs on a target, fly away, and look back at the target seeing the bombs drop. (The bombs have like, streaks/trails behind them). – Unfortunately, the bomb-cam is unintuitive, and a bit ‘inaccurate’; it shows where the bomb would hit at sea-level. This makes it completely inaccurate against the sky-enemies like the carrier; &amp; slightly inaccurate against buildings.</p>
<h2 id="arcade-game-with-campaign-atom-zombie-smasher-faster-than-light">Arcade Game with Campaign: Atom Zombie Smasher, Faster Than Light</h2>
<p>I think Atom Zombie Smasher would make a decent example of a nice ‘campaign’ around satisfying gameplay.<br />
AZS’ core game involves rescuing civilians from procedurally-generated cities, using a loadout of obstacles/units.<br />
The overworld is where the ‘campaign’ is won/lost. AZS doesn’t do a great job of balancing it, but the idea is you get +10 points for each city you control, each round. The Zombies, in the overworld, will “infect” adjacent zombies. – And so the core game is played contesting one of these cities per round.<br />
– The overworld gameplay here is simple; there’s a tug-of-war for points, and a simple map deciding where to go next. (To make things less homogeneous, some cities will be a much harder level than others to “win”; so the trade-off is whether it’s worth trying to contest a valuable-but-difficult city, or an easy-but-worth-less city).</p>
<p>Sky Rogue could do something similar.<br />
This could provide rationale for the objectives. Rather than “Destroy this AWACs”, the player could have a choice of territories: Perhaps a territory has an enemy AWACs unit. Perhaps another territory has an enemy airbase. Perhaps this affects what happens in the overworld after each “day”. (e.g. airbase influences how many units in an adjacent territory, or so).</p>
<p>Faster Than Light’s overworld has a similar dynamic to AZS’, in that your choice of path affects i) the kind of environment you fight in, ii) the kind of enemies you fight against, iii) your resources. (e.g. spend a turn visiting the store? with radar, you can detect asteroid fields; worth the risk to investigate? worth the risk of spending more turns fighting enemies, as the enemy fleet advances?).<br />
– Again, a relatively simple overworld mechanic which provides an extrinstic motivation for playing the game. – With Sky Rogue, at the moment the motivation to play is ‘intrinsic’; new jets/bombs aren’t as fun as motivating as the goal of ‘beating something’, &amp; “beating your old score” is just a lame motivation. (Sky Rogue is fun to play because the gameplay is fun, but, y’know?, something more than an arcade session would be nice).</p>
<h2 id="carrier-vs-carrier-battles">Carrier-vs-Carrier Battles</h2>
<p>Maybe this is just because I’ve only seen the first couple of days &amp; I suck at gameplay, but.. the gameplay doesn’t feel like belligerent-on-belligerent battles. – Sometimes the enemy air-carrier is spawned a fair distance away from your carrier, sometimes it’s right next to it. – Intuition tells me that, my carrier is important, so the enemy’s carrier must be, too. I’d’ve expected something more intense, (e.g. <a href="https://www.youtube.com/watch?v=Y42c7kJKkwc">Carrier Command Carrier-on-Carrier battle</a>, or perhaps like the station-vs-station of the 1998 Urban Assault..); as it is, the carrier is worth the same amount of points as 5-turrets, and isn’t all that difficult to destroy (with the right equipment).<br />
– Ok, I take it back. It’s probably because I suck. <a href="http://www.lagzero.net/wp-content/uploads/2015/09/2015-09-12_00002.jpg">This thing looks bad-ass</a>. (EDIT: This is a “corvette”. Which is a bit confusing, because the sea-ship is called a frigate, and in terms of navy ships, a corvette is smaller than a frigate. Does this hint that we’ll see a larger enemy ship? – The corvette apparently, has <em>many</em> anti-air emplacements, as well as launching aircraft).<br />
Still. The arcade nature of the game provides a somewhat asymmetric, your-lone-fighter-vs-their-whole-fleet.</p>
]]></summary>
</entry>
<entry>
    <title>Setting up Mutt with NUS Student Email</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2015-10-26-setting-up-mutt-with-nus-student-email.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2015-10-26-setting-up-mutt-with-nus-student-email.html</id>
    <published>2015-10-26T00:00:00Z</published>
    <updated>2015-10-26T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October 26, 2015
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/programming.mutt.html">programming.mutt</a>, <a href="/tags/email.html">email</a>, <a href="/tags/office365.html">office365</a>
    
</div>

<p>This is for setting up NUS student email (hosted with Office 365) for the Mutt Mail User Agent; particularly, using IMAP, and alongside other email accounts.</p>
<p>Why you’d want to use Mutt, I’m not entirely sure. Probably Thunderbird will serve your needs as well as need be.<br />
But if you’re wanting to learn something productive while procrastinating, then Mutt is a sensible choice as any.</p>
<p>I find the Arch Wiki’s <a href="https://wiki.archlinux.org/index.php/Mutt">Mutt page</a> indispensable when setting up Mutt. - If you’ve googled your way to this page without a prior guide, I recommend this.</p>
<p>As for setting up an account with Office 365, a <a href="http://www.blog.alexanderdbrown.com/office-365-in-the-command-line/">blogpost from Alexander Brown</a> (which comes up from a search for “mutt office365”) has a useful codedump.</p>
<p>I’m not sure what the <em>minimal</em> set of options would be, but the example I have <a href="https://github.com/rgoulter/dotfiles/blob/4e1fb3c04d9f4c372125468a0c3bb0df165d004b/mutt/nusstu">in my dotfiles</a> (as per Arch Wiki’s “Multiple Accounts” advice):</p>
<pre class="mutt"><code># Connection
set ssl_starttls=yes
set ssl_force_tls=yes
set ssl_use_sslv3=yes

# Incoming
set imap_user=&quot;a0088816@u.nus.edu&quot;
set imap_pass=$my_nusstu_pass
set folder=&quot;imaps://outlook.office365.com:993&quot;
set mbox=&quot;+INBOX&quot;
set postponed=&quot;+Drafts&quot;
set spoolfile=&quot;+INBOX&quot;
set record=&quot;+Sent Items&quot;
set imap_check_subscribed
unset imap_passive

# Outgoing
set realname=&quot;Richard Goulter&quot;
set from=&quot;a0088816@u.nus.edu&quot;
set smtp_pass=$my_nusstu_pass
set smtp_authenticators=&quot;login&quot;
set smtp_url=&quot;smtp://$imap_user@smtp.office365.com:587&quot;
unset hostname

## Hook -- IMPORTANT!
account-hook $folder &quot;set imap_user=$imap_user imap_pass=$imap_pass&quot;</code></pre>
<p>Disclaimer: WFM, YMMV. This is just what I have, and clearly I’m not a well-versed Mutt user.<br />
My Mutt configuration, in general, may be useful for other NUS students keep their NUS Office 365 account separate from their GMail account.</p>
]]></summary>
</entry>
<entry>
    <title>Patapon 3</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2015-10-26-patapon-3.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2015-10-26-patapon-3.html</id>
    <published>2015-10-26T00:00:00Z</published>
    <updated>2015-10-26T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October 26, 2015
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/analysis.html">analysis</a>, <a href="/tags/game.patapon.html">game.patapon</a>
    
</div>

<p>Sigh.<br />
I recently bought a PS Vita. - A long time ago I has a PSP. I started the first Patapon game on that, but never got very far. And the Singapore PlayStation store isn’t cool enough to have the first two Patapon games. So here I am.</p>
<p>Patapon 3 is quite different to the previous games, apparently.<br />
Patapon, for those unaware, is a rather unique game. It’s largely a rhythm-game, where you control an army of units. ‘Commands’ are entered by pressing a sequence of buttons. (e.g. “onwards” is Pata-Pata-Pata-Pon, and “attack” is “Pon-Pon-Pata-Pon”; where Square=“Pata”, Circle=“Pon” - It’s much simpler than it looks). And it has RPG-ish elements to it, in that there’s equipment which you can upgrade, and your units can change which ‘class’ they are.<br />
– Patapon 3 is quite different, in that you’re limited to four units.</p>
<p>It does involve a lot of grinding. I’ve been happy to do that, and have been spending much of my time playing Patapon 3 to level up my units. – It’s satisfying to find a good combination of units to get through a quest - In order to ‘grind’ sanely, it’s nice to have one over-levelled unit, with the other three units under-levelled (so they gain lots of EXP for completing the quest).<br />
– So the whole I-want-stronger-units-so-I-can-beat-levels-quicker, I-want-to-beat-levels-quicker-so-I-can-have-stronger-units cycle is fun.</p>
<p>But it’s not without frustrations:</p>
<p>Most obvious is that information isn’t <em>clear</em>; some reviews (e.g. on MetaCritic) complain “oh, the ‘recommended level’ (for a quest) is bullshit”. This is unfair, as the recommended level isn’t inaccurate. But the units and what equipment chosen are <em>very</em> important, and this isn’t obvious. – On one quest, my army was blasting through every obstacle, every enemy in one-two turns each, but then reaching one particular enemy, wasn’t even able to make a scratch. My army wasn’t equipped correctly to take on the enemy, and Patapon 3 can be <em>punishingly unbalanced</em> like that.</p>
<p>It’s frustrating to a gamer to have luck-based elements impact the game.<br />
And Patapon 3 features many sections like this:<br />
– The four units are a Shield unit, an Archer unit, a Spear unit, and a Hero unit (which can be one of the other classes). When the Shield unit dies, then the player’s health is vulnerable to attack. So it’s important that the Shield unit doesn’t die, since the player loses very quickly if the Shield unit dies.<br />
– There are various enemies in the game which can one-hit-kill the player’s units: aside from the major bosses, there are sharks which can chomp units in one go, and there are salamander enemies which will ‘explode’ when they’re killed. This in itself is not bad, but:<br />
– Units can only be revived in one batch per quest. (Aside from the Hero unit, which will revive after a time if not insta-killed). - So, if the Shield unit is killed, then the player must use this one revive. But…<br />
– The player’s units will be <em>uncontrollable</em> under two circumstances: if the unit is affected by some element (e.g. on fire, frozen), or <em>the player is reviving their units</em>.<br />
For the latter, to ‘revive’ the units requires a special ‘revive’ command. (In the game’s terms, summoning a djinn). For the next while, the units will not be under player control. - They’ll generally attack; thus, vulnerable to aforementioned insta-kill enemies; thus, when facing such insta-kill enemies, this ‘revive’ can’t really be used.<br />
For the former.. this can be largely probablistic. i.e. <em>luck-based</em>. - A unit standing beside a bush on fire won’t always go on fire; but they might <em>right before you attack</em>. Or, rather, they might go on fire right as such an insta-kill enemy is in the area, and get killed. Or they might be frozen in range of the insta-kill of an enemy. - Certain items can mitigate this <em>slightly</em>, but not completely. (As well, it can cost gold to upgrade the items; and you get gold by playing such quests, so…).</p>
<p>– Minor issue related to that; rather than manage all the equipment given to the unit, there is an ‘optimise’ button. - The trouble is, this optimise algorithm has no qualms giving vulnerable-to-fire equipment, when the levels very clearly demand fire-resistant equipment. - It’s a minor thing, but tedious.</p>
<p>Some egregiously frustrating (albeit mostly minor) game design issues aside, the game puts heavy emphasis on <em>Multiplayer</em> aspects.<br />
“Hey there, this is a tough quest, but you can play with your friends”. - There are several ‘rare’/randomly-available gigantic-boss-battle quests which are strictly ‘multiplayer-only’.</p>
<p>Upgrading equipment is somewhat an example of this. The blacksmith can’t upgrade weapons beyond the blacksmith’s limit; the blacksmith’s limit is determined by the highest-level weapon (which is limited by the Hero unit’s level). - But, the equipment can only be upgraded to the nearest-10 of the highest equipment. - So, like, if you have a level-23 bow, then you can’t upgrade a level-20 sword, but you can upgrade all other equipment up-to level-20. (Until the level-23 bow becomes level-31; in which case, repeat for level-30…).<br />
– But-of-course, if you visit <em>another player’s</em> (i.e. online/multiplayer) blacksmith, then you’re limited by their level. Or some other such, such that there’s not the same limitation.<br />
– This isn’t game-breaking, but it is tedious.</p>
]]></summary>
</entry>
<entry>
    <title>Custom Ex Command in Yi Editor</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2015-10-19-custom-ex-command-in-yi-editor.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2015-10-19-custom-ex-command-in-yi-editor.html</id>
    <published>2015-10-19T00:00:00Z</published>
    <updated>2015-10-19T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October 19, 2015
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/programming.haskell.html">programming.haskell</a>, <a href="/tags/programming.yi.html">programming.yi</a>, <a href="/tags/programming.editors.html">programming.editors</a>
    
</div>

<p>This is something I’ve <a href="../../yi.html">mentioned before</a>, but I see that I wasn’t entirely clear on how to achieve it.</p>
<p>In more detail, here are some notes on how to write a “Hello World” Ex-style command for the Yi editor.<br />
– The exciting thing about this is it’s easier to write such commands for Yi than for Vim.</p>
<p>The following has been checked with v0.12.2 of Yi.</p>
<p>Compare: <a href="https://github.com/yi-editor/yi/tree/v0.12.2/src/library/Yi/Keymap/Vim/Ex/Commands">Yi.Keymap.Vim.Ex.Commands</a> module. The ‘Reload’ command is the simplest. - This helps see how Ex commands for Vim-style Yi are parsed, and how they can map to an <code>ExCommand</code>, which is in turn responsible for an Action to execute.</p>
<p>See <a href="https://gist.github.com/rgoulter/1059c35844c5e471d9e9">this gist</a> for a full, working example, but for the code itself, the highlights would be:</p>
<ul>
<li>The transformation itself, adding “hello world” into the buffer:</li>
</ul>
<pre><code>helloWorld :: YiM ()
helloWorld = withCurrentBuffer $ insertN &quot;Hello, world!&quot;</code></pre>
<ul>
<li>The parser for the ex command, in the <code>HelloWorld</code> module, under the <code>lib/</code> folder (which is used by <code>dyre</code> for dependencies for the config) in <code>~/.config/yi</code>:</li>
</ul>
<pre><code>parse :: EventString -&gt; Maybe ExCommand
parse &quot;helloWorld&quot; = Just $ impureExCommand {
    cmdShow = &quot;helloWorld&quot;
  , cmdAction = YiA $ helloWorld
  }
parse _ = Nothing</code></pre>
<ul>
<li>The config in <code>yi.hs</code>, to make use of the above <code>parse</code> function:</li>
</ul>
<pre><code>import qualified HelloWorld as HelloWorld

...

main = yi $ defaultVimConfig {
    defaultKm = mkKeymapSet $ defVimConfig `override` \ super self -&gt; super
            { vimExCommandParsers = myExCmdParsers ++ vimExCommandParsers super }
 }

myExCmdParsers = [HelloWorld.parse]</code></pre>
<p>This is enough to get a “Hello World” example going.<br />
For more sophisticated efforts, I’m guessing one would want to:</p>
<ul>
<li><p>Look at parsing of Ex commands, using the extant parsers for inspiration.</p></li>
<li><p>A more sophisticated <code>Action</code> executed; this is where an understanding of <code>Buffer</code>/<code>Editor</code>/<code>Yi</code> <code>Action</code>/<code>Monad</code> would be necessary.<br />
Resources at <a href="http://yi-editor.github.io">yi-editor.github.io</a> may or may not be helpful here; grokking parts of the code (e.g. in the keymaps) would be a good place to start.</p></li>
</ul>
]]></summary>
</entry>

</feed>
