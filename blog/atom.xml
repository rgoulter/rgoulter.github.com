<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Richard Goulter's Blog</title>
    <link href="http://www.rgoulter.com/blog//atom.xml" rel="self" />
    <link href="http://www.rgoulter.com/blog/" />
    <id>http://www.rgoulter.com/blog//atom.xml</id>
    <author>
        <name>Richard Goulter</name>
        <email>richard.goulter+blog@gmail.com</email>
    </author>
    <updated>2019-12-05T00:00:00Z</updated>
    <entry>
    <title>First Impressions of Halo Reach</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2019-12-05-first-impressions-of-halo-reach.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2019-12-05-first-impressions-of-halo-reach.html</id>
    <published>2019-12-05T00:00:00Z</published>
    <updated>2019-12-05T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on December  5, 2019
    
        by richardgoulter
    <br/>
    
    Tags: 
    
</div>

<p>So the Halo Master Chief Collection made its debut on Steam with Halo Reach.</p>
<p>This seems to be in line with Microsoft making money based on the brands they’ve built up before. e.g. They’ve re-released Age of Empires II in an “HD Edition”; and recently re-released Age of Empires II in a “Definitive Edition”. (That said, in addition to graphical and quality of life enhancements, the games also included new game content). Similarly, Age of Empires 1 saw a “Definitive Edition” re-release; although this was initially only through the Microsoft Store. (Also “not just on the Microsoft Store”: the Halo mobile games (Spartan Assault/Spartan Strike) and a Definitive Edition of Halo Wars; although Halo Wars 2 remains only on the Microsoft Store). Age of Mythology had also seen an “Extended Edition” (although the new civ wasn’t very good), and Age of Empires III will receive a Definitive Edition, too.<br />
(Age of Empires: Online being forgotten, apparently).</p>
<p>I did play Halo 1 on the PC way back when.<br />
Just the single-player game.<br />
But the times I’ve touched Halo since then was with its Spartan Assault and Spartan Strike. These are twin-stick shooters; so in terms of “when were we gonna get Halo on PC?”, they “didn’t really count”.</p>
<p>Having played through most of the Halo Reach on PC, I get the impression that the Spartan Assault/Strike give off a fairly good emulation of what Halo gameplay is going for. – There seems to be an emphasis on challenge-based or score-based completion.</p>
<p>See, uh.<br />
Halo is cool. It’s a militaristic sci-fi shooter. (Halo’s impact so pronounced that it defined the new-school only-two-weapons-at-a-time, cinematic shooters).<br />
Other sci-fi shooters aspire to be Halo the same way that fantasy fiction aspires to be Lord of the Rings.</p>
<p>But, I’m not sold on the base gameplay itself. Or maybe I was spoiled by Titanfall 2. <a href="https://www.youtube.com/watch?v=L5uaeT_5HpQ">This outstanding review by Shammy sold me on it</a>.</p>
<p>Halo Reach’s story is just unengaging.<br />
Maybe it wants to be Call of Duty. Everything is big and exploding and swinging from roaring success to absymal failure and the player really has no agency over this or any sense of scope. It’s kinda hard to care. (But maybe that’s ’cause it’s not the first game in the series and there’s story in the other ones and stuff).</p>
<p>The gameplay is more appealing.<br />
I’m not too familiar with the rules or the game logic. The human guns are good at killing unshielded enemies, and the alien guns are good at taking down shields. You have a shield, so you either gotta kill fast, or hide behind cover. The game can be pretty patient with you, which really emphasises the “ludo-narrative dissonance” where the story is saying it’s the end of the world, but the game isn’t advancing while there’s one weak enemy unit running around waiting to be killed. – It kinda feels sluggish to use just the human weapons to kill the enemies, but on normal difficulty the game lets you do it. (Whereas, seems like Bioshock 1 really emphasised its paradigm-shift of ‘zap them then hit them’).</p>
<p>I think where the game is fun to play (at a casual level of “on normal difficulty, not interested in score”) the challenges setup in the arena. Some of the time the enemies are easy to kill with weak weapons. Sometimes the enemies are harder to kill, with weapons or abilities to kill you in one or two hits. Sometimes there are enemy vehicles you can hijack.</p>
<p>I tried playing the controller-centric game with a controller at first. I lasted about five minutes before deciding that keyboard and mouse was just that much more comfortable.</p>
<hr />
<p>Having finished the game, I’d add:<br />
The levels are quite distinctive.</p>
<p>I think the story is more interesting if it’s spoiled going in.<br />
It’s apparently going for the same kindof plot what Star Wars’ Rogue One is going for: all the heroes die in the story, but after they manage to get the McGuffin that is humanity’s last hope to the remaining good guys. Rogue One ends by passing the Death Star plans to Princess Leia, blending into the Star Wars movie. Halo Reach ends with where the first Halo game starts.</p>
<p>I want to like this game. I can chalk my disliking it up to me being bad at it. But, from here I don’t quite get why people like the Halo series so much.</p>
<p>I wonder if remakes like this justify better engineering effort. It makes sense for the first release of a game to have an extreme “just get it done” mentality where maintainability isn’t a consideration. But for content with strong cultural cachet which can be milked for money by improving graphics every few years, surely it’s more viable to invest in maintainability.</p>
]]></summary>
</entry>
<entry>
    <title>Consumption Driven Organising</title>
    <link href="http://www.rgoulter.com/blog//posts/2019-11-17-consumption-driven-organising.html" />
    <id>http://www.rgoulter.com/blog//posts/2019-11-17-consumption-driven-organising.html</id>
    <published>2019-11-17T00:00:00Z</published>
    <updated>2019-11-17T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on November 17, 2019
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>I’ve been meaning to try and write down some things about the way I organise things.</p>
<p>I’m still improving, trying to keep the stuff that ‘works’ and ditch the stuff which I’m not consuming.</p>
<p>Anki: I’ve been using Anki for learning Vietnamese vocabulary. Yeah, one tip is to use it on a smartphone; that really reduces friction for revising the sets. I still don’t manage to do it quite every day, but this is almost a metric of how mentally rested I am. (If I’m too stressed or tired, then I won’t be doing my Anki).<br />
What I wish I knew: I find it’s still a bit easy to ‘game’ by remembering it within the first day, but forgetting it after that. (Anki cards start out in a “learning” state where you’re not expected to recall the note. Once a card is learned, not-recalling is bad). So, I adjusted the learning interval. Downside: it can take a long time to ‘learn’ the card, but my impression is that things which do get learned are more solid.<br />
I’d also recommend: feel free to just ‘reset progress’ of cards you get wrong if you have too many cards to revise.<br />
– One ‘motivational technique’ for going through the Anki stuff is: “revise cards until you get one wrong”. (I find, even if I’m tired out of my ass, that I can go for surprisingly long before getting one wrong. But then you’re almost in a flow and you’re fine with “just doing one more”).</p>
<p>Work notes and stuff: I still like using five colours, especially for worklog stuff.</p>
<ul>
<li>I don’t particularly value the notes for a long time; but it’s useful to get concerns, questions, plans, notes out of my head. (So maybe I could use that kickstarter book which works with the Pilot Frixion pens for my work).</li>
<li>What I like doing: using one ‘book’ as kindof a personal sprint / kanban planner; and work notes on refill paper separately.
<ul>
<li>Each sprint, I write up a table of tasks, with columns for each day of the sprint. Kindof like a done-list / Gantt chart kindof thing. (This helps visualise if tasks are taking too long; as well as visualise progress made).</li>
<li>Aside from the table, I’d rule sections for each day. In each section writing down: what I plan to do that day; then at the end of the day: what I did, and what ‘obstacles’ I faced. The “what I did” should contain no negative qualifiers. e.g. “I struggled through X” is worse than “I did X”.</li>
<li>Ideally start each sprint on a fresh page; ideally, each sprint/week covers a double-page spread.</li>
</ul></li>
<li>For work notes:
<ul>
<li>While I don’t really like keeping notes for a long time, I like the notation of using a box for ‘task to be done’. (Then loosely: ‘//’ for “done”, ‘/’ for “enough”, ‘X’ for “not gonna do it”, ‘&gt;’ for “task rewritten later”, etc.).
<ul>
<li>Write boxes like this on the margin. So then it’s super quick/easy to see what ‘tasks’ might need to be addressed. (You could even follow a discipline of rewriting tasks each new page / day).</li>
<li>Margins can also be used to timestamp; e.g. ‘<span class="citation" data-cites="1030h">@1030h</span>’.</li>
</ul></li>
</ul></li>
</ul>
<p>org-mode: It’s still my go-to place for organising stuff. - Tasks in org-mode; org-agenda: I’ve been pretty sloppy about this. I like the rules of thumb: “if it’s right, it will work effortlessly”, “tasks need to be well-organised, reference/notes don’t”. (“capture notes/inputs in as few places as possible” is also nice). - Tasks and Agenda: maybe I need to better organise the ‘TODOs’/tasks. Or maybe the right kinds of tasks for the right times/places. But I’m not really making use of it. - Checklists: one nice use of org-mode is it can be easy to copy-paste a checklist. I found this was useful for me for the start of the day, it would control the distraction of things I needed to do. - Reference: I’ve heard “zettelkasten” is to ‘reference’ what “getting things done” is to TODO lists. AFAIU, ‘zettelkasten’ is about keeping atomically-small reference notes, and linking between the different cards. I think one effect of trying things this way is to make it much easier to use/read the zettels when writing a zettel. I’ve started trying this with org-mode.</p>
<p>A thought which comes to mind is that: this organising is an attempt to save time, hopefully in a way that spending time early saves time later. For a lot of computer / developer stuff, the baseline for how long it takes to find is “google search it”. My experience is: if I’ve googled it before, then I can kinda remember what I searched for and navigate the results better. The best ‘cache hit’ is, from experience, remembering/knowing it.<br />
Anki tries to facilitate the remembering/knowing it. The best criticisms I’ve seen are that: it’s not that Anki doesn’t work, but is it worth doing? If you would benefit from knowing it, you would encounter the stuff frequently enough anyway. (I think this is why med students and language learners benefit. With languages, you don’t know “You Ain’t Gonna Need It” for low-frequency words).</p>
]]></summary>
</entry>
<entry>
    <title>The Witcher 3</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2019-11-03-the-witcher-3.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2019-11-03-the-witcher-3.html</id>
    <published>2019-11-03T00:00:00Z</published>
    <updated>2019-11-03T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on November  3, 2019
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>There’s a line from the recent Avengers movie going around: Hero: “You took everything from me!” Villain: “I don’t even know who you are”.</p>
<p>This reminded me I’d experienced a moment just like that when playing The Witcher 3.<br />
It’s a moment which I think gives a good summary of what the overall experience of playing The Witcher 3 was like. (Not the ‘best’ moments, but overall anyway).</p>
<p>Some character ambushes you at some point as you enter some town, saying “there you are you traitor” or whatever.<br />
But since you’re way over-levelled at this point, the fight lasts about as long as it takes you to notice the person.</p>
<p>I google searched the ambusher’s name, which led to the wiki page which described the earlier encounter with the character. (The ambusher was angry that I’d told the royal guards where their bandit hideout was, after the bandits let me go after they caught me in a trap when I was investigating some thing or other).</p>
<p>At best: it’s a neat encounter. It shows the game had some scripted cases where the consequences for the action play out <em>way</em> after you make the decision. (Which makes for a much more immersive role-playing experience). There’s also a rich world-building to the encounter: your actions matter and have consequences; it’s as if the characters exist and act outside of your interactions with them.<br />
At worst: The Witcher 3’s broad appeal / accessible gameplay lends most of the game to a “follow the quest marker, do the thing” without paying much attention. And the game is so long that you’ll forget details here and there.</p>
<p>Though, I wouldn’t pick it as an interesting example of an interaction which was an important surprise, or one which made me think. But the Witcher 3 does have moments like.</p>
]]></summary>
</entry>
<entry>
    <title>Hitman 2 and its Difficulty Curve</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2019-10-28-hitman-2-difficulty-curve.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2019-10-28-hitman-2-difficulty-curve.html</id>
    <published>2019-10-28T00:00:00Z</published>
    <updated>2019-10-28T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October 28, 2019
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>I’ve been playing the recent Hitman 2 quite a bit.</p>
<p>I never played the earlier Hitman games, but from comments I’ve seen in YouTube videos, it seems the situation is a bit analogous to the Tomb Raider series: for one, the recent games re-use the same titles as earlier games. (There’s a “Hitman 2” which was released in 2002; which is similar to how there are two games called “Tomb Raider”). But it seems that the recent games in each series are different enough from the earlier games, and you get some people bragging in a kind of “I’m so hardcore I love the early games and the new ones are bad”.</p>
<p>Well, I enjoy Hitman 2.</p>
<p>The criticisms I buy are: - Although the game is Single Player only, the game requires you to be online all the time. Presumably this is to support integrity of the scoreboards. (I don’t think anyone cares about the scoreboards). The most pragmatic concern here is: the game isn’t going to be playable in 10 years or so. - An interesting criticism I kinda buy is that the levels in these games all stick to the same formula, whereas levels in the older games had more variety to them. - And, uh, the more embarrassing criticism is just how sloppy the maintenance of the game seems to be. They added a <a href="https://www.youtube.com/watch?v=8ArrPgs7z-Y">‘concealable shotgun’</a> that the player could start the game with; but it was quite buggy. When starting the level, it wasn’t ‘concealed’ at all. (Did they know it didn’t work and release it anyway? Or did they not know? Or does it actually work in some situations, but not others?).</p>
<p>These problems aside, I think the game is still a fun game. I cannot think of other games which have level designs with the amount of replayability as is inherent to Hitman 2. You start each level overwhelmed by how little freedom you have, and after exploring the level a bit have a sense of domination over the non-playable characters in the game.</p>
<p>I saw some interesting comments about Hitman 2’s rating system:</p>
<p>Hitman 2’s rating system is uncreatively ‘binary’:<br />
Currently the game ‘rates’ a playthrough of the level ‘Silent Assassin’ if the player finishes the level without being spotted doing anything bad, and no bodies are found. (With some exceptions like: it’s okay if the bodies of the level’s targets are found if they were killed in an accident, or by poison).<br />
There are score points lost for: taking a long time, or for killing non-targets, etc. but no one really cares about the score. The important rating is getting ‘Silent Assassin’.</p>
<p>I think the levels are designed in an accessible way.<br />
You can follow game-provided checkpoints that provide a paint-by-numbers style of killing the target. (This is along the lines of: the target wants to meet in private with the chef. Here’s the chef; so, grab his disguise, then meet the target, then kill the target in private).<br />
Once you follow each of the game-provided walkthroughs, you will have navigated your way around most of the map in various disguises, which helps you get to know the map.<br />
(Without the game provided walkthroughs, there are still characters who you can overhear e.g. “gee, the boss wants to meet with the chef in private, but the chef is feeling sick over there”).</p>
<p>This is nice, but the rating of ‘Silent Assassin’ or not is still quite ‘binary’.<br />
<a href="https://www.youtube.com/watch?v=a3edO5zHDos">TheKotti provides an example</a> of a ratings system for stealth style games which is more adaptive in nature. Rather than punishing the player for a mistake, it would be more interesting to have a ‘threshold’. This would enable dynamics like: if you make a mistake (e.g. get spotted), you can still play and get a good rating; but you have to be more careful.<br />
A ratings system like this would also measure the difference between “didn’t get spotted, because you knocked-out everyone in the map” and “didn’t get spotted because you skillfully moved around the map”.</p>
<p>As in, the nice thing about this is: as a beginner player, there’s a clear measurement for an incentive to get incrementally better. The current rating system has ‘cliffs’. (Getting spotted means “not silent assassin”, which is the same rating as run and gun).</p>
<p>It would also avoid some weird ‘quirks’ about the current rating system.<br />
e.g. currently you can set of the alarm as many times as you want, knock out as many people as you want, even ‘shoot’ people as many times as you want; so long as you don’t get spotted, it’s ‘silent assassin’. Whereas, if you get spotted even once (because you walked somewhere you weren’t supposed to be), it’s not ‘silent assassin’. Or if you use a sniper rifle and shoot the target from a distance, it’s also not ‘silent assassin’ (if the body gets found).</p>
<p>This would probably also resolve another problem with Hitman 2’s rating system: that it doesn’t measure skill for highly-skilled play.<br />
Currently, the hardest thing to achieve which is measured in Hitman 2 is getting a Silent Assassin rating without using any disguises on the Master difficulty. (Master difficulty restricts the player to saving only once, has a few more camera/guards. As I understand it, it essentially means you discover a good route on Professional difficulty, and execute it on Master).<br />
There are some challenges players in the community will try which are harder than this: e.g. silent assassin without using disguises, killing the targets wtih a loud weapon. But the game doesn’t measure this explicitly.</p>
<p>Recent changes to the game have made it more accessible to new players (which is great imo).<br />
One item they added was a James Bond style electrocution phone. An ‘electrocution kill’ counts as an ‘accident’, so it can be used for Silent Assassin. This makes it quite easy to get Silent Assassin. (Experienced players snob this; but I liked the argument that it’s more interesting to have items which are actually useful, rather than everyone using the same loadout for every level because the items are all lousy). Obviously, getting Silent Assassin when using such an overpowered item isn’t super impressive. But the player still needs to be sneaky killing the other targets.</p>
<p>So: that the game doesn’t ‘measure’ between high-skilled plays, and the game is making it easier to reach the highest-measure of skill in the game is unrewarding to the kinds of players who play Hitman long enough to get very proficient at it.</p>
]]></summary>
</entry>
<entry>
    <title>Netflix's Dark is Great</title>
    <link href="http://www.rgoulter.com/blog//posts/2019-07-13-netflixs-dark-is-great.html" />
    <id>http://www.rgoulter.com/blog//posts/2019-07-13-netflixs-dark-is-great.html</id>
    <published>2019-07-13T00:00:00Z</published>
    <updated>2019-07-13T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on July 13, 2019
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>Most of my blob-around time goes to YouTube rather than to Netflix. Before I had Netflix, I was worried that it would suck up all my spare time.</p>
<p>Like how Netflix’s “Dark” sucked up all my time.</p>
<p>“Dark” is a show which was written for the kind of people who love modelling things with graphs, and KT45 modal logic. I mean, I didn’t go to the effort of doing that, but it’d be kinda fun.<br />
I <em>did</em> often have to pause and rewind 30s a few times to catch what was being said. The show has many characters and a dense network of interactions.</p>
<p>The show has some light sci-fi, with elements of mystery and a bit of suspense.<br />
The sci-fi aspect is a bit of <em>time travel</em>; and the show has different cases of “Grandfather Paradox”es going on. – This gets combined with a love of dualities, repetitions and reflections. It’s fun.</p>
<p>The second season just released. I think the first few episodes of each season were a bit slow to build things up. (This is at the same time as having so many characters!). And the ending of each season is a bit ‘meh’. And a couple of the character actions come across as irrationally convenient for the plot.<br />
But I really loved the stuff in the middle.</p>
<hr />
<p>Just some rapid-fire thoughts on other shows I’ve watched:</p>
<ul>
<li><p>“Murder Mystery”. Eh. It’s okay. I kinda wondered if it’d have different endings like “Clue” did.</p></li>
<li><p>“The Nice Guys”. Eh. There’s one joke which managed to land quite well.<br />
The plot is a sortof neo-noir where the titular nice guys try to find a young woman who’s made an adult film which exposes corruption in government.<br />
– I’ve seen films like “Die Hard” described as power-fantasies for middle-aged guys. I think plots like this are the same kind of power-fantasy: rather than market-forces or complex systems, it’d be nice if the damaging effects of socially/environmentally-bad policies could be blamed on a secret cabal that can be beaten.</p></li>
<li><p>“Always Be My Maybe”. The guy is cute/charming. It features a scene where the in-vogue Keanu Reeves acts like an asshole.<br />
The rest of the film? Eh.<br />
There’s a romance plot between the two characters, but the story kindof relies on an archetypal plot and doesn’t really manage to land enough of the points well enough.<br />
– I enjoyed “The Accountant” even though I can see it’s a crap film. I could see people liking “Always Be My Maybe” as kindof a “representation matters” film, but it’s not very good.</p></li>
<li><p>“John Wick 3”. My girlfriend enjoyed it more than I did. John Wick has <em>way</em> too much plot armour. Especially towards the end. – Though there is a segment of the movie which is closer to the dumb-cool-action spirit of the first movie: Halle Berry’s character and John shoot there way out of some compound.<br />
I’d pass on the rest, though.</p></li>
<li><p>“Narcos: Mexico”. Outstandingly good. I dunno in terms of accuracy or Americo-centrism or whatever. But the Narcos writers are great at writing tense episodes.</p></li>
</ul>
]]></summary>
</entry>
<entry>
    <title>You Might Like \"Anne with an E\" If...</title>
    <link href="http://www.rgoulter.com/blog//posts/2019-02-06-you-might-like-anne-with-an-e-if.html" />
    <id>http://www.rgoulter.com/blog//posts/2019-02-06-you-might-like-anne-with-an-e-if.html</id>
    <published>2019-02-06T00:00:00Z</published>
    <updated>2019-02-06T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on February  6, 2019
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>You might like Netflix’s “Anne with an E” if: - You value current-year progressive ideals, unlike the stupid, ignorant and bad people who hold values you find gross. - You hate close-minded people. - You can’t understand why late 19th century rural farmers don’t hold modern urban bourgeois moral values. - You watched the 10-hour YouTube video of “Gillette commercial”. Three times. Because of how great it is. - etc.</p>
<p>Bonus points if you think the 1985 mini-series was boring and needed more flavour like “Anne has PTSD”.</p>
<p>I guess it’s a bit weird, but I don’t think anyone who <em>loves</em> the 1985 version would like the Netflix version. And vice-versa.<br />
The Netflix version is just a bit too “and everybody clapped”/“I’m so proud of this community”.</p>
<p>The characters are almost all flat, almost all the time; but entirely follow the tropes necessary for the misery porn.<br />
The characters in the plots tend to be one of: “good character with good morals”, “good character doesn’t agree with good morals but then has good morals by the end of the episode”, or “bad character with bad morals”.</p>
<p>I did quite like the penultimate episode of the second season where the characters being to face consequences for their actions. (The son of a poor family who have been making sacrifices for him to attend school gets caught for having been skipping school to pursue a life of art. This trouble was caused by an unconventional and unintegrated teacher who thought she knew the solution presuming she knew how to fix things. The class bully suffers injury in retribution for the pain he caused others).<br />
But apparently the final episode decided these were bad things. (e.g. the final episode has the bully have a change of heart with warm and fuzzy feelings, as he decides to not shoot the cute little fox which has been pillaging the neighbouring chickens).</p>
<p>The show is very pretty, though. So I can understand the idea of “tell whatever story you want just because you like the setting”.</p>
]]></summary>
</entry>
<entry>
    <title>Comparing Cucumber vs All-in-Code BDD Specs</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2019-01-19-comparing-cucumber-vs-all-in-code-bdd.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2019-01-19-comparing-cucumber-vs-all-in-code-bdd.html</id>
    <published>2019-01-19T00:00:00Z</published>
    <updated>2019-01-19T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on January 19, 2019
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>A couple of years ago I added a couple of Cucumber specs to a side-project of mine.<br />
I did this because I was learning to use Cucumber since I was being hired as a Software Engineer in Test. (Their existing automated acceptance tests used Cucumber).</p>
<p>I recently picked the project up again to do some maintenance on it, and I chose to migrate from using Cucumber to using all-in-code ScalaTest for implementing the same specifications.</p>
<p>When using Cucumber, you must ask “why use Cucumber over an all-in-code tool like RSpec (or ScalaTest)”. So, here are some considerations about the trade-offs between using Cucumber and using all-in-language tests:</p>
<h1 id="recap-cucumber-and-bdd">Recap: Cucumber and BDD</h1>
<p>Cucumber is a tool which enables structuring tests in a certain way. This structure particularly supports a “Behaviour Driven Development” (BDD) workflow.<br />
BDD is the idea of specifying behaviours (after having refined what these behaviours should be from examples).<br />
That is: a specification is an artifact from the project-management side; and Cucumber is a tool which executes specifications of behaviours.<br />
BDD’s selling point is “build the right product”. And executable specifications aim to provide “living documentation” about what the code actually does.</p>
<p>Well, that’s my understanding of it from Gojko Adzic’s fantastic “Specification By Example”.</p>
<p>Specifications and Cucumber, from a developers perspective: - Any automated test involves 3 things: - Set up some System Under Test (SUT) - Get the SUT to perform some action - Check that the SUT did what it was supposed to do. - Technically, automated tests may also need to clean up the environment they run in; but this is a technical detail about running the tests, not a detail about checking the SUT. - I’ve seen these three steps described with the mnemonic “Assemble, Act, Assert” which I quite like. - Typically, documentation about what a program does is hand-written. (Although there are interesting tools which try and address this, like <a href="https://stackoverflow.com/questions/50332885/how-do-i-install-and-use-gpg-agent-on-windows/50412924#50412924">Java’s Spring’s REST Docs</a>). - Cucumber’s file format involves describing a “feature” which is a sequence of “scenarios”. (Roughly corresponding to “suite” and “test” in xUnit terms). Each scenario consists of steps. - For example. from <a href="https://relishapp.com/rspec/rspec-expectations/v/3-8/docs/built-in-matchers/equality-matchers">rspec-expectations</a>: <code>cucumber     Given a file named &quot;compare_using_eq.rb&quot; with:       .... Ruby code using RSpec Expectations ....     When I run rspec compare_using_eq.rb     Then the output should contain &quot;3 examples, 0 failures&quot;</code> - it’s a good convention to write the scenario’s steps in a “Given/When/Then” sequence; and this corresponds to “Assemble, Act, Assert”. - Cucumber’s differentiating feature is that the executable specification is separate from the code which runs it. - i.e. a Cucumber test suite has its executable specification in a <code>.feature</code> file, written in Gherkin syntax. This is then executed using test code in “step definitions”. - My impression is that there are different styles of writing Given/When/Then steps: - steps as a convenient way to arrange test code/examples. e.g. for libraries (or APIs) like RSpec. This seems to be the easiest kind of product to write executable specifications for. - steps as “pseudo code”. This seems a compromise for getting documentation which is tested, with less emphasis on readability. - steps as declared descriptions. This is what I think is best for high-level end to end specifications. (Although this ends up with steps which are too vague if they are too high level and don’t mention any details).</p>
<h1 id="advantages-and-disadvantages-of-each-approach">Advantages and Disadvantages of Each Approach</h1>
<p>Relevant advantages/disadvantages for Cucumber vs all-in-code specs: (As opposed to inherent difficulties with end-to-end or out-of-process acceptance tests).</p>
<p>Advantages of Cucumber: - Cucumber specification features are English-readable in plaintext files. This is useful if you want to see “what are the specifications? what does the software do?” at a glance. - It’s much harder to access the “executable specification” from in-code specs (like RSpec or ScalaTest’s FeatureSpec). The “Given/When/Then” are mixed in with the step-execution code. - Cucumber makes it easier to adhere to an “executable specification discipline”. Because scenarios in the Feature file are idiomatically written with “Given/When/Then” steps, writing test code outside that convention naturally <em>smells</em>. - Similarly, if the step-definition code doesn’t “obviously agree” with the step it’s defining, this is another clear smell. - It “smells” if the executable specifications aren’t used anywhere. My experience is that tests tend to be ignored (beyond whether they pass and maybe coverage metrics); but I think tests could be leveraged to provide more value than this. - With all-in-code specs, it’s much easier to be sloppy and have poorly written specs or poorly engineered code which tests the code. - It “smells” if the Feature files aren’t used anywhere. (IME, It’s typical to ignore tests anyway. But I think this is a smell). - It’s easier to produce “living documentation” from a tool like Cucumber than a tool like RSpec.</p>
<p>Disadvantages of Cucumber: - Cucumber step-definitions code has a weird “interface”. “interface” in <a href="https://www.youtube.com/watch?v=bmSAYlu0NcY">John Ousterhaut’s use of the word</a>: “interface” is the stuff you need to be aware of in order to use code.<br />
- With normal imperative code: each statement is essentially adjacent to each statement in the program, or is embedded in some structure like a function or a class.<br />
It’s typically straightforward that the ‘interface’ is all the code in the function, any incoming parameters; and if unlucky, access to “global” state. - With step definitions: It’s possible that some steps will need to store information for later steps or make use of information from previous steps. Steps need to be written in a way that makes the assumed interface as obvious as possible, at the same time as being an idiomatic way to describe some step in a test scenario. - It’s really hard to write good specifications.</p>
<p>Disadvantage of all-in-code specs: - With code, it’s really tempting to “Dont Repeat Yourself” (DRY) so that there’s less code to read.<br />
Whereas, tests should “tell a story”. (They should use “Descriptive and Meaningful Phrases” rather than be ‘DRY’).<br />
With all-in-code specs, if a test step is re-used, then either subsequent steps are nested (which may be hard to read) or copy-pasted elsewhere in the test code. - Cucumber’s approach is to organise test code by step definitions. So, to see the full code listing for a test scenario, you have to view each step definition.<br />
Each step may be “DAMP”, but not the whole scenario.</p>
]]></summary>
</entry>
<entry>
    <title>"Patch Grid" Sounds Like a Useful Editor Technique</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2018-12-18-patch-grid-sounds-a-useful-editor-technique.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2018-12-18-patch-grid-sounds-a-useful-editor-technique.html</id>
    <published>2018-12-18T00:00:00Z</published>
    <updated>2018-12-18T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on December 18, 2018
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>I came across a link to Austin Henley’s dissertation <a href="http://web.eecs.utk.edu/~azh/pubs/Henley2018bDissertation.pdf">“Human Centric Tools for Code Navigation”</a>.</p>
<p>There are three interesting tools discussed Henley discusses for navigating code:</p>
<ul>
<li><p>navigating code you’re working on now</p></li>
<li><p>navigating through the history of code you’re working on<br />
(though his tool is for visual dataflow languages)</p></li>
<li><p>navigating the structure of the code you’re working on</p></li>
</ul>
<h2 id="ribbon-of-open-files-is-a-great-idea">“Ribbon” of Open Files is a Great Idea</h2>
<p>Of these, I found the “navigating code you’re working on” most exciting. The “navigating through history of code” discussed was aimed at visual dataflow languages; and tools to navigate code structure sound cool but it’s probably a difficult tool to get working outside of full-fledged IDEs.</p>
<p>Henley’s Patchworks sounds like it’d be useful for navigating code you’re currently working on. <a href="https://www.youtube.com/watch?v=GwcxDZT3pXE">Short video visualising the idea</a>. I’d describe it this way:</p>
<ul>
<li>A scrollable pair of tiled rows of editing panes.</li>
<li>A “ribbon” is the 2*m array of open files.</li>
<li>A “patch grid” is the grid / scroll viewport over the open files.</li>
</ul>
<p>That is, your editor window shows a 2x3 grid (2 rows, 3 column) grid of editing panes, and you can scroll the open files.</p>
<p>This is comparable to navigating multiple “desktops” in window managers. (A feature so useful that now even Windows has this out of the box).</p>
<p>I think it’s also worth mentioning a couple of details:</p>
<ul>
<li>It’s beneficial if the user can quickly “zoom” into the split tab pane. (e.g. Tmux has split panes, but also offers a “zoom into pane” feature).
<ul>
<li>Although “keep the unit of code you’re editing small enough that it can be managed in a pane” sounds a nice ideal.</li>
</ul></li>
<li>Henley’s Patchworks offers a “zoomed out” view of the ribbon, so that it’s easy to recognise which open files are where in the ribbon.</li>
</ul>
<h3 id="reasons-to-be-excited">Reasons to Be Excited</h3>
<p>I think there are many reasons to be excited for this idea:</p>
<ol type="1">
<li><p>I might not be the most eloquent, but I feel like it’s relatively easy to to describe in terms of features developers are used to at the moment. Scrolling, editing panes, tiling.</p></li>
<li>I feel this idea is kinda-sorta close to workflows I like at the moment.
<ul>
<li>e.g. in vim I <em>love</em> using unimpaired so that I can press <code>[b</code> and <code>]b</code> to switch between “previous buffer” and “next buffer”. (buffer = “open file” in vim terminology).</li>
<li>e.g. I love switching between multiple desktops. Usually I’ll have “terminal”, “IDE”, and “internet browser” as a working group of 3 desktops focused on the same task.</li>
<li>e.g. I already often split the panes to make use of “code I’m working on” and “output”. Plugins like <a href="https://github.com/epeli/slimux">slimux</a> make use of this idiom.</li>
</ul></li>
<li><p>The editing programs developers use tend to have split editing panes. So, “scroll a ‘ribbon’ of files through a grid of editing panes” seems like it’s a feature which can be implemented broadly.</p></li>
<li><p>I feel that the workflow of: “I’m looking at these functions (which aren’t all next to each other in the same file” is fundamental to maintaining non-trivial software.<br />
The idea of a “patch grid” sounds like it supports this workflow better than “switch between files in the editing pane”.</p></li>
</ol>
<h3 id="reasons-to-not-be-excited">Reasons to Not Be Excited</h3>
<p>I even made an effort at writing <a href="https://github.com/rgoulter/buffer-ribbon.el">a plugin for Emacs</a>, so I’ll be trying the idea out. (It’s usable, but still a work in progress).</p>
<h4 id="navigating-to-another-file-is-already-very-quick">Navigating To Another File is Already Very Quick</h4>
<p>“Navigating” to a different file is something that’s already <em>really</em> easy in modern editing environments.<br />
e.g. in an IDE I can have a “jump to file/function” with fuzzy searching which takes as long as “command invocation + type query + select result”.</p>
<p>The discussion in the dissertation is comparing how long it takes developers to navigate to files using Patchworks vs Eclipse IDE; but AFAICT the users were using the mouse to navigate files.</p>
<p>But, using the keyboard to control a text editor can be very quick, so I think it oversells the idea that the benefit is in navigation speed.<br />
I might believe that using “patch grid + scrollable ribbon” would allow for less time navigating for power-users of an editor across an editing session. But that feels like a less tangible benefit.</p>
<h4 id="editors-already-support-grid-of-split-editing-panes">Editors Already Support Grid of Split Editing Panes</h4>
<p>The ‘novel’ idea to me of Henley’s Patchworks is the “ribbon” of open files that the editor should be able to scroll through.</p>
<p>A “patch grid” minus scrolling the “ribbon” is just a 2x3 grid of editing panes, which editors already support at the moment.<br />
People don’t commonly split panes in IDEs, and AFAICT it’s uncommon to see people use 2x3 grids of panes <em>like that</em>.<br />
I think people don’t use them because it’s difficult to set up, and there’s hardly an obvious benefit to splitting an editing pane into <em>6</em>.<br />
(Right now, I split an editing pane into <em>2</em> all the time).</p>
<p>Maybe the idea of a scrolling ribbon means that it’s less of a hassle to work with a set of open files with a grid of editing panes. (You don’t have to decide which open file to replace; you just have to scroll the ribbon over and open in an unused tile).</p>
<h4 id="existing-workflows-already-work">Existing Workflows Already Work</h4>
<p>Editors / IDEs these days are <em>packed</em> with all sorts of complicated features such as multiple cursors or multiline editing.<br />
There may be features that would be more efficient ways of doing what I want to achieve that my editor already has. I have to go out and deliberately try to improve.<br />
Most of the time, whatever you’re doing to get the work done is good enough as it is.</p>
<p>If making effective use of a “patch grid” (and scrolling it) isn’t intuitive out-of-the-box (or from seeing someone else make use of it, I guess) then it might not be worth picking up.</p>
<p>That said,<br />
not every user is a fan of “keyboard for everything”, and if using a “patch grid” is a big navigation improvement over other mouse-oriented workflows, maybe that’s good enough.</p>
<h4 id="benefits-of-patch-grid-and-ribbon-may-be-unclear-and-unintuitive">Benefits of Patch Grid and Ribbon May Be Unclear and Unintuitive</h4>
<p>My impression is that a big benefit to a “patch grid”‘s structuring “open working set of files” this way isn’t exactly “see everything you need to see at once” so much as the mental model of a ’ribbon’ of buffers makes better use of <em>associative memory</em>, <em>episodic memory</em>, and <em>spatial memory</em>. (cf. section 2.4 “Human Memory of Code Navigation” of Henley’s dissertation).</p>
<p>I’d think a workflow of “quickly switch to other open file in the current editing pane” requires the developer to remember the code in the other files in their working set of open files.<br />
So, surely a “patch grid” of open files make better use of associative/spacial memory than “quickly switch to another file” allows.</p>
<p>Henley’s dissertation discusses that one recommendation is to use the ribbon chronologically, by putting newer open files to the right of currently occupied panes.<br />
I’m curious to try this out for myself, I’m curious to see how easy it can be to scroll the ribbon to open a different file, compared to just switching the file in the current editing pane.</p>
<h4 id="on-a-laptop-screen-2x3-grid-panes-are-really-tiny">On a Laptop Screen, 2x3 Grid Panes are Really Tiny</h4>
<p>2x3 isn’t a magical grid size set in stone.<br />
“2 rows of tiles” is more restrictive than a free-form 2D canvas of editing panes.<br />
Maybe “3 columns of a pair of editing panes” a good number of editing panes to fit in human memory.</p>
<p>But from what I’ve tried on even a 15&quot; laptop screen, a 2x3 grid of tiles feels like editing in a grid pane is an editor pane for ants.<br />
This doesn’t matter <em>much</em>, since I think the benefit of a patch grid isn’t “editing in the grid panes”.</p>
<p>I’ll have to try it on a larger screen to see the difference.</p>
]]></summary>
</entry>
<entry>
    <title>"What I've Been Up To" Ramble</title>
    <link href="http://www.rgoulter.com/blog//posts/2018-10-12-what-ive-been-up-to-ramble.html" />
    <id>http://www.rgoulter.com/blog//posts/2018-10-12-what-ive-been-up-to-ramble.html</id>
    <published>2018-10-12T00:00:00Z</published>
    <updated>2018-10-12T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October 12, 2018
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>I haven’t published anything on this blog for some time.</p>
<p>I’ll break that absense with a bit of a ramble.</p>
<p>I’ve just relocated to Vietnam, to live with my girlfriend.<br />
Currently, I’m on a “personal sabbatical”.</p>
<p>The first part of this ‘sabbatical’ has been spent on relocating, and on catching up on some of my Steam backlog.<br />
(I did meet with some of my friends before leaving Singapore, too).</p>
<p>Currently I’m transitioning from “playing games” to “personal organisation”. I’m trying to establish some discipline or deliberateness about how I go about being productive.<br />
One part of that is looking at <a href="https://plaintextaccounting.org">PlainTextAccounting</a> as an improvement on how I have (or haven’t) been tracking where my money goes.<br />
Another aspect of this is to actually make use of the org-files I’ve been dumping content into.</p>
<p>I’ve been fairly good at “write-only notes”. This could be considered as journalling or logging.<br />
I haven’t been good at considering “why?” about these notes. And without a purpose, there’s no cost for the notes not having any structure. (Without structure, it’s expensive to refer to notes; but if you’re not referring to the notes, then this doesn’t matter).</p>
<p>Part of that is fine. You don’t know what the structure/discipline should be until you do it.<br />
But, uh, now I can see that there’s value in: 1) reflecting on what you’re doing, 2) having some criteria to consider when reflecting.<br />
– That sounds rigid; but the point of the structure is to guide and serve, rather than to limit realised potential.</p>
<p>On the topic of “being productive” and disciplined, some interesting media:</p>
<ul>
<li><p>Cal Newport’s “Deep Work”. What a fascinating book. It criticises the “busy” and distracted modern work environment as detrimental to a craftsman’s work, and suggests rules for how to focus on getting meaningful work done.</p></li>
<li><p>“Getting Things Done”. I haven’t read the book, but. People who like Emacs’ org-mode also seem to like GTD. (org-mode and GTD both seem to be flexible such that they can be used per individual preference).<br />
Compared to “Deep Work”, GTD’s emphasis seems to be on “avoid distraction” by way of: keep track of everything on paper (rather than in your head), and have a process to sort out the things you want to keep track of.</p></li>
<li><p>I finally watched a Joe Rogan podcast with Jordan Peterson as a guest. Seems like JBP often argues in favour discipline &amp; <em>incremental</em> improvement.</p></li>
</ul>
<hr />
<p>Related to this: social media.<br />
I haven’t been spending as much time on social media recently as I used to.<br />
This isn’t a “I’m being disciplined about it” thing.<br />
It’s partly a “not especially interested”; and I think partly I want to organise my social media stuff too.</p>
<p>I’m not particularly negatively affected by “people post their perfect selves on social media”. Albeit, I suppose I’m guilty of posting some good times on social media, which maybe does affect others.</p>
<p>I do find myself drawn-in by e.g. the titles/questions in the Quora Digest emails. (I haven’t thought much about why this annoys me).<br />
I’m also drawn in by the “what’s next? what am I missing out on?” allure of Twitter and Hacker News. (I think Reddit communities have the same draw to them, so I don’t go on Reddit).</p>
<p>Well, uh, yeah, Twitter is probably my favourite social media site for arguments, which I’m fascinated with.<br />
And while the tribalism and culture-war politics is admittedly a big draw for me,<br />
I think another aspect of what I liked about Twitter was its referential nature. Since the 140 characters wasn’t enough to explain or link to any context, tweets would inherently refer to events. As a user, you had to be “in the know” for this to make sense. My experience was often having to puzzle together what people were talking about from various tweets.<br />
There’s a kind of “open to anyone who makes the effort” inclusion to that.</p>
<p>In terms of “organising myself” and “being disciplined”, my concern here is a lack of deliberateness in consumption.<br />
e.g. Spending about an hour looking through various programmer-related discussions on Hacker News or trending GitHub repositories seems fine (especially if it’s an hour I have set aside to do that).<br />
But spending however-long getting mad about slights against my tribe (or dumb things my out-group do) on Twitter until I’ve seen pretty much everything people in my timeline have gotten mad about … doesn’t seem so good.</p>
<hr />
<p>One sensible solution here is “don’t go on Twitter to consume politics if it’s unhealthy for you”.<br />
But I kinda reckon if recommendation-algorithms will naturally find this kindof stuff for me: Instagram’s recommendation manages to show me cartoons with a propaganda-level of political fervour.<br />
– On the other hand: most people are able to move through life and the internet without being politically, tribally worked up about everything. (I’m not sure if this is a case of “once you’ve tasted the forbidden fruit, you can’t go back” kinda thing).</p>
<p><a href="https://www.codesections.com/blog/mastodon-elevator-pitch">CodeSections’s “Mastodon Elevator Pitch”</a> argues in favour of Mastodon essentially as a ‘technical solution’ over Twitters outrage-encouraging site. The incentives of the system are geared to avoid the outrage that Twitter’s induces.</p>
<p><a href="https://www.kialo.com/tour/">Kialo</a> is another ‘technical solution’. Kialo is interested in visualising and structuring the arguments on contentious topics.<br />
I haven’t looked at it enough to have much of an opinion; the only one I’ve looked at was <a href="https://www.kialo.com/is-the-last-jedi-one-of-the-weakest-star-wars-movies-so-far-7055/7055.0=7055.1/=7055.1">“The Last Jedi is one of the Weakest Star Wars Movies So Far”</a>. I guess the hope is that, if points must be made (and supported), this doesn’t give much room for emotion to sway perspective. Yet, I still like Haidt’s “reason is the press secretary of the emotions”.<br />
– Perhaps the point of the site isn’t <em>persuasion</em> so much as a dialogue with less heat to it.</p>
<p>For myself, I’d first wonder whether “doing social media slower” would be ‘better’.<br />
Like, instead of a “retweet and this gets retweeted immediately”, a “review in 24 hours, and retweet if I think it’s still a good idea to do that”. But I suspect if shown the same input I’d behave in the same way, and still be mad again 24 hours later.</p>
<p>Another couple of dumb ideas:</p>
<p>I wonder how analogous the “outrage machine” of social media (and its ills to society) is to “herd immunity” with vaccinations.<br />
As in, if a critical mass of people were immune to outrage, or “fake news” or mainstream media clickbait, then the pathogens won’t go viral amongst vulnerable.<br />
– With biological diseases, a vaccine is an inert (or very weak) form of the disease. This strengthens the body so that the actual disease can’t take hold.</p>
<p>I stumbled across a conspiracy-theory video on YouTube once.<br />
I didn’t stay to watch it.<br />
And <em>obviously</em> only idiots fall for conspiracy videos, right?<br />
But, I kinda wonder how much of the crap in those videos I’d fall for.</p>
<p>Another idea,<br />
maybe I’d be less annoyed by dumb tweets or whatever if I took the time to (1) describe why I’m annoyed by it, (2) figure out an explanation for why the dumb tweet was said, in a way that provides dignity.<br />
– Like, maybe trying to code content <a href="http://slatestarcodex.com/2018/05/08/varieties-of-argumentative-experience/">to a model like SSC’s “Varieties of Argument”</a> is another way to deal with the emotion?</p>
]]></summary>
</entry>
<entry>
    <title>StackOverflow, Elitism, and Community</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2018-04-27-stackoverflow-and-elitism.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2018-04-27-stackoverflow-and-elitism.html</id>
    <published>2018-04-27T00:00:00Z</published>
    <updated>2018-04-27T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on April 27, 2018
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p><a href="So%20this%20came%20up%20on%20HackerNews">https://news.ycombinator.com/item?id=16934942</a>. StackOverflow’s discussion that it ought to do more to be more welcoming.</p>
<p>Some of the points highlighted:</p>
<ul>
<li>Dickish behaviour on StackOverflow comes from the perverse incentives of its reputation system.<br />
e.g. one way to be rewarded with reputation is to ‘edit’ an answer. This leads to frivolous editing, such as removing “thanks” from a question.
<ul>
<li>There’s also a big imbalance between the role of asker and moderator: An asker only wants a response to their question, whereas a moderator will see hundreds of “low-quality” questions being asked. (So can hardly care to be kind to all of these).</li>
<li>One commenter points out that with Reddit, the system is more ‘democratic’ as the cost to ‘exit’ is so cheap: if leadership screw up, it’s cheap to just create another sub-reddit the community can move to.</li>
</ul></li>
<li><p>There’s a selection-bias against quality in questions:<br />
Anyone who can go to the effort to search for previous/similar questions, as well as refine their question down to its essence is more likely to be capable of <em>then</em> finding an answer themselves,<br />
compared to someone who just blindly asks.</p></li>
<li><p>“StackOverflow is elitist…”<br />
HackerNews is <em>on board</em>.<br />
“…to newbies…”<br />
<em>Totally</em>.<br />
“…and women, people-of-colour”.<br />
Those be fighting words.</p></li>
</ul>
<p>It seems that (roughly) StackOverflow has three kinds of users: - Those who ask questions - Those who answer, and moderate - Those who browse the site (from search-engine results page) but don’t ask/answer questions.</p>
<p>My experience personally was joining the site + being ‘reputation blocked’ from helping where I wanted to.<br />
Well, whatever.</p>
<p>Part of the discussion is about the purpose/role of StackOverflow as a site. How its mechanics work (as opposed to, say, mechanics of Reddit). Whether it wants to be a quick/dirty my-question-my-answer or the-question-the-answer site.</p>
<p>Part of the discussion is about how much of an effort askers need to make to ask a question.<br />
And how much of an effort answerers need to make to be considerate.<br />
– Though I think this involves pointing out that people interact in different ways like how <a href="https://status451.com/2016/01/06/splain-it-to-me/">Alice Maz did with “Splain it to me”</a>.</p>
<hr />
<p>I have the concern that much of the “but women are hurting” comments come from people who don’t see that the established norms can be legitimate.<br />
e.g. <a href="https://medium.com/@maradydd/when-nerds-collide-31895b01e68c">Meredith Patterson’s excellent “When Nerds Collide”</a> discusses this. (Patterson’s concerns discussed elsewhere include that these feminists are unconcerned about excluding people they dislike; e.g. autists).</p>
<p><a href="https://status451.com/2016/09/15/social-gentrification/">Simon Penner’s “Social Gentrification”</a> is a good discussion about community interactions like this, too. (Progs are “social gentrifiers”, who invade a place a predominantly “poor” place, and make it nicer, but in doing so exclude those who inhabited the community already).</p>
<p>But that the “StackOverflow isn’t welcoming to women” is fighting words whereas “StackOverflow isn’t welcoming” isn’t:<br />
This is so closely politics and culture wars that it’s disingenuous to discuss without pointing that out.</p>
<p>Most of the interactions of the culture war are driven by fear, not love. And what people value is the notion of relief, and safety.<br />
StackOverflow’s remarks are clearly in reply to support women and people of colour who fear they aren’t welcome.<br />
– As Patterson points out, some nerds get antsy about this since they grew up at the bottom of the social hierarchy (i.e. excluded); then found a place which they belonged. Tech happened to get popular, and these people are now being told they deserve to be on the bottom of the hierarchy, when they’d prefer that no hierarchy were there at all.</p>
<p>I think it’s useful to highlight that the interactions are political because it shows why those involved express &amp; feel things differently:<br />
- e.g. The “as a straight-white man I need to be doing better” is certainly coming from someone who identifies as progressive.<br />
(i.e. other people who value ‘progressive’ as part of their identity are likely to speak the same way; whereas in my experience “white men” don’t). - The claim “StackOverflow isn’t welcoming to women” is parsed as “sexism”.<br />
- Non-progressives consider “sexism” as “discrimination against a women, because she’s a women”. This fails to pattern-match against interactions on StackOverflow since anonymous accounts aren’t distinguishable by gender traits.<br />
Interactions are judged at the level of the individual. - Whereas a progressive considers “sexism” as: the structures in place or the way that women feel. So if most of StackOverflow’s users are men, then that’s evidence of sexism. If women don’t feel welcome, the culture is sexist.<br />
Interactions are judged at the level of the group.</p>
]]></summary>
</entry>

</feed>
