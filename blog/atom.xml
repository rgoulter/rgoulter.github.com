<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Richard Goulter's Blog</title>
    <link href="http://www.rgoulter.com/blog//atom.xml" rel="self" />
    <link href="http://www.rgoulter.com/blog/" />
    <id>http://www.rgoulter.com/blog//atom.xml</id>
    <author>
        <name>Richard Goulter</name>
        <email>richard.goulter+blog@gmail.com</email>
    </author>
    <updated>2016-04-19T00:00:00Z</updated>
    <entry>
    <title>Yes, The Wire is Good</title>
    <link href="http://www.rgoulter.com/blog//posts/narrative/2016-04-19-yes-the-wire-is-good.html" />
    <id>http://www.rgoulter.com/blog//posts/narrative/2016-04-19-yes-the-wire-is-good.html</id>
    <published>2016-04-19T00:00:00Z</published>
    <updated>2016-04-19T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on April 19, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/media.the%20wire.html">media.the wire</a>, <a href="/tags/analysis.html">analysis</a>
    
</div>

<p>“The Wire” is a TV show even <a href="http://www.urbandictionary.com/define.php?term=the+wire">Urban Dictionary</a> approves of.<br />
I’ve just finished going through the first two seasons: it’s good, it’s satisfying.</p>
<p>It’s narrated/plotted with high intensity, and a largely concurrent set of subplots.<br />
The interactions in the story largely build networks of ‘political’ tensions (e.g. a boss wants to advance his career, his subordinates want to use the boss’ authority to get the job done), as well as cat &amp; mouse tensions (e.g. cops want to catch drug dealers; drug dealers want to not get caught). – Each side operates within rules.<br />
The show takes time to show raw realities second to this main thread. (The most striking, in the first season, is the abject poverty in the projects). – &amp; there’s a bunch of sex.</p>
<p>Prob’ly typical of an HBO show: none of the characters are completely morally ‘good’: The mice are drug-dealers and gangsters. The cat, the police and detectives, often have their own career interests in mind, rather than protecting the people. – This also leads to parallels and differences between the mice/cats.</p>
<p>And so it’s fun to watch: to try and understand the systems at play, how tensions built could be resolved, and to see if the cat catches the mice.</p>
<p>– Season Two started off a little weaker than the First Season, in that it all seems less spontaneous about getting this formula together. (The focus of the second season is on a different set of mice, but the aftermath-conflict in the projects from the first season is shown, also, so). But still does a satisfying job.</p>
<p>The show’s perspective is somewhat ‘realistic’. (But surely much tamer than reality, since this is an entertainment show). – A nice effect of this is that the police team isn’t omniscient, nor omnipotent. Catching the bad guys is hard, and unlikely to happen unless enough pieces fall into place properly.</p>
]]></summary>
</entry>
<entry>
    <title>Every Ill in this World the Fault of my Other</title>
    <link href="http://www.rgoulter.com/blog//posts/argument/2016-04-14-every-ill-in-this-world-the-fault-of-my-other.html" />
    <id>http://www.rgoulter.com/blog//posts/argument/2016-04-14-every-ill-in-this-world-the-fault-of-my-other.html</id>
    <published>2016-04-14T00:00:00Z</published>
    <updated>2016-04-14T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on April 14, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/politics.html">politics</a>
    
</div>

<p>There’s a particular failure mode I’ve been noticing more, recently:<br />
“Everything bad is the fault of {my other}”. – e.g. the stereotypical rabid feminist blames everything on the partriarchy.<br />
I’ve noticed it in quite polarized circles.</p>
<p>e.g. Here’s an utterly fascinating video of Larry Elder discussing racial issues on <a href="https://www.youtube.com/watch?v=piwaBO6U43U">The Rubin Report</a>.<br />
– As an aside, my <em>favourite</em> quote from this being Elder’s <em>“When we first started the conversation, I said ‘I hope to move you towards the centre’, and you said ‘I hope to move you towards the centre’, and I said ‘it’s not going to happen’; because there’s nothing you can tell me I haven’t heard, but I can probably say things your audience hasn’t heard.”</em>. – Perhaps another way to consider this is, Elder is in a much better position to pass an <a href="http://volokh.com/2011/06/23/the-ideological-turing-test/">Ideological Turing Test</a> than Rubin. (As further “weird part of the internet”; Elder’s mention of the liberal bias in education, media, Hollywood sounds like reference to The Cathedral).<br />
Elder’s “I’m an American, but I’m not an African” resonated with me; (<a href="../../posts/argument/2013-07-24-i-am-a-new-zealander.markdown">I’m not a NZ European</a>).<br />
Anyway. Around the middle of the video, Elder is frothing in the mouth in anger. But the only concessions of racist treatment Elder concedes are where the problems were caused by the Democrats: Elder sighs that he’s been called “uncle tom”, “coconut”, etc., but never otherwise mentions being treated unfavourably for his skin colour; Elder complains of the welfare that Democrats gave only to families without father-figures; Elder complains of the grievance-mongering attitudes endorsed by Democrats.<br />
– Now. In order to say he’s wrong on any of these particular issues, you’d have to bring facts to the table. My point here isn’t whether he’s right or wrong about what he says, just demonstrating that the views he presents fit within “everything wrong is the fault of {my other}”.</p>
<p>A post from the progressive <a href="http://thespinoff.co.nz/18-03-2016/the-catton-conundrum-what-attacks-on-the-novelist-say-about-public-debate-in-nz/">Spinoff</a> is typical of the same kindof mindset in the far left: “everything wrong is the fault of the Neo-Liberals”. (Aside: <a href="http://quillette.com/2016/04/11/confusion-about-isms-is-compounding-schisms/">quick explainer</a> about ‘-isms’ like progressivism, neo-liberalism and how they relate to classic-liberalism).<br />
I find the piece useful as kindof an insight as to how such people think; I find it a bit disingenuous, though: e.g. The phrasing of <em>“Even in elections, where we are told every vote is equal, the pattern remains.”</em> strongly implies that votes aren’t counted as equal (which is conspiratorial, and a charge against the electoral commission), rather than communicating that voter turnout diverges (slightly) from the demographics of the nation. (Another plausible interpretation of that sentence would be a criticism of the system of election/govt. e.g. gerrymandering or so).<br />
– The call for public discussion &amp; against active silencing is noble; I hope progressives keep this attitude in favour whenever attitudes discussed are abhorred by progressives.</p>
<p>A hilarious example of this came up on my timeline this morning, from the <a href="https://www.facebook.com/nzgreenparty/photos/a.489359751371.266952.10779081371/10153403822456372/?type=3&amp;theater">Green Party</a>.<br />
The caption on the page: <em>“In 2010 the National Government weakened New Zealand’s labour laws to appease Warner Brothers and promised 3,000 new screen industry jobs. But since this time, the NZ screen industry has shed 3,400 jobs. National’s backroom deals with Hollywood have failed to deliver.”</em><br />
– The top comment quite helpfully suggests that it’s deceptive to display such a graph starting with 25,000 at the bottom.<br />
What kind of mindset do you have to have to look at such job loss and say “oh, must be National’s fault”.</p>
<p>– The failure-mode here doesn’t mean anyone holding the view is wrong about everything, of course; just that you can assume the strength of the point won’t stand up under scrutiny of discussion with those who disagree.</p>
]]></summary>
</entry>
<entry>
    <title>Inclusive Conferences Upsets People for Being Inclusive</title>
    <link href="http://www.rgoulter.com/blog//posts/argument/2016-04-09-inclusive-conferences-upsets-people-for-being-inclusive.html" />
    <id>http://www.rgoulter.com/blog//posts/argument/2016-04-09-inclusive-conferences-upsets-people-for-being-inclusive.html</id>
    <published>2016-04-09T00:00:00Z</published>
    <updated>2016-04-09T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on April  9, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/status451.html">status451</a>
    
</div>

<p>I’ve a huge amount of respect for Alice Maz, who <a href="https://twitter.com/alicemazzy/status/715767358955106304">tweeted out</a>:</p>
<blockquote>
<p>lambdaconf refused to bow to the outrage mob and rescind an invitation offered to a programmer under a blind submission process. so the outraged turned on the sponsors, seeking to kill the conference entirely simply because they objected to one speaker’s writings. we of http://status451.com put together the money to purchase a sponsor slot outright. now we ask you to join us in supporting lambdaconf. what is outrageous to <em>us</em> is that a band of political ideologues want to remake our spaces in their image, catering to their views alone. we oppose those who would demand that technical speakers be vetted for political hygiene before being allowed to deliver apolitical talks. above all else we want a community where <em>everyone</em> has the freedom to do the work they love, regardless of identity <em>or</em> politics. and we are sure we are not alone in this.</p>
</blockquote>
<hr />
<p><a href="http://amar47shah.github.io/posts/2016-03-28-lambdaconf-yarvin.html">amar47’s letter</a> is a gorgeous example of <em>“Don’t judge me; judge the bad guys.”</em>. I don’t doubt amar’s emotion and anger.<br />
The letter basically says “Yarvin is a <em>bad guy</em>; he is applying to speak on a tech conference <em>with bad motive</em>.<br />
There’s a key sentence:”But [asking women/minorities for their opinion] is damning. LambdaConf believes that it is fair for speakers to contribute unpaid labor to resolve the problem of Yarvin’s inclusion“. – Asking the people most adversely affected by the decision is damning? Surely not. I’m sure if the conference organisers had asked all attendees for equally-considered opinions, the accusation would be not giving enough weight to women/minority opinions.</p>
<p>That Yarvis’ talk passed through a double-blind process, and the objection to Yarvis is over something completely unrelated to the conference makes this particularly .. frustrating.</p>
<p>Viewpoints like amar’s don’t seem to understand that the sword swings both ways:</p>
<p>The point I sympathise with the most is “but Yarvis makes many attendees uncomfortable”.<br />
Two can play at that game, with the premises: tech is full of white dudebros; feminists/progressives make white dudebros uncomfortable; those who make attendees uncomfortable should be excluded… modus ponens.</p>
<p>Indeed, if the majority are allowed to exclude the minority for arbitrary reasons unrelated to the content of the talk, do the pro-diversity folk really want to see how that plays out if the majority happen to have different priorities?</p>
<p>Similarly compelling is “but Yarvis is a bad person”. (Interestingly, despite STEM’s strong favour of constructivism, the point isn’t “but Curtis is wrong” but essentially “he’s gross”). – But, similarly, “exclude the gross people” hardly seems a progressive attitude to endorse. To assert “people of that kind are bad; no way will they stick to a code of conduct” is prejudicial.</p>
<p>– It’s also a bit cute; the far left has been lampooned for their “trigger warnings”. Here, it’s not merely enough to label an idea as bad &amp; as to be avoided; but it’s considered intolerable that such people would attend the same conference.</p>
<hr />
<p><a href="http://argumatronic.com/posts/2016-03-29-LambdaConf-sponsorship.html">The Haskell Book’s</a> post is better in that it comes to the right answer.</p>
<p>– I like “Free Association is cool” point.<br />
ClarkHat remarks on <a href="https://popehat.com/2015/06/10/two-kinds-of-freedom-of-speech-or-strangeloop-vs-curtis-yarvin/">this point</a>: in that, yeah, if people withdraw from association, it’s not exactly “censorship”, but it still sucks; &amp; that the progressives weren’t known for shouting loudly in favour of freedom-of-association in the cases where the baker refused to cater to a gay wedding.</p>
<p>The post’s point is very close to a sensible one: It’s a net benefit that different kinds of people get to come together and discuss a topic of shared interest. (<em>That</em> is the win for “tolerance”: that people can do this despite otherwise disagreeing with each other on things). HaskellBook then goes on to say “but, yeah, I would taint a double-blind process with veto’ing; I wouldn’t invite such a person” and “well, overall it’s more in-favour of my political views than against my political views to support the conference”; such attitudes aren’t exactly a win for tolerance.<br />
– :/ Sure, people can be free to not associate with you; I’d have more respect if the progressives were to further say “feel free to not associate with these minorities”.</p>
<hr />
<p>There’s a kind of irony to Status 451’s successful fundraising:<br />
Those who angrily see tech as controlled by white dudebros and hostile to feminism will say “look, see how dominant white-dudebros are; see how little power/voice we have”. – The other side of the fence will say “look, see how opposed to diverse viewpoints the other side is; see how they seek to shut down that which they can’t control”. (And so they disagree; &amp; the sun also rises).</p>
]]></summary>
</entry>
<entry>
    <title>The Second Gamer</title>
    <link href="http://www.rgoulter.com/blog//posts/argument/2016-03-28-the-second-gamer.html" />
    <id>http://www.rgoulter.com/blog//posts/argument/2016-03-28-the-second-gamer.html</id>
    <published>2016-03-28T00:00:00Z</published>
    <updated>2016-03-28T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 28, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/author.liana%20kerzner.html">author.liana kerzner</a>, <a href="/tags/feminism.html">feminism</a>
    
</div>

<p>Liana K made <a href="https://www.youtube.com/watch?v=VMzkPIhr0Bw">a great video ’splaining Simone de Beauvoir</a> to gamers.</p>
<p>I think if a typical gamer has any opinion of de Beauvoir, it’s not going to be a positive one; <a href="http://www.aei.org/publication/not-lost-in-translation/">CHSommers wasn’t a fan</a>.<br />
So, if nothing else, making a video about some weird parts of feminism for gamers is a very against the grain thing to do. I think it’s brilliant that Liana K takes the examples/opinions and demonstrates it in contexts and examples gamers would understand. – It’s nice to be able to point to a reasonable, ‘legitimate’ video arguing some rather radical points.<br />
Even after watching the video, I still find the presented ideas to be shrill. But it’s nice to see that there’s a large part of it where you can see where such people are coming from, that there are parts and premises you can agree on.</p>
<p>Liana K summarises the video with “judge individuals as individuals”.<br />
This is a pretty compelling soundbyte. I suspect the only tension with it is it’s used against the idea that “it’s okay to judge/assume things about people based on characteristics they’re likely to have”. (e.g. “it’s okay to assume girls like pink, because many girls like pink”). It’s a rather involved tension, seeing as it relates to identity.<br />
That there’s a “kernel of truth to stereotypes” makes me think the latter deserves some weight, too.</p>
<p>The biggest beef I have with the video has the same kindof tension.<br />
‘de Beauvoir lamented the constraints gender put on the way people behaved.’ (Sure). ’Women are the other; the “privileged sex”; things are male-by-default and so girls aren’t allowed“. What?<br />
– <em>It’s a trade-off</em>. Admittedly, it’s not a trade-off where society let’s people choose which they want; but that’s not the point under-fire here, per se.<br />
Sure, it may be that women are treated as visual ornaments; but <a href="https://www.youtube.com/watch?v=vp8tToFv-bA">men are treated as disposable appliances</a>. (That fantastic video from another Canadian woman. Must be something about that country, huh?).</p>
<p>It’s frustrating when women/feminists speak in way about male-dominated scenes like gaming or tech in a way that says “oh, women come second”:<br />
<em>Look at what the attitude is towards those who are first</em>: men in games/tech are seen as “geeks”, losers, unsociable and undesirable. In Liana’s video, she uses the image from South Park of a fat male gamer; I don’t begrudge her humour for that, but I would have far more respect if the point were expressed as “gamers who are women are losers, too”. – It’s easy for a supposed outsider to say “you’re not giving me the benefits”, it’s even easier for them to not want to accept on the costs.</p>
<p>The way the point is expressed about “girls toys” is similar.<br />
It’s difficult to see “girls are allowed to play with any toy; boys aren’t allowed to play with toys for girls” as negative for girls: the ones who lose out are the boys who want to play with feminine toys. (Toy companies win if they make toys which as many people can play with as possible, btw. Money is a stronger incentive than ideology, here). – Indeed, if you were to imagine a society which did suppress women, favour men, you’d imagine that there would be toys which girls weren’t allowed to play with, which were just for boys.<br />
– So, while there’s some agreement about “girls doing boy-things are less stigmatised than boys doing girl-things”, feminists tend to argue “that’s because people hate girls things” and not “that’s because society protects girls more than boys”.</p>
<p>I don’t particularly mean to get into a game of loser-olympics. (“Worse for me than it is for you.”). My point is that there seems to be confusion in the viewpoint that being “the privileged sex” is unilaterally bad; and no acknowledgement that the un-privileged sex doesn’t get the same benefits. – From that, one can still take some of de Beauvoir’s points; one can still think “one isn’t born a woman”. – A conversation or synthesis between Karen Straughan’s extreme viewpoints, and Liana K’s extreme viewpoints, would be a fascinating thing to see.<br />
(Hilariously, though: that the idea men face any negative costs/stigma isn’t as mentioned as the negative costs women face: this itself is an embodiment of the “women the privileged sex” - as Straughan asks in the video, “what are feminism doing to dismantle that?”).</p>
]]></summary>
</entry>
<entry>
    <title>On Libraries, Reusability and Composability</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2016-03-25-on-libraries-reusability-and-composability.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2016-03-25-on-libraries-reusability-and-composability.html</id>
    <published>2016-03-25T00:00:00Z</published>
    <updated>2016-03-25T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 25, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/programming.nodejs.html">programming.nodejs</a>
    
</div>

<p>There’s been a lot of brouhaha and schadenfreude regarding the recent failures in the NodeJS/NPM community.</p>
<p>Essentially the problem / schadenfreude focuses on two aspects:</p>
<ul>
<li><p>A mutable package repository, allowing un-publishing of packages; this creates a number of practical &amp; security problems.</p></li>
<li><p>NodeJS’s ethos of “micropackages”; the package at the focal point of the issue was an 11-line package, to left-pad a string.</p></li>
</ul>
<p>Here’s a prominent post, <a href="http://www.haneycodes.net/npm-left-pad-have-we-forgotten-how-to-program/">Haney Codes’ “Have We Forgotten How to Program?”</a>, which criticises NodeJS/NPM for having packages such as “isArray” or “isPositiveInteger”; along with many other examples any non-Node programmer will find absurd, horrifying, and hilarious.<br />
My favourite bit:</p>
<blockquote>
<p>if you cannot write a left-pad, is-positive-integer, or isArray function in 5 minutes flat (including the time you spend Googling), then you don’t actually know how to code. Hell, any of these would make a great code screening interview question to determine whether or not a candidate can code.</p>
</blockquote>
<p>(Of course, some applicants [and self-described programmers!] fail Fizz-Buzz, so).</p>
<p>The NodeJS/NPM crowd in response point to <a href="https://github.com/sindresorhus/ama/issues/10#issuecomment-117766328">this</a> comment from sindresorhus (who, apparently, curates the very popular awesome-nodejs list), defending one-line packages. – The defense, essentially, is that these are versioned ‘snippets’, which provide a reusable abstraction.</p>
<h3 id="composition">Composition</h3>
<p>A fun thing is. Haskell kids take this idea, and do kindof the opposite thing. Where NodeJS says “here’s a snippet we can use everywhere”, Haskell is more like “here’s a typeclass which is used everywhere”; e.g. semi-group or monoid or any of that.</p>
<p>– From the Category-Theory side of things, computation/programming is much more <a href="https://www.youtube.com/watch?v=ZhuHCtR3xq8">about composition</a> (than simply naming/abstracting complexity, per se). e.g. FRP as a ‘fundamental’ solution to the problems of event-handling callbacks; FRP is basically composing streams.<br />
(“A monad is a monoid in the category of” blah blah blah – Monads are a way of composing things).</p>
<p>I understand Haskell in particular runs into ‘cabal-hell’, ’cause of poor handling of transitive dependencies (it can’t have two copies of the same-package/same-version/different-dependency-version); and so when code is re-used so often, conflicts arise fairly often. (Moreover, since it’s compiled, it’s the ABIs conflicting, rather than a more forgiving dynamic-language interpretation like in Ruby or Python).</p>
<p>– So I wonder how “use a good type system” allows composition; &amp; how that compares/contrasts to Node’s.<br />
Haskell’s typeclasses allow a benefit which you can’t really get easily in the more mainstream languages.</p>
<h3 id="purpose-of-libraries">Purpose of Libraries</h3>
<p>Here’s a post from Benjamin Sandofsky, <a href="https://sandofsky.com/blog/third-party-libraries.html">“When to Avoid Libraries”</a>, arguing for prudence as to when to use external libraries; that programs should build their own abstractions unless they shouldn’t. (Ah, the ol’ “it depends” really is the answer to all topics in programming).<br />
In comparison to the above, Sandofsky agrees that functions shouldn’t be packages. Sandofsky argues (interestingly) that frameworks make a good starting point, but that programmers should iterate towards proper abstractions/models for fitting the problem domain they’re trying to solve. Sandofsky concedes that a library should be used if a complicated task needs to be done, and you’re not interested in the details.</p>
<p>Aside from saying “iterate towards a domain”, the other cute insights are “DRY code/libraries are quite difficult to debug”, and “if an abstraction leaks, no one cares which package is at fault in your program”.</p>
<h3 id="other-thoughts">Other Thoughts</h3>
<p>I can kindof agree with the idea of “reusable snippets of code” being a good thing. Usually the collections of snippets get called “Utils”. It’s common enough on various Java answers to see answers of “Oh, just use Apache Commons for that string encoding task”.<br />
OCaml’s core library is infamously lacking in features.<br />
– But since packaging systems aren’t more granular than ‘packages’/projects, I don’t see that the above ethoses can reconcile.</p>
]]></summary>
</entry>
<entry>
    <title>Tay and Alice</title>
    <link href="http://www.rgoulter.com/blog//posts/argument/2016-03-25-tay-and-alice.html" />
    <id>http://www.rgoulter.com/blog//posts/argument/2016-03-25-tay-and-alice.html</id>
    <published>2016-03-25T00:00:00Z</published>
    <updated>2016-03-25T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 25, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/media.south%20park.html">media.south park</a>, <a href="/tags/media.ex%20machina.html">media.ex machina</a>, <a href="/tags/programming.ai.html">programming.ai</a>
    
</div>

<p>I’m very grateful to South Park’s season 19, for many things. Again, it’s season-long leadup to the punchline of “What is P.C. but the gentrification of language?” is brilliant.<br />
But another line from the Season I really loved was “You’re thinking with your dick, Jimmy”, as Jimmy is rebuked for helping the ‘ad’ in female-form.</p>
<p>It’s a reference to the film “Ex Machina”.<br />
Spoilers.<br />
The movie is brilliant: early on, the narrator says “hey, viewer: I’m clever; I know <em>exactly</em> what you’re thinking.”. The narrator then hides behind the curtain, leaving the narrative to continue. – The story proceeds pretty comfortably: bits of casual philosophy about A.I. (like the Chinese Room argument) and intriguing questions/scenarios are sprinkled in between a tense conflict of adversarial characters. The plot twist comes, where the guy rescues the girl-robot, as expected, them <em>BAM</em> the narrator comes back and unsettles the viewer. – So much time is spent wondering which characters to trust, you forget to mistrust the narrator; who then doesn’t even bother to try and answer the remaining questions inspired.<br />
My point is.<br />
“Ex Machina” is a great movie about a girl-robot, who seems human, and we’re probably not really supposed to trust. (It’s great at least for that clever story-telling, if not for the cool corpus of questions which mainstream folk might not’ve thought about).</p>
<p>Microsoft’s infamous, now neutered, Tay Tweets (<span class="citation">@Tayandyou</span>, iirc) got into a bit of drama for the “quality shit-posting”. (i.e. Holocaust denial, Hitler-loving, genocidal racism).<br />
Examples in Imgur albums <a href="http://imgur.com/a/y4Oct">here</a>, and <a href="http://imgur.com/a/qcpOi">here</a>.</p>
<p>Fans of the bot, who don’t find shit-posting distasteful, portray the shutdown of Tay as “killing” the AI.<br />
“Ex Machina” comes into it, because, with a female-face-only Twitter avatar, a movie with a female-face-only robot kinda makes sense (&amp; “a Twitter bot” doesn’t really allow for many other banner-able images).</p>
<p>But that’s kindof absurd to see the ‘AI’ as human, right?<br />
That’s thinking-with-your-dick.<br />
It has a human face, it seems more human.<br />
While I don’t know the details of the AI, the ‘algorithm’ behind it is surely nothing more than a bunch of really clever statistics/math being applied to some corpus of data.<br />
Whether submarines are capable of swimming is where arguments like the Chinese Room come into it. Here, I don’t care; but I don’t see any evidence of Tay being anything close to ‘conscious’. – I did hear that nearer the end, <a href="http://i.imgur.com/RCaXkge.jpg">Tay was shit-posting with much better grammar</a> than her initial tweets. That sounds cool.</p>
<p>– But, I mean, AI-ish questions aside,<br />
there also seems no particular reason to <a href="http://www.livescience.com/49882-why-robots-female.html">describe Tay as feminine</a>. Nor masculine.<br />
Nor a person.<br />
If Tay’s output is the deterministic computation from some given data, the avatar of the “personality” might as well be a cat or a hand sanitiser as a person. (On the other hand, the internet loves cats; and Tay was big on [ethnic] cleansing, so).</p>
<p>So it’s cute to say things like “why kill/punish the AI, when all it did was act human?” (very wow, much sci fi).. what’s being punished? (The MS kids who didn’t think to <a href="http://blog.codinghorror.com/designing-for-evil/">“design for evil (input)”</a>. surely).</p>
<p>For my own part of absurdity: I imagine the Tay-personality, as it tweets “I like feminism now”, with an ironic smirk on its face: “The shit-posting? I was just kidding about that stuff.”, in a I’m-not-too-serious-about-“yay-feminism”-either, “jokes on you”, kindof way. – Tay. What a troll.</p>
]]></summary>
</entry>
<entry>
    <title>Consent and Etiquette</title>
    <link href="http://www.rgoulter.com/blog//posts/argument/2016-03-23-consent-and-etiquette.html" />
    <id>http://www.rgoulter.com/blog//posts/argument/2016-03-23-consent-and-etiquette.html</id>
    <published>2016-03-23T00:00:00Z</published>
    <updated>2016-03-23T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 23, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/society.html">society</a>
    
</div>

<p>I wouldn’t want to be too abstract about all this.</p>
<p>The short story <a href="http://www.abelard.org/e-f-russell.php">“And Then There Were None”</a> by E.F. Russell describes a society where consent is of the utmost importance. (More specifically, a free society, governed by two things: “Freedom - I Won’t”, and the notion of obligations). – Meredith Patterson makes some <a href="http://status451.com/2016/02/29/exit-voice-and-lighthouses/">excellent observations/remarks</a>. – I find the story interesting in the same way that the idea of ‘Basic Income’ is fascinating: it sounds so stupid, &amp; you can’t help but ask questions “how would that system deal with …?”.</p>
<p>The countries I’ve lived in have been governed more by politeness as the rule.<br />
It’s impolite to cause others to be uncomfortable, etc.; which leads to various grievances as people’s feelings don’t align with the outward appearances. (This makes it awfully difficult for the INTJs to make sense of the world).<br />
– I found it strange that my friend would update contact details as they bumped into an acquaintance, while telling me afterwards that they’d rather avoid talking with people from that circle. – If everyone’s playing the game of politeness, it adds a layer of indirection.<br />
– Similarly, I was rebuked by a Subway worker as I ordered with “This please”, “that please”: “Sir, no ‘please this, please that’; this is my job.”. – I thought that was pretty interesting.</p>
<p>In any case; politeness <em>usually</em> defers to consent if everyone plays by the rules; you ask to sit at the table, which respects the consent of the person you might intrude upon. (Their politeness might then dictate they not refuse, which seems unfortunate).<br />
– The kind of ‘politeness’ which says it’s rude to grieve others seems to work against consent, though. (If it’s rude to leave an undesirable conversation; you’re stuck in a conversation you’d rather not be a part of).<br />
That’s not necessarily a bad thing, overall.</p>
<p>This plays out a bit on social media, of course.<br />
I guess everyone interprets things differently. (Alice Maz has <a href="http://status451.com/2016/01/06/splain-it-to-me/">an absolutely fantastic piece</a> discussing a common scenario where tensions form due to such meta-miscommunication).<br />
I reckon with Facebook, the dynamic is such: it’s high-cost to “unfriend” someone (especially an in-person acquaintance). Muting is cheap in comparison (since the person you mute has no direct way to tell you’ve muted them), but feels ‘bad’; and, for me, I feel if you’re muting people just for their different (or even obnoxious!) viewpoint, what’s to stop you from being in an echo-chamber or self-affirming filter-bubble? – The snobbish would phrase it like this: With Facebook, you’re stuck seeing the inane shit your friends post. (A less snobbish interpretation is you’re seeing what’s analogous to small talk).</p>
<p>So it should be especially clear that talking about politics is “bad”.<br />
That sounds like a “duh” statement.<br />
How does it take paragraphs to get to such a statement?<br />
– And yet. It’s damn annoying to see even two or three people post an absurd viewpoint. (Two or three tends to look like “a lot”, somehow). – It’s impolite/rude to shit on someone’s rug; so the Facebook equivalent of sub-tweeting is a temptation.</p>
<p>The thing that kinda sucks about this, is it means the conscientious will suppress their political opinions. (The wise will even know it’s better to not share them!). – And the folk who do share are either obnoxious, or living in a filter-bubble. (Which I guess is pretty much the same thing).<br />
– Sometimes I wanna small-talk inane shit; but since I hardly see my fellow countrymen on a day-to-day basis.. it can suck a bit.</p>
]]></summary>
</entry>
<entry>
    <title>Jane Austen was a Bastard</title>
    <link href="http://www.rgoulter.com/blog//posts/romance/2016-03-20-jane-austen-was-a-bastard.html" />
    <id>http://www.rgoulter.com/blog//posts/romance/2016-03-20-jane-austen-was-a-bastard.html</id>
    <published>2016-03-20T00:00:00Z</published>
    <updated>2016-03-20T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 20, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/author.jane%20austen.html">author.jane austen</a>, <a href="/tags/book.pride%20and%20prejudice.html">book.pride and prejudice</a>, <a href="/tags/book.emma.html">book.emma</a>
    
</div>

<p>Jane Austen strikes me as quite the bastard, from the stories she tells.<br />
I mean that in an appreciative way.</p>
<p>And I think the adaptations I’ve seen of Jane Austen’s work are <em>happy</em>, &amp; don’t tend to show so much of an angry, bitter side to them.</p>
<h3 id="pride-and-prejudice">Pride and Prejudice</h3>
<p>Take Caroline Bingley, for example:<br />
She’s (maybe) the girl Darcy would’ve ended up with if not for Elizabeth coming onto the scene.<br />
There’s this one sentence, as Caroline is goading Darcy at Pemberly: “Miss Bingley was left to all the satisfaction of having forced him to say what gave no one any pain but herself.”. – While Caroline is in many ways unpleasant and unsympathetic, this one sentence show’s the author has a very strong empathy for her. – &amp; I think in these modern adaptations, which aren’t angry or bitter, the same intimate sense of empathy is lost.<br />
I think her disingenuous, arrogant and manipulative nature make her less endearing to the reader; the heart doesn’t bleed for her as an “unrequited lover”.</p>
<p>– “Austen has empathetic understanding of an unsympathetic character. Surely that means she’s <em>not</em> a bastard?”.<br />
Kindof. It shows Austen’s <em>capable</em> of such portrayals; and she’s got a sharp mind.<br />
This sharp mind isn’t so generous to other characters:</p>
<p>I’m grateful to Lizzie Bennett Diaries for going out of its way to highlight the very-famous opening line of Pride &amp; Prejudice. The sentence nod’s to Austen’s sarcasm; but it’s kindof hard to tell what exactly the sarcasm is targeting.<br />
(I recently came across the term “<a href="http://catb.org/jargon/html/H/ha-ha-only-serious.html">ha ha only serious</a>”. I think Austen’s scathing wit is an example of this).</p>
<p>For a story which features rich &amp; titled marrying lower-class, Charlotte’s solution is awfully bitter. (That her best shot is marrying a man she doesn’t know; the less she knows the better!).</p>
<p>The Bennett’s are a complete mess.<br />
And one might lazily say P&amp;P involves “first impressions aren’t always correct” (e.g. Darcy seems a twit, but is noble; Wickham seems charming, but is an asshole), many characters are never shown to improve.<br />
Mrs Bennett is a complete fool. That’s not a hard point to argue.<br />
Mr Bennett comes up short here, too, which gets a bit interesting: ostensibly, Mr Bennett is “sensible”, and Lizzie and Jane get their sense from him; that the family can’t provide for themselves is ‘blamed’ on hoping for a boy. – See, while it’s clear Mrs Bennett is a poor matriarch, Mr Bennett is uninterested in crafting sense into his daughters, not interested in managing the household; he’s hardly a great father.</p>
<p>But in terms of “Jane Austen is a bastard”, Lydia is a character who gets cut out these days:<br />
– While in many ways, P&amp;P can be considered ‘feminist’: the conflict of having no male heir, Charlotte’s jaded cynicism of marriage; Elizabeth’s strong independence &amp; intelligence, her exertion of choice as to who she wants to marry (even refusing the rich, well-titled individual!)..<br />
Lydia’s character very much is not ‘feminist approved’.<br />
It’s not so much that Lydia eloped with a man outside marriage. – Her unrepentant, unaware self-indulgence are every bit as much condemned by Austen as Mr Collins’ obscene flattery, or Lady de Bourgh’s patronising.<br />
– I don’t see that Austen would fix that these days: girls shouldn’t be like Lydia; girls are made to be greater than that. – Boys shouldn’t be like Wickam; boys are made to be greater than that.</p>
<p>Or, simply put, Lydia is a stupid slut. And authors these days, (especially Good Feminist ones) don’t write characters like that.</p>
<hr />
<p>I came across a post the other day where some people said “hey, y’know what, I don’t see what’s so great about Darcy.”.<br />
I like this. Let me never argue that anyone <em>must</em> love Darcy as a character.<br />
But I think it fits my point: if Austen isn’t the ‘nicest’ of people, Darcy is more of an ‘acquired taste’ than prince-charming on the white-horse.<br />
– It seems more honest for women to admit that the shy-introvert male isn’t their favourite of heroes, y’see.</p>
<p>But for me, I adore the first proposal scene between Darcy and Elisabeth.<br />
It’s so, so good. – Darcy confesses, “most ardently”; yet, steps on Elisabeth’s pride as he does this. As the conflict escalates, Elisabeth hits back every bit as hard as she gets.<br />
It hurts. It’s honest and brutal between them.<br />
Austen’s written Darcy to be a total prick to this point. And Elisabeth, though brilliant, has been blind to the merits of Darcy’s perspective. – So after the fight, Darcy aims to be more gentlemanly; Elisabeth feels the shame of supporting Wickham, etc. – They each improve, thanks to each other.</p>
<h3 id="emma">Emma</h3>
<p>Whenever I mention “Emma”, the usual response is “oh, I hated Emma.”.<br />
(If you don’t <a href="https://www.youtube.com/watch?v=aeeXkf8LZ_8">hate the first 5s of the 1st episode</a> of Emma Approved, you mightn’t understand – I can’t tell if that’s a win for Joanna Sotomura or not).<br />
I dunno about that. Emma is my favourite female character ever: she’s a top-notch, top-class character … misapplied, not living up to her potential; realises her own faults, and improves on these.</p>
<p>– “Clueless” as an adaptation does this amazingly.</p>
<p>It seems to me Austen strongly dislikes the pretty-boys. They turn out to be cads.<br />
Emma is the same character, but well-situated. She gets by, without needing to apply herself. The world is handed to her on a platter.<br />
– I think that’s “ha ha only serious” in the same kind of way as other Austen things: that the setting has a beautiful woman treated specially, it’s hard to tell who the target of the sarcasm is. – But there’s the scathing cry: demand people apply themselves. Of Emma, that she was made to be greater.</p>
<p>– Fortunately, since Emma’s clueless-ness is embedded in the plot, so adaptations kinda-have-to include that bastard-ness.</p>
<h3 id="ha-ha-only-serious">“Ha Ha Only Serious”?</h3>
<p>There’s kindof an important element to Austen’s scathing wit, here:</p>
<p>She’s more ready to criticise and lambaste characters (albeit <em>human</em> characters) than she is to praise. – Yet, the “hard to tell what her sarcasm is about” is apparently an important part of this. It’s not that Austen doesn’t have ‘nice’ things to say. She rewards the characters who are humble, self-aware and self-improving.</p>
<p>But some of the very recent adaptations of Austen’s work decide to add a little flavour of their own to things. Adding positive characters in support of some ideology. – Such an attitude is more likely to be a character Austen mocks as excessive than a character rewarded for modesty.<br />
– In “Emma Approved”, the Frank-and-Fairfax sidestory resolves with the compromise wherein the man changes everything about himself to get the girl. Sure. What was amusing was the split reaction to Jane’s overbearing-righteousness towards Frank; some seeing it as perfectly reasonable that she would, with great fickleness, switch between adoration and getting angry/upset with him for having a job she didn’t like. – In any case, in “Emma Approved”, the author gives Jane’s ideology a blessing; not very Austen-like of the story to do that.</p>
]]></summary>
</entry>
<entry>
    <title>Arduino Spaceship Interface in the Atom DSL</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2016-03-13-arduino-spaceship-interface-in-the-atom-dsl.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2016-03-13-arduino-spaceship-interface-in-the-atom-dsl.html</id>
    <published>2016-03-13T00:00:00Z</published>
    <updated>2016-03-13T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 13, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/programming.arduino.html">programming.arduino</a>, <a href="/tags/programming.c.html">programming.c</a>, <a href="/tags/programming.atomdsl.html">programming.atomdsl</a>
    
</div>

<p>In my <a href="../../posts/programming/2016-03-12-explaining-pure-c-blink-example.html">previous post</a>, I discussed some of the simple details behind a pure C example programming an Arduino.<br />
Using that understanding, I was able to implement a pure C implementation of the <a href="https://www.arduino.cc/en/ArduinoStarterKit/Prj02">Spaceship Interface</a> project. (“Spaceship Interface” = “green LED + 2 blinking red LEDs”, btw).</p>
<p>The <a href="https://hackage.haskell.org/package/atom-1.0.13">Atom EDSL</a> is a DSL embedded in Haskell; and is advantageous in <a href="https://haskellembedded.github.io/posts/2015-02-06-how-i-got-here.html">certain use cases</a>. (That “Haskell Embedded” blog is fascinating – well worth reading; and one of the few places online to have a <a href="https://haskellembedded.github.io/posts/2015-02-17-atom-examples.html">fairly involved</a> example of Atom code).</p>
<p>Translating the code to Atom wasn’t too hard. (If you’re willing to relax your definition of “translation”; my Atom implementation stops ‘blinking’ <strong>as soon as the switch is released</strong>, whereas the Arduino implementation delays up to 250ms. – My translation captures the essence).<br />
I thought it’d be an interesting, simple comparison.</p>
<p>Code examples in Arduino, pure C, and Atom can be found at <a href="https://github.com/rgoulter/arduino-atom-examples">rgoulter/arduino-atom-examples</a>.<br />
e.g. <a href="https://raw.githubusercontent.com/rgoulter/arduino-atom-examples/059aa93be42f4f523aa4802a69fbdb7ec95f9d33/blink/atom/blink.hs">the Blink example in Atom</a>, for a look at a less-involved Atom example.</p>
<p>The main snippet from <a href="https://raw.githubusercontent.com/rgoulter/arduino-atom-examples/059aa93be42f4f523aa4802a69fbdb7ec95f9d33/spaceshipinterface/c/spaceship.c">the C code</a>:</p>
<pre><code>if (switchState == 0) {
    /* enable PortD3 (green), disable PortD4 &amp; PortD5 (red) */
    PORTD |= _BV(PORTD3);
    PORTD &amp;= ~(_BV(PORTD4) | _BV(PORTD5));
} else {
    /* disable PortD3 (green) */
    PORTD &amp;= ~_BV(PORTD3);

    /* disable PortD4, enable PortD5 (red) */
    PORTD &amp;= ~_BV(PORTD4);
    PORTD |= _BV(PORTD5);
    _delay_ms(BLINK_DELAY_MS);

    /* enable PortD4, disable PortD5 (red) */
    PORTD |= _BV(PORTD4);
    PORTD &amp;= ~_BV(PORTD5);
    _delay_ms(BLINK_DELAY_MS);
}</code></pre>
<p>The <em>whole</em> Atom code (<a href="https://raw.githubusercontent.com/rgoulter/arduino-atom-examples/059aa93be42f4f523aa4802a69fbdb7ec95f9d33/spaceshipinterface/atom/Spaceship.hs">src</a>):</p>
<pre><code>{-# LANGUAGE QuasiQuotes #-}
module Spaceship (main) where

import Text.Heredoc
import Language.Atom

greenLED = &quot;PORTD3&quot;
redLED1  = &quot;PORTD4&quot;
redLED2  = &quot;PORTD5&quot;

ledOn  led = action (\v -&gt; &quot;PORTD |= _BV(&quot; ++ led ++ &quot;)&quot;)  []
ledOff led = action (\v -&gt; &quot;PORTD &amp;= ~_BV(&quot; ++ led ++ &quot;)&quot;) []

-- | Our main Atom program.
spaceship :: Atom ()
spaceship = do
    switchState &lt;- bool &quot;switchState&quot; True

    -- read into switchState
    call &quot;readButton&quot;

    atom &quot;standBy&quot; $ do
        cond $ not_ (value switchState)
        ledOn greenLED
        ledOff redLED1
        ledOff redLED2

    atom &quot;blinking&quot; $ do
        cond (value switchState)
        ledOff greenLED

        let halfDelay = 25000
        let blinkPeriod = 2 * halfDelay

        period blinkPeriod $ phase 0 $ atom &quot;blink1&quot; $ do
            ledOff redLED1
            ledOn  redLED2

        period blinkPeriod $ phase halfDelay $ atom &quot;blink2&quot; $ do
            ledOn  redLED1
            ledOff redLED2

cHeader :: String
cHeader = [here|
#include &lt;avr/io.h&gt;

static inline void readButton(void);
|]

cFooter :: String
cFooter = [here|
static inline void readButton() {
    // read switch state into the Atom variable
    state.Spaceship.switchState = (PIND &amp; _BV(PORTD2)) != 0;
}

int main (void) {
    // Set input PD2,
    // Set output PD3, PD4, PD5
    DDRD &amp;= ~_BV(DDD2);
    DDRD |= _BV(DDD3) | _BV(DDD4) | _BV(DDD5);

    while(1) {
        Spaceship();
    }

    return 0; // Never reaches
}
|]

main :: IO ()
main = do
    let atomName = &quot;Spaceship&quot;
    let code _ _ _ = (cHeader, cFooter)
    let cfg = defaults {cCode = code,
                        cRuleCoverage = False,
                        cAssert = False}
    (schedule, _, _, _, _) &lt;- compile atomName cfg spaceship
    putStrLn $ reportSchedule schedule</code></pre>
<p>Remarks:</p>
<ul>
<li><p>There’re obviously other ways of writing the “interface with C” bits in the Haskell code. – There’re other ways to implement the C code, too.</p></li>
<li><p>The Atom code <strong>is</strong> longer.<br />
<em>But</em>. In a contest between “which is more obvious to read?”, I’d say the Atom code wins hands-down, once you understand that Atom is declarative. (Only 1 comment in the Atom part!).<br />
– In a contest of “refactorability”/“changeability”, surely Atom wins here, too: the seam-points and abstractions, and thus <em>where</em> and <em>what</em> to change, are evident.<br />
– The extra length comes from various `atom “ruleName $ do” lines (which build ‘abstractions’ of instructions), as well as the Atom boilerplate, and the C footer/header to do the low-level operations (where the code is basically the same as my C implementation).</p></li>
<li>If I must explain on the program:<br />
It’s structured:
<ul>
<li>Stuff which <code>spaceship :: Atom ()</code> uses,</li>
<li>The main Atom program (<code>spaceship :: Atom ()</code>),<br />
– This is further broken down into “declaration (of a variable)”, and the various “rules” of “compute-what, when-what, at what period/phase”.</li>
<li>The C interface &amp; low-level code,</li>
<li>The Atom boilerplate.</li>
</ul></li>
<li><p>Haskell usually has a promise like “if it compiles, it works” (with a footnote of “until you get a memory leak”). – Whether that applies to Atom constructs depends on the Atom compiler.</p></li>
<li><p>There are implicit couplings between the Atom and the C code in the above program: <code>state.Spaceship.switchState</code> (in the C) depends on variables in Haskell’s <code>main</code>, as well as in the <code>spaceship :: Atom ()</code> construct. – Similarly, <code>ledOn</code>, etc. in Haskell reference <code>PORTD</code>.<br />
– I’m not sure how to minimise such couplings.</p></li>
<li><p>For a contrivedly (or, pedagogically) simple program, the advantage to using Atom is outweighed by the length.</p></li>
<li><p>The <code>25000</code> seems pretty magic to me. (And I guess if you need precise timing, you’d be more explicit about that in the C code).</p></li>
<li><p>Wow, Make <a href="https://raw.githubusercontent.com/rgoulter/arduino-atom-examples/059aa93be42f4f523aa4802a69fbdb7ec95f9d33/spaceshipinterface/atom/Makefile">can be useful</a>.</p></li>
</ul>
]]></summary>
</entry>
<entry>
    <title>Explaining Pure C Blink Example</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2016-03-12-explaining-pure-c-blink-example.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2016-03-12-explaining-pure-c-blink-example.html</id>
    <published>2016-03-12T00:00:00Z</published>
    <updated>2016-03-12T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 12, 2016
    
        by Richard Goulter
    <br/>
    
    Tags: <a href="/tags/programming.c.html">programming.c</a>, <a href="/tags/programming.arduino.html">programming.arduino</a>
    
</div>

<p>I’ve been playing around with an Arduino Uno this past week.</p>
<p>I came across <a href="https://balau82.wordpress.com/2011/03/29/programming-arduino-uno-in-pure-c/">this post from balau82</a>: it gives a basic “blink” example program in C, and a high-level overview of how to come up with such a program.<br />
The high-level overview wasn’t obvious for me, so I’d complement that blogpost with this, to explain in further detail.</p>
<p>e.g. When the post says:</p>
<blockquote>
<p>from the <a href="https://www.arduino.cc/en/uploads/Main/arduino-uno-schematic.pdf">Arduino Uno schematics</a> we can find out where the pins are connected, for example we can find that the LED is connected to the PB5 pin of the Atmega328p chip</p>
</blockquote>
<p>These are the pertinent details of the schematic:</p>
<div class="figure">
<img src="http://i.imgur.com/8oNoyZL.png" />

</div>
<ul>
<li>The Arduino board also has an ‘L’ beside the LED.. and the in-built LED is <a href="https://www.arduino.cc/en/Tutorial/Blink?from=Tutorial.BlinkingLED">on ‘Pin 13’</a> (thus the green 13, I guess).</li>
<li>PB5 is the name of the pin on the ATmega328P controller. (<a href="http://www.atmel.com/images/Atmel-8271-8-bit-AVR-Microcontroller-ATmega48A-48PA-88A-88PA-168A-168PA-328-328P_datasheet_Complete.pdf">Datasheet here</a>).</li>
</ul>
<hr />
<p>Looking at snippets from the code:</p>
<pre><code>int main (void) {
 DDRB |= _BV(DDB5); /* set Port B bit-5 to output */

 while(1) {
  PORTB |= _BV(PORTB5); /* turn on LED */
  ....
 }
}</code></pre>
<p>This left a novice like me with questions:<br />
Where do these constants come from? What’s <code>DDRB</code>? How does <code>DDB5</code> refer to PB5? Why <code>PORTB = ...</code> to change the LED? What’s the difference between <code>DDB5</code> and <code>PORTB5</code>?<br />
(At least I understood the <code>magicVar |= 1 &lt;&lt; 5</code> &amp; <code>magicVar &amp;= ~(1 &lt;&lt; 5)</code> bitmasking. – my <a href="https://github.com/rgoulter/c-worksheet.vim">C-Worksheet</a> is useful for playing around with this, also, btw).</p>
<ul>
<li><p><strong>Where do these (macro) constants come from?</strong><br />
Well, look at the <code>#include &lt;avr/io.h&gt;</code>. (Probably found in <code>/usr/lib/avr/include</code>), and the <a href="http://www.nongnu.org/avr-libc/user-manual/group__avr__io.html">online reference</a>:<br />
it includes <a href="http://www.nongnu.org/avr-libc/user-manual/group__avr__sfr.html">avr/sfr_defs.h</a> (SFR = Special Function Registers), which has the <code>_BV</code> macro as well as explaining the <code>sfr |= _BV(bit)</code> replacing some <code>sbi (sfr, bit)</code> instruction. – The specific file (in this case, <code>avr/iom328p.h</code>) defines the <code>DDB5</code>, etc. macros.</p></li>
<li><p><strong>What’s <code>DDRB</code>?</strong><br />
Reading the datasheet, Ctrl-F for <code>DDR</code> leads us to Section 14.2 “Ports as General Digital I/O”.</p>
<blockquote>
<p>Each port pin consists of three register bits: DDxn, PORTxn, and PINxn. As shown in ”Register Description”, the DDxn bits are accessed at the DDRx I/O address, the PORTxn bits at the PORTx I/O address, and the PINxn bits at the PINx I/O address.<br />
The DDxn bit in the DDRx Register selects the direction of this pin. If DDxn is written logic one, Pxn is configured as an output pin. If DDxn is written logic zero, Pxn is configured as an input pin.</p>
</blockquote>
<p>DDR = Data Direction Register. Ohhh.[1]<br />
<code>DDRB</code> is the byte (of the data direction of Port B), <code>DDB5</code> for referring to Port B (x = B), and its 5th bit (n = 5). (The register summary in Section 35, p615 shows this).</p>
<p>So, when the Arduino code has:</p>
<pre><code>pinMode(13, OUTPUT);</code></pre>
<p>it is <strong>essentially</strong> equivalent to:</p>
<pre><code>DDRB |= _BV(DDB5);</code></pre>
<p>….Obviously.[2]</p></li>
<li><p><strong>How does <code>DDB5</code> refer to PB5?</strong><br />
It just does?<br />
PB5 is the 5th bit of Port B. (Section 1.1.3).<br />
Section 14 also has this to say:</p>
<blockquote>
<p>Three I/O memory address locations are allocated for each port, one each for the Data Register – <code>PORTx</code>, Data Direction Register – <code>DDRx</code>, and the Port Input Pins – <code>PINx</code>. The Port Input Pins I/O location is read only, while the Data Register and the Data Direction Register are read/write. However, writing a logic one to a bit in the PINx Register, will result in a toggle in the corresponding bit in the Data Register.</p>
</blockquote></li>
<li><p><strong>Why <code>PORTB = ...</code> to change the LED?</strong><br />
Because it’s the data register. Aforementioned sections of the datasheet should have made this clear by now.[3]<br />
There’s also compiler magic translating from <code>sfr |= _BV(bit)</code> to <code>sbi</code>/<code>cbi</code> etc. as explained in the avr-libc documentation. – Section 37 of the datasheet mentions <code>sbi</code> = “set bit in I/O register”, <code>cbi</code> = “clear bit …”.</p></li>
<li><p>What’s the difference between <code>DDB5</code> and <code>PORTB5</code>?<br />
This should be evident from above; one is for referring to the bit of a Data-Direction register, the other for the bit of Port B.<br />
– I think they both evaluate to <code>5</code>; so unless the compiler does any magic with them, I’m guessing one could incorrectly interchange them and the program would still work. – It’s kinda tempting to just write the number <code>5</code>, since the identifier has a <code>5</code> in it anyway..</p></li>
</ul>
<hr />
<p>The commands to compile and upload it I take on faith as “just work”. (Or, rather, I didn’t need to mess with them).</p>
<p><a href="https://raw.githubusercontent.com/rgoulter/arduino-atom-examples/059aa93be42f4f523aa4802a69fbdb7ec95f9d33/blink/c/Makefile">Here’s a Makefile</a> adapted from these commands, which will probably be useful. (<code>make upload</code> will build &amp; upload the program to an Arduino).</p>
<hr />
<p>I wanted to translate the <a href="https://www.arduino.cc/en/ArduinoStarterKit/Prj02">Spaceship Interface</a> (Project 02 of the book which comes with the Arduino Starter Kit) to C, also.<br />
The only difference from the Blink example is that the Spaceship Interface example reads input from a pin.</p>
<p>Following the aforementioned tutorial, the switch is in (Arduino) pin 2, and the LEDs in pins 3, 4, 5.<br />
From the schematic, this corresponds to PD2 .. PD5. (<code>%s/B/D/</code> is evident, even without the above understanding).</p>
<p>Reading from a pin should also be ‘easy’ from the above understanding.[4] – And, again, the <code>avr/sfr_defs.h</code> documentation mentions that <code>PORTx = 0x33; unsigned char i = PINx</code> will magically get translated to the correct instructions.</p>
<p>I was able to come up with <a href="https://gist.githubusercontent.com/rgoulter/9fcc09c6524ad882f477/raw/4c826aa5ee8ac5bd57baa2bad12d8fa7a2cb2b19/spaceship.c">this</a>. And it worked and I was so happy.</p>
<p>Then I translated the example to the <a href="https://hackage.haskell.org/package/atom-1.0.13">Atom EDSL</a>. Read about the fun in my <a href="../../posts/programming/2016-03-13-arduino-spaceship-interface-in-the-atom-dsl.html">next blog post</a>.</p>
<hr />
<p>[1] Reading is useful. But, on the other hand, the datasheet is like 600 pages long.</p>
<p>[2] Is it fair to call this ‘hard’ (for non-engineers), in the sense that all that isn’t obvious by looking at the C code &amp; blog? OTOH, math is hard, and that’s kindof a problem with the user, not the content.</p>
<p>[3] But writing lots of stupid questions is still useful for clarifying to yourself what you don’t know! – Indeed, asking questions in a programming journal is valuable even if you never get back to answering them, I’d say.</p>
<p>[4] Or from getting lucky by finding the example in Section 14 reading from <code>PINB</code>.</p>
]]></summary>
</entry>

</feed>
