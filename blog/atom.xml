<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Richard Goulter's Blog</title>
    <link href="http://www.rgoulter.com/blog//atom.xml" rel="self" />
    <link href="http://www.rgoulter.com/blog/" />
    <id>http://www.rgoulter.com/blog//atom.xml</id>
    <author>
        <name>Richard Goulter</name>
        <email>richard.goulter+blog@gmail.com</email>
    </author>
    <updated>2018-04-27T00:00:00Z</updated>
    <entry>
    <title>StackOverflow, Elitism, and Community</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2018-04-27-stackoverflow-and-elitism.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2018-04-27-stackoverflow-and-elitism.html</id>
    <published>2018-04-27T00:00:00Z</published>
    <updated>2018-04-27T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on April 27, 2018
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p><a href="So%20this%20came%20up%20on%20HackerNews">https://news.ycombinator.com/item?id=16934942</a>. StackOverflow’s discussion that it ought to do more to be more welcoming.</p>
<p>Some of the points highlighted:</p>
<ul>
<li>Dickish behaviour on StackOverflow comes from the perverse incentives of its reputation system.<br />
e.g. one way to be rewarded with reputation is to ‘edit’ an answer. This leads to frivolous editing, such as removing “thanks” from a question.
<ul>
<li>There’s also a big imbalance between the role of asker and moderator: An asker only wants a response to their question, whereas a moderator will see hundreds of “low-quality” questions being asked. (So can hardly care to be kind to all of these).</li>
<li>One commenter points out that with Reddit, the system is more ‘democratic’ as the cost to ‘exit’ is so cheap: if leadership screw up, it’s cheap to just create another sub-reddit the community can move to.</li>
</ul></li>
<li><p>There’s a selection-bias against quality in questions:<br />
Anyone who can go to the effort to search for previous/similar questions, as well as refine their question down to its essence is more likely to be capable of <em>then</em> finding an answer themselves,<br />
compared to someone who just blindly asks.</p></li>
<li><p>“StackOverflow is elitist…”<br />
HackerNews is <em>on board</em>.<br />
“…to newbies…”<br />
<em>Totally</em>.<br />
“…and women, people-of-colour”.<br />
Those be fighting words.</p></li>
</ul>
<p>It seems that (roughly) StackOverflow has three kinds of users: - Those who ask questions - Those who answer, and moderate - Those who browse the site (from search-engine results page) but don’t ask/answer questions.</p>
<p>My experience personally was joining the site + being ‘reputation blocked’ from helping where I wanted to.<br />
Well, whatever.</p>
<p>Part of the discussion is about the purpose/role of StackOverflow as a site. How its mechanics work (as opposed to, say, mechanics of Reddit). Whether it wants to be a quick/dirty my-question-my-answer or the-question-the-answer site.</p>
<p>Part of the discussion is about how much of an effort askers need to make to ask a question.<br />
And how much of an effort answerers need to make to be considerate.<br />
– Though I think this involves pointing out that people interact in different ways like how <a href="https://status451.com/2016/01/06/splain-it-to-me/">Alice Maz did with “Splain it to me”</a>.</p>
<hr />
<p>I have the concern that much of the “but women are hurting” comments come from people who don’t see that the established norms can be legitimate.<br />
e.g. <a href="https://medium.com/@maradydd/when-nerds-collide-31895b01e68c">Meredith Patterson’s excellent “When Nerds Collide”</a> discusses this. (Patterson’s concerns discussed elsewhere include that these feminists are unconcerned about excluding people they dislike; e.g. autists).</p>
<p><a href="https://status451.com/2016/09/15/social-gentrification/">Simon Penner’s “Social Gentrification”</a> is a good discussion about community interactions like this, too. (Progs are “social gentrifiers”, who invade a place a predominantly “poor” place, and make it nicer, but in doing so exclude those who inhabited the community already).</p>
<p>But that the “StackOverflow isn’t welcoming to women” is fighting words whereas “StackOverflow isn’t welcoming” isn’t:<br />
This is so closely politics and culture wars that it’s disingenuous to discuss without pointing that out.</p>
<p>Most of the interactions of the culture war are driven by fear, not love. And what people value is the notion of relief, and safety.<br />
StackOverflow’s remarks are clearly in reply to support women and people of colour who fear they aren’t welcome.<br />
– As Patterson points out, some nerds get antsy about this since they grew up at the bottom of the social hierarchy (i.e. excluded); then found a place which they belonged. Tech happened to get popular, and these people are now being told they deserve to be on the bottom of the hierarchy, when they’d prefer that no hierarchy were there at all.</p>
<p>I think it’s useful to highlight that the interactions are political because it shows why those involved express &amp; feel things differently:<br />
- e.g. The “as a straight-white man I need to be doing better” is certainly coming from someone who identifies as progressive.<br />
(i.e. other people who value ‘progressive’ as part of their identity are likely to speak the same way; whereas in my experience “white men” don’t). - The claim “StackOverflow isn’t welcoming to women” is parsed as “sexism”.<br />
- Non-progressives consider “sexism” as “discrimination against a women, because she’s a women”. This fails to pattern-match against interactions on StackOverflow since anonymous accounts aren’t distinguishable by gender traits.<br />
Interactions are judged at the level of the individual. - Whereas a progressive considers “sexism” as: the structures in place or the way that women feel. So if most of StackOverflow’s users are men, then that’s evidence of sexism. If women don’t feel welcome, the culture is sexist.<br />
Interactions are judged at the level of the group.</p>
]]></summary>
</entry>
<entry>
    <title>My Thoughts on Far Cry 5</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2018-04-02-my-thoughts-on-far-cry-5.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2018-04-02-my-thoughts-on-far-cry-5.html</id>
    <published>2018-04-02T00:00:00Z</published>
    <updated>2018-04-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on April  2, 2018
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>So I put my nice gaming PC to use and played through Far Cry 5.</p>
<p>I’ve enjoyed the Far Cry 3-ish series of Far Crys.<br />
They can fairly be accused of being ‘bland’. (Those, and other Ubisoft sandbox games, like Ghost Recon Wildlands; although I didn’t play it).<br />
I think FC5 manages to pack a bit of flavour into its gameplay without being entirely bland.</p>
<p>Anyway.<br />
It’s set in some rural part of America with crazy cultish gun-nuts as the bad guys.<br />
I saw that game reviewers disliked its story for not being, idk, “Trump is bad” or whatever. lol.</p>
<p>All the same, the ending to the story is a bit annoying.<br />
It’s annoying enough to be worth spoiling.<br />
Recall that in Far Cry 3, there’s a north island, and a south island; the player liberates the north island before going on to liberate the south island. FC4 followed the same formula.<br />
Far Cry 5 is more open. The map is divided into three areas, each must be liberated before facing a final boss for that region. Each region has a slightly different flavour of enemies. And each boss has their own quirks as they menace the player liberating the island.<br />
Well. The game ends with the more-foresight-than-God final boss winning over the player.</p>
<p>This is annoying because it’s a stupid ‘surprise’ twist; but it doesn’t feel like a particularly foreshadowed or established twist.<br />
When liberating each three regions, the player is repeatedly captured by the baddies in the region. It’s scripted and unavoidable, but it’s also decided by the story that the player beats them.<br />
– So that the player doesn’t get to beat the mighty big bad final boss is just kindof a “look I tricked you” twist, but inconsistent with the established rules.<br />
– The closest I can see it to ‘fair’ is that at the beginning the player gets randomly rescued; so that the player gets randomly defeated at the end has a very “God giveth, God taketh-away” kinda ring to it. But, eh…</p>
<p>It’s kindof natural for Far Cry and such to have ludo-narrative dissonance.<br />
A disconnect between the story and the gameplay.<br />
Like. In the game. If your allied characters get shot, you can ‘revive’ them; or you can call them back into battle after 15 minutes. – In such a context, it’s difficult to sympathise when the story says “nah, this character got shot and dies”.</p>
<hr />
<p>The gameplay itself is pretty fun.<br />
I think it’s fair to call it the “Far Cry sandbox formula refined”.</p>
<p>It definitely felt like the game-story didn’t get in the way of the sandbox gameplay as much as previous games had.</p>
<p>The sandbox is filled with toys to play with.<br />
e.g. “outposts” which are occupied by enemy troops, but can be ‘liberated’.<br />
e.g. various objective-based missions can be played. e.g. different “prepper stashes” are dotted around, which are usually hidden behind some kind of puzzle.</p>
<p>I kindof felt the game had fewer weapons than previous iterations.<br />
Part of that was they dropped the “special” weapons (which were enhanced versions of regular weapons, that had to be unlocked). – These were dropped in favour of a microtransaction system. Oddly, the microtransactions are for nice weapon skins. But these can also be purchased for a moderate amount of in-game effort. (It’s not an unreasonable amount of effort. But it’s just weird, ’cause I can’t imagine who would spend money on them, they’re strictly cosmetic).</p>
<p>The sandbox mechanics of ‘liberating’ an outpost can be summarised as “try and stealthily kill the enemies, until you get spotted, in which case charge in all guns blazing”.<br />
The tool for this job is the silenced sniper rifle. So, easily the best gun in the game for most tasks is the first sniper rifle that can be unlocked.<br />
Pretty much every weapon can have a silencer. It’s quite satisfying to face off a bunch of bad guys and ‘bip’ them with headshots without being noticed.</p>
<p>The game also lets you drive helicopters and fighter planes.<br />
These aren’t overpowered, oddly enough, since .. there aren’t that many enemies to shoot.<br />
And they’re not easy to spot/hit from the vehicles.<br />
(Unlike, say, the Saints Row games.. where helicopter gunships in the sandbox were very overpowered).</p>
<p>What <em>was</em> overpowered were the buddies.<br />
Far Cry Primal introduced the ‘buddy’ system. – In that, you would befriend some fierce animal (a tiger, a bear, whatever).. and then later the animal’ would help you in combat.<br />
FC5 keeps this system (albeit, you can’t befriend animals in the wild), but adds other human characters. You can have two buddies at a time, even.<br />
– There are 6 special human characters to buddy with; or you can buddy with a ‘normal’ liberated ally.<br />
The ‘normal’ liberated ally has a more cookie-cutter personality. And some weapon. I saw different characters with rifles, or a bow and arrow, or a shotgun, or a machine gun, or an RPG.</p>
<p>Fortunately, the ‘normal’ liberated ally characters with the RPGs were amusingly stupid.<br />
Like. There were times when there was some enemy right at the feet of the character (a wolf or something); and the guy fired the RPG right at his feet. He killed the enemy, but had to be revived.<br />
– Another time.. there was an encounter with an enemy prisoner van. The expected interaction is to shoot the enemy driver.. or maybe shoot out the tyres from the van; then you can release the prisoners. – RPG-guy saw an enemy van, fired, and blew it up. (The player isn’t penalised for this).</p>
<p>But, yeah, the buddies are generally over-powered.<br />
e.g. they can revive you if you get shot (and they’re still alive).<br />
– The game acknowledges this, by not allowing you to take your buddies on the important story missions.</p>
]]></summary>
</entry>
<entry>
    <title>Employment Interactions are a Mix of Market and Social</title>
    <link href="http://www.rgoulter.com/blog//posts/politics/2018-03-27-employment-interactions-are-a-mix-of-market-and-social.html" />
    <id>http://www.rgoulter.com/blog//posts/politics/2018-03-27-employment-interactions-are-a-mix-of-market-and-social.html</id>
    <published>2018-03-27T00:00:00Z</published>
    <updated>2018-03-27T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 27, 2018
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>One of the kindof interesting parts of Dan Ariely’s “Predictably Irrational” is where he points out some interactions between people are ‘social’, some are ‘market-oriented’; these two kinds of interactions have different protocols and don’t mix well.</p>
<p>The most striking example of this is something like lawyers who are willing to do pro-bono work; but not willing to do the same work if offered some compensation.<br />
<em>Rationally</em>, adding money/reward to a task ought to increase the incentive.<br />
But it seems that when money is involved, the consideration isn’t “I’m helping these people” so much as “this isn’t an effective use of my time”.</p>
<p>Or perhaps more briefly: you don’t reciprocate social interactions with money.</p>
<p>So, like: Market-oriented interactions are low-trust, and precise.<br />
Social interactions rely on trust, and rely on vague reciprocity (or benevolence).</p>
<p>Norms of social interactions are how you interact with your family, friends or romantic partner.<br />
Market-oriented interactions are how you interact with staff at big chain stores.</p>
<p>I’ve been thinking that the relationship between employer and employee has an interesting mix of these two.<br />
It’s obviously market-oriented in that money changes hands. “Why do you want to work here?” is going to largely be “because I need money”.<br />
But employment involves social norms too. – A company employees who are trusted with the responsibility to do their jobs is going to do better than a company without that trust.</p>
<p>This <a href="https://mtlynch.io/why-i-quit-google/">“Why I quit Google”</a> blogpost touches upon the same idea: - The author did a good job by cleaning up some systems which were painful to interact with, and actively helped his colleagues. But, since this didn’t get measured, the company didn’t reward him for the job. - The straw which broke the camel’s back was when Google didn’t give him a Christmas gift. (<a href="https://steveblank.com/2009/12/21/the-elves-leave-middle-earth-%E2%80%93-soda%E2%80%99s-are-no-longer-free/">“The Elves are Leaving Middle Earth”</a> has another example of this). Ariely points out that gift-giving is a good tit-for-tat reciprocity mechanism in social interactions. – But at the end of the day, Google as an employer needs to make money, and the employer/employee relationship is a business one.</p>
<p>Every now and then I’ll see remarks along the lines of “it’s good to do the work you enjoy”. (e.g. <a href="http://firstround.com/review/our-6-must-reads-for-managers-to-give-feedback-that-helps-people-grow/">FirstRound’s Recommended Reads for Managers Giving Feedback</a> suggests that a manager can guide their managees better if they know their life stories).<br />
I’m not quite sure what to think of this.<br />
If there were a sorting hat, and it were possible that all jobs could be enjoyed, it’d be great.<br />
– But “do what you want to” is a social interaction, whereas “do what you’re told” is a market-oriented norm. If the two happen to coincide, great.</p>
<p>The notorious “performance improvement plan” is another example of this.<br />
From a market-oriented view, it seems perfectly sensible/rational. There’s a performance expectation, a plan to reach that performance. (It would be irrational for the planned improvement to be infeasible).<br />
But I think the reason it’s notorious is that it’s perceived as an excusable means for getting rid of someone.<br />
Even in a more ‘benevolent’ situation, (like, the employee actually is under-performing), the ultimatum of a PIP creates stress. (The First Round article above argues this).<br />
– It’s a violation of social norms, even if it makes sense from a market-oriented perspective.</p>
<p>I like the idea of mutual improvement.<br />
The employer tries to ensure their employees are the best at what they do, and tries to have the best workplace of any employer.<br />
– I think this kindof approach can be had socially: I <em>care</em> that you improve; and you care to support me to improve.<br />
But it also makes sense from a market-oriented perspective.</p>
<hr />
<p>To me, the 40-hour workweek is a dumb example of market-oriented perspective in many cases.<br />
I don’t think people are good at focussing for 8 hours a day, 5 days a week. (e.g. as SlateStarCodex points out in his discussion of <a href="http://slatestarcodex.com/2017/12/28/adderall-risks-much-more-than-you-wanted-to-know/">risks of Adderall</a>). Or the great admissions in <a href="http://bookofhook.blogspot.sg/2013/03/smart-guy-productivity-pitfalls.html">Smart Guy Productivity Pitfalls</a>.<br />
I certainly think flexibility or allowance for part-time work would allow those who can’t (or don’t want to) work 40 hours a week to join the workforce.<br />
– But I think salary already takes into account that 40-hours at work isn’t 40 hours of work done. A salary isn’t directly tied to tasks-completed.<br />
From a market-oriented perspective, it makes sense to only pay for the work done (and provide incentive to remain on the team). From a social-interaction perspective, it makes sense to support employees even when they’re not directly producing output. (e.g. sick leave, vacation, maternity leave).</p>
<p>I kinda wonder if these functions of salary/compensation could be split up into a small ‘salary’ for company-affiliation (regardless of any work done), and larger commission packets for achieving units of work. Those who achieve more ‘work’ would earn more money.<br />
– This would be a different balance of market-oriented interactions and social interactions. It’s mostly just a dumb, fun thought.</p>
<p>But to continue a dumb, fun thought a bit:<br />
I wonder how mixing money and communication would work.<br />
Money could be used as a tax-on-bullshit to reduce inefficient work communications and meetings. – If you were paying people for their time (as a salary already does now anyway), you’d want to make sure they’re spending their time in a beneficial way.<br />
– That’s not to diminish the value of water-cooler type chats or other social interactions.</p>
]]></summary>
</entry>
<entry>
    <title>Playing Videogames with my Girlfriend</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2018-03-26-playing-videogames-with-my-girlfriend.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2018-03-26-playing-videogames-with-my-girlfriend.html</id>
    <published>2018-03-26T00:00:00Z</published>
    <updated>2018-03-26T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March 26, 2018
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>My girlfriend and I have had a bunch of fun playing videogames together.</p>
<h2 id="laytons-mysteries">Layton’s Mysteries</h2>
<p>I had bought this for the Nintendo 2DS.<br />
I didn’t realise it was available on Android phones, and I’d heard good things about the Layton series.<br />
Unfortunately, many reviews suggest that other games in the series are better.</p>
<p>In any case, we found this game to be quite fun to play together.<br />
“Layton’s Mysteries” is a puzzle game.<br />
The gameplay is split into two parts: finding/interacting with different parts of an area, and solving puzzles/riddles.</p>
<p>The “find/interact with parts of an area” is (IMO) quite dull.<br />
It just involves ‘clicking’ on each person, object, lightbulb, etc. shown until finding all the ‘puzzles’.</p>
<p>The puzzles are the real meat of the game.<br />
There are many different kinds of puzzles.<br />
Some will have a deliberate trick answer. (Often “zero” is the trick answer, whenever the wording of the question may allow for it. e.g. “a bus has this fuel efficiency, minus this for every person in the bus. If all the people get off the bus, how far can the bus go with this fuel?”.).</p>
<p>We did get quite stuck on a couple of the puzzles to the point where we had to use all 3 clues. – Mostly I’d blame this on poor phrasing/wording.<br />
But for the most part, we were able to have fun thinking about it and trying “this is the answer, no this is the answer”.</p>
<h2 id="overcooked">Overcooked</h2>
<p>“Overcooked” on Steam is Windows only. (Although maybe it’s available on PlayStation and Xbox).<br />
And it doesn’t have multiplayer over internet. So, you can only play it together with other people on the same computer.</p>
<p>I’d seen “Overcooked” played by Achievement Hunter on YouTube.<br />
It’s clearly chaotic fun there.<br />
“Overcooked” is ‘multiplayer Diner Dash’. That is, you play as a chef in a kitchen, there are orders which need to be cooked. Each order has a specific set of ingredients, and the ingredients may need preparation. The kitchen features stations for picking up ingredients, preparing them, cooking them, and delivering them.<br />
To make things more interesting, “Overcooked” often adds constraints in each level. e.g. one ‘kitchen’ takes place in two trucks, which periodically come together, and drive apart. So, the players have to plan which tasks they can do on one half, and what transfer must be done when the two halfs of the kitchen are together.</p>
<p>It turns out that the game is really designed for four players.<br />
But, it can be played by two.<br />
– It can be played by one; but then the point of the game is the constraints make communication and strategy decisions made between players are important. And so with just one person, there’s no chaos or tension like that.</p>
<p>My girlfriend and I really enjoyed playing “Overcooked”.<br />
We played it on an old laptop; so things were a bit laggy.<br />
The experience tended to be: - Try a level once or twice to see what constraints come up. (e.g. Whether the kitchen splits in half. Or that there are rats who will steal any food left lying around). - Discuss “I’ll try doing this part, you do that part”. Try that. - Discuss “What would help is if I were to … and you were to …”.</p>
<p>It was really satisfying to get 3-stars for a level.<br />
Sometimes we got a score much higher than the score required for 3-stars. One time we got the required score exactly!<br />
– You don’t <em>need</em> to get 3-stars for each level. In order to progress through the game, you need to have enough stars to ‘unlock’ the next level.</p>
<p>I think what makes “Overcooked” so good for multiplayer is: - It’s co-operative. So there’s a shared goal. And it’s in everyone’s interest to get along. - It requires coordination between players. - Low barrier to entry: The games rules are actually very simple. And it doesn’t seem like it demands huge skill with a controller. The challenge comes more from decisions about <em>how</em> to go about doing tasks.</p>
<h2 id="pit-people">Pit People</h2>
<p>“Pit People” was developed by The Behemoth. The Behemoth also made “Castle Crashers” and “Battleblock Theatre”.<br />
Their games on Steam have overwhelmingly positive reviews.</p>
<p>“Pit People” is a turn-based strategy game.</p>
<p>Unfortunately, we didn’t really enjoy playing this.<br />
I took a look at the negative reviews, and it seemed to match our experience:<br />
e.g. The combat was <em>really</em> slow. And didn’t seem to involve much strategy.</p>
<p>The game also seemed to have a lot of ‘stuff’, but it wasn’t always clear what was going on.</p>
<p>After playing with my girlfriend, I have since put in a couple more hours into the game by myself. (Although not yet with my girlfriend again).<br />
Hmm.<br />
It’s not bad. I’d say it takes some time to get used to.</p>
<p>I think it doesn’t compare favourably to e.g. “Tiny Metal”.<br />
“Tiny Metal” is ‘inspired by’ “Advance Wars” (and “Fire Emblem”), which are cute turn-based strategy games. “Pit People” and “Tiny Metal” are both turn-based strategy games, which have an overworld where players move their army about and choose which fight to fight next.<br />
Overworld: “Tiny Metal”‘s overworld is bare-bones. Barely more than a prettily dressed up menu. “Pit People”’s overworld much more complicated.<br />
Turn-based gameplay: “Tiny Metal”’s involves quite a depth of strategy. You can construct units, and so can choose units which are hard-counters to enemy units. (e.g. anti-aircraft guns which can eliminate enemy aircraft quickly, but are defenseless against ground units). – “Pit People” seems to put its ’strategy’ into unit-composition; but this doesn’t seem to have a large impact and fights just seem to take a long time regardless of what attacks what.</p>
<p>It seems to me “Tiny Metal” is much more fun in the meat of the gameplay (turn-based gameplay).<br />
It’s not that “Pit People” is dumber. But it seems to be more complex in areas where the game should be simple.</p>
<p>I also think “Pit People” limits the gameplay in its overworld by limiting the inventory space.<br />
e.g. you need to return to the city to heal/revive your units after a battle. Or you can use a campfire, (like in Final Fantasy games). But, your inventory is only 8 slots. And campfires don’t stack.<br />
And you need inventory space to collect spoils from a fight.<br />
– I believe the complaint I saw in a negative review which said “you have to return to the city every two skirmishes, no matter what”.</p>
<h2 id="lego-star-wars">Lego Star Wars</h2>
<p>I’d played through “Lego Star Wars” by myself a couple of times before, many years ago. (As well as having played “Lego LotR”, and “Lego Star Wars: The Force Awakens”).</p>
<p>The series has added some complexity/gimmicks to its formula, as well as improving the co-op gameplay to split the screen!</p>
<p>But, yeah, we played through the classic “Lego Star Wars”.</p>
<p>We had some difficulty with the platforming. I think LSW was somewhat unforgiving here.<br />
My girlfriend wasn’t familiar enough with using a game controller, and so her thumb got quite sore.</p>
<p>But besides that, the gameplay is fairly simple. And the cutscenes are cute, and it’s cute to play as the Lego characters.</p>
<p>The other fun thing was the “what’s this person’s name again?” type things.<br />
– I’d done a movie-marathon of all the Star Wars movies with my girlfriend leading up to The Last Jedi’s release.</p>
<h2 id="ibb-and-obb">Ibb and Obb</h2>
<p>I’d heard good things about “Ibb and Obb”.<br />
I also had seen Achievement Hunter’s PlayPals play this (though they edited out most of their gameplay).</p>
<p>It’s a puzzle-platformer, and is only for two-players.<br />
The platforming/puzzling is built around mechanics around moving between above-ground/below-ground. Below-ground has gravity pointing up. So, kindof like “thinking with portals”, but using flipped-gravity instead of teleportation.</p>
<p>The game is very cute.<br />
I think the puzzle-platforming did require a good amount of skill/precision in places. (I’m not sure if it requires it from both players, though).</p>
<p>I don’t think there was too much discussion about <em>how</em> to solve puzzles. Most of the time it was more a matter of struggling to execute a particular plan.</p>
<h2 id="cutthroat">Cutthroat</h2>
<p>“Cutthroat” is similar to “Hidden in Plain Sight”, or “Thieftown”.<br />
The basic premise of these games is that the game screen has many units on screen, but there’s no indication of which unit is controlled by which player. So, the goal is to figure out which unit you are, which unit the other player is, and then eliminate the other unit.</p>
<p>“Cutthroat”’s design/variation on this formula is that there are four kinds of units, and each unit has two abilities (in addition to a basic attack).<br />
– One good thing about this is it makes it easier to find your own unit (since you get to select which kind of unit your unit is).</p>
<p>I felt that my girlfriend didn’t enjoy this one as much. Or, rather, it would take quite a bit of practice to get used to.<br />
More than once, we had to wait for the level’s timer to run out to the point where almost every non-player unit was removed from the map before someone won.</p>
<p>I kinda felt that the units on the map lacked vitality. It felt kinda dead to look at. But, perhaps if they were livelier, it would be more difficult to spot other characters.</p>
<h2 id="ultimate-chicken-horse">Ultimate Chicken Horse</h2>
<p>I’d also seen “Ultimate Chicken Horse” on Achievement Hunter’s videos.<br />
They played with four players. I was concerned that it wouldn’t work as well with two people. – But mostly it works just as well.</p>
<p>“Ultimate Chicken Horse” is a platformer game, where the goal is to reach the end of the level.<br />
The twist is that: if all the players make it to the end, no one wins any points. (And if no one makes it to the end, no one wins points). Each round takes place on the same map, and each turn the players get to pick an ‘obstacle’ to place on the map. (e.g. a platform, or an auto-firing crossbow).</p>
<p>I don’t know if this works with greatly-different skillsets playing at the same time. (It’s not cooperative). – But there is an option to ‘handicap’ a player, by reducing the number of points someone gets from winning a turn.</p>
<p>My girlfriend and I really enjoyed this.<br />
I think because: - The platforming itself is relatively easy. So you always think “I could do that”. - Just because you might not get points, doesn’t mean it’s not fun to see someone die because of a trap/obstacle you placed. - Since everyone places obstacles simultaneously, even just that is kinda fun: You can plan a route to help yourself, place an obstacle to make things harder, or place an obstacle to nullify the obstacle the other players placed. - The graphics are quite cute.</p>
<p>The only way it’s not as fun for two players as it is for four players is that with two players it’s “I win the round, or you win the round”; whereas with four players, it’s possible for multiple players to win.</p>
]]></summary>
</entry>
<entry>
    <title>FasterThanLight's Sequel Into The Breach</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2018-03-05-fasterthanlights-sequel-into-the-breach.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2018-03-05-fasterthanlights-sequel-into-the-breach.html</id>
    <published>2018-03-05T00:00:00Z</published>
    <updated>2018-03-05T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on March  5, 2018
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>“Faster Than Light” (FTL) was a very cool game.<br />
You basically got to play as the captain of a starship. Gameplay would be like “Divert power from the shields to the weapons. Target their engines!”.<br />
But the game was also ‘rogue-like’. The gameplay didn’t take place in a single crafted, designed campaign of missions. The ‘campaign’ was procedurally generated. – So, in each playthrough, the encounters and opportunities to get better equipment or crew members would be different.<br />
The gameplay was split between the 1-on-1 starship combat, and the overworld where the player navigates through a graph of nodes. The end goal is to beat the final boss, a super-starship.<br />
– The dynamic is, I think, that you’ll fail most of the time. But every now and then you’ll win.</p>
<p>FTL is a popular game. I’d say I enjoyed it. Mostly.<br />
A sequel just came out. And I’d say I kinda enjoy it, but it’s not really for me.</p>
<p>Superficially, the game is quite different from FTL: aesthetically, it’s a combination of “Pacific Rim” and “Fire Emblem”/“Advance Wars”. Giant mech robots fighting giant aliens.<br />
The overall gameplay is surprisingly similar to FTL, going by the above description. It’s got gameplay split between an overworld, and the robots-vs-aliens. Procedurally-generated so different experience each time. etc.</p>
<p>It is different from FTL in that the combat is turn-based (like “Fire Emblem”/“Advance Wars”, or any “x Tactics” game) rather than the real-time action of FTL.<br />
And the end-boss isn’t against a gigantic monster.<br />
But overall, pretty much any detail I can think of is essentially similar to FTL. Huh.</p>
<p>The dynamic feels a bit closer to, e.g. XCOM’s.<br />
Your team is there to save the world. You have to make the trade-offs for which things you can save, and which things you can do without.<br />
– I think the game is fun for that reason. But I don’t enjoy it as much. Since the game is ‘rogue-like’, and each game is short: if the game starts going unrecoverably sour, then I can just start a new game and hope for better luck.</p>
<p>It does sometimes feel like ‘luck’.<br />
The robots-vs-aliens turn-based mode is less “turn based combat” and more of a puzzle about the constraints.<br />
Each of the robots-vs-aliens mode last about 4 or 5 turns. In each turn, there are a couple of aliens; and a couple more will spawn each turn. So usually the gameplay in each turn is to eliminate/neuter the aliens in that turn.</p>
<p>I do enjoy the puzzle-based gameplay.<br />
But … I don’t enjoy the dynamics involved with the constraints.<br />
e.g.:<br />
Killing the aliens means your units gain a bit of experience.<br />
If the aliens damage any of the cities, it’s very bad. Completing the optional objectives in each of the maps is good; you get a reward if you <em>don’t miss any</em> of them.<br />
You can restart … a turn. (You can’t restart the map, or undo anything less granular than a turn).<br />
Completing the optional objectives also earns you points which you can spend after every 4 battles. But you don’t get many points, and can’t upgrade your units very much.<br />
– Throughout a really good game on easy, I was able to half-upgrade all three of the units. (Or was it fully-upgrade one, mostly upgrade another, and the third unit didn’t do much?).</p>
<p>The game just feels a bit too ‘scarce’ for me.</p>
]]></summary>
</entry>
<entry>
    <title>Vigilant Reflection</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2018-02-19-vigilant-reflection.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2018-02-19-vigilant-reflection.html</id>
    <published>2018-02-19T00:00:00Z</published>
    <updated>2018-02-19T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on February 19, 2018
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>One good, sensible motto that is worth keeping in mind every now and then is to reflect: ‘Where am I at? Where do I want to be? How can I get there?’. – I’m not sure how that works for ‘I don’t know what I want’; but it’s much better to know that you don’t know, than to just have the angst.</p>
<p>I think this is useful especially if you find yourself in the same ‘situations’ repeatedly.<br />
– I like to think it’s helped me figure out some of my failure-modes in terms of how I work. e.g. I like having ‘flow’ with my work. This can be described as work with ‘the right level of challenge, for your current level of skill’. (I’ve seen different diagrams for this; I don’t know which are reliable, but this sounds a sensible model).<br />
For me, if I’ve found if I don’t have ‘flow’, it can be difficult to find motivation and to live up to my potential. And if I’m not aware of this, I’ll end up stuck.</p>
<p>So it’s useful to have tools to help reflect.</p>
<p>The term ‘Emotional Intelligence’ (EQ) gets thrown around every now and then.<br />
It certainly sounds like a bullshit term made for cuddly-feely for people who may not have high IQ, but can get on with other people.<br />
But the concepts related to it seem useful enough tools: awareness and management of self, awareness and management of others. <a href="https://www.keystepmedia.com/emotional-social-intelligence-leadership-competencies/">This link</a> looks like cuddly-feely MBA nonsense, but it sensibly expands on examples of these kinds of things. e.g. ‘awareness of self’ includes ‘understanding my emotions and the effects they have on me’; ‘management of others’ includes ‘can you influence others: have a positive impact, and persuade them to gain their support’.</p>
<p>I think a big limitation with the EQ stuff is it kindof splits into ‘good with people’ and ‘bad with people’.<br />
But people can be complicated. This doesn’t mean EQ is nonsense, so much as I think it’s useful to be aware of this limitation.</p>
<p>It can be fascinating to reflect / consider the different ways people interact.<br />
Mis-alignment of assumptions between people inevitably leads to conflict.<br />
This is made clear by Alice Maz’s excellent <a href="https://status451.com/2016/01/06/splain-it-to-me/">‘Splain it to me’</a>. I think another interesting example is e.g. <a href="https://www.theatlantic.com/national/archive/2010/05/askers-vs-guessers/340891/">Askers vs Guessers</a>. – The point of these tools isn’t to model people as entirely fitting into the model’s boxes, so much as they help understand / explain interactions between people.</p>
<p>I think something that’s unfortunately omitted in discussions of diversity, where the claim is that it’s beneficial to have different kinds of people working on a task:<br />
Differences risk mis-aligned assumptions.<br />
Which surely leads to tension, and conflict.<br />
– This can be mitigated by emphasis on a shared identity (e.g. Between citizens, a shared national identity. Between employees, a shared company identity), rather than emphasis on differences between identity.<br />
But my concern is: pro-diversity folk often encourage situations which lead to tension/conflict without acknowledging the potential conflict, and without providing tools to mitigate and work around this.</p>
<p>Similarly, I think ‘cultural differences’ aren’t just ‘demographic differences’.</p>
<p>Yet. I kindof wonder if other people in teams reflect on differences like this.<br />
For myself, I think I can get as far as aware of how others feel. I don’t think I’m the kind of person who could easily manipulate others. So I guess ‘Where am I at? etc.’ is useful for ‘What are my limitations? How should I approach these situations from that?’.</p>
]]></summary>
</entry>
<entry>
    <title>On Maintaining on Old Side Project</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2018-02-19-on-maintaining-on-old-side-project.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2018-02-19-on-maintaining-on-old-side-project.html</id>
    <published>2018-02-19T00:00:00Z</published>
    <updated>2018-02-19T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on February 19, 2018
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>Recently I’ve had the motivation to try and maintain one of my side-projects.<br />
Or at least, brush it up from being “completely awful” to “not terrible”.</p>
<p>This is mostly just for fun.<br />
But in a way, it’s valuable in that I learn the lessons of what it’s like to maintain a project which isn’t freshly-written. That’s the kindof learning which fresh programmers can’t easily get.</p>
<p>Partly this also comes from wanting to be able to display a ‘portfolio’ of ‘look, I can program’.<br />
Albeit, it’s hard to justify it from this perspective, since: - The <a href="http://www.daedtech.com/hiring-is-broken/">original post mentioned here</a> essentially says “I had a great personal brand, but didn’t get hired anyway”. - On the one hand, this is great in terms of ‘equal opportunity’, in that what supposedly matters is ‘ability to pass a tech interview’, not ‘ability to present yourself well’. And <em>in theory</em> the former ought to be better than the latter at predicting ‘will do a good job’. - I saw a post on LinkedIn where a guy pointed out that, although he had applied via LinkedIn to over 900 job listings, the only times he got a job was through networking. - On the other hand, this is concerning in terms of ‘equal opportunity’, in that effects of networking aren’t going to be as fair as a more ‘systematic’ process of finding a candidate. (Or so you’d think!).</p>
<p>So. While I think it makes sense that ‘polished side project’ means ‘good portfolio’ and a step towards ‘good personal brand’; it seems like tech doesn’t particularly respect ‘good personal brand’.<br />
So, side projects are just for fun. :-)</p>
<h2 id="things-i-didnt-dounderstand-in-c-as-an-undergraduate">Things I Didn’t Do/Understand in C++ as an Undergraduate</h2>
<h3 id="properly-setting-up-the-windows-build">Properly Setting Up the Windows Build</h3>
<p>The project is an old C++ project which was initially done for a computational geometry course. Generally, as an undergraduate, the process for such projects is “here’s how to manually install any dependency, here’s how to configure the project”.</p>
<p>My experience of not-C++ projects is “here’s the project dependencies file, and here’s the command to install the dependencies”.<br />
I don’t know which language did this first, but this is my experience with e.g. Ruby, Python, Haskell, even Java/Scala.</p>
<p>This recent iteration of maintaining the side-project was aimed at getting the project to work on Windows. Previous refactoring efforts (e.g. to use CMake, adding a <code>.travis.yml</code> file to the repository) improved the project for Linux/macOS, but broke the Windows build.<br />
Joy.</p>
<p>I ran into a couple of problems getting the project working on Windows.<br />
One was getting the compiler to find the dependencies. (On Linux, this is more/less a process of “use system package manager to install dependencies).<br />
The other was that, I’d refactored the code to use a class called”Polygon“, and one of my files included <code>&lt;windows.h&gt;</code>, which has a function called <code>Polygon</code> which pollutes the global namespace and etc.<br />
Fun to figure out.</p>
<p>Windows C++ development is made a bit more confusing in that there are different compilers / environments. e.g. MSYS2/MinGW, and MSVC (Visual Studio’s C/C++ compiler).<br />
– It took me way too long to figure out fundamental things about these. In the end, I figured out the easiest thing to do was write a <code>.bat</code> script which adds the relevant compiler to <code>PATH</code>.</p>
<p>As an example of how ‘weird’ this is, CMake’s “MinGW Makefiles” didn’t work if MSYS2’s <code>sh.exe</code> was on <code>PATH</code>. With <code>MSYS2</code> and <code>MinGW</code> on the <code>PATH</code>, the correct generator to use would be <code>MSYS Makefiles</code>.</p>
<h3 id="getting-the-thing-to-run-maybe-deploy">Getting the Thing to Run (&amp; Maybe Deploy)</h3>
<p>My experience with programming in other languages:<br />
If you can build the project, you can run the project.<br />
My experience with C++:<br />
Just because the project built, doesn’t mean that the project would run.</p>
<p>The reason for this is fairly straightforward: C++ builds the executable, and the dependencies in other libraries will get ‘linked’ dynamically when the program runs. (On Windows, from Dynamically-Linked Libraries. On unix, from shared libraries). And so these need to be on the <code>PATH</code> when running the program. But not when building the program.<br />
– Perhaps you’ll forgive me if this wasn’t immediately obvious to me (given the ‘can build the thing =&gt; can run the thing’ expectation).</p>
<p>I’m aware that one way to get around this is to ‘statically link’ the dependencies into the built executable.<br />
– But I’m not aware of a trivial/easy way to do this on Windows. (Especially not if there’re complicated transitive dependencies!).</p>
<p>Unfortunately, I’m <em>still</em> not aware of an easy way to <em>find</em> all these requisite DLLs for running the executable.<br />
– It occurs to me that for “other languages”, I never really dealt with “how to deploy the program; how to share it with someone else”. This is one BIG advantage to JavaScript / web browser programs. (Or web applications).</p>
<h3 id="vcpkg-is-great">VCPKG is Great</h3>
<p>I am vaguely aware that conan.io is one piece of software trying to bring the concept of ‘modern language dependency installer’ to C++.</p>
<p>I saw that an example of competing software is vcpkg.<br />
I tried it, it’s <em>amazing</em>.</p>
<p>It’s only for the Visual Studio compiler, and is analogous to pacman for MSYS2’s MinGW-w64 compiler.</p>
<p>It Just Works.<br />
– You use it to install certain packages (e.g. OpenCV, Qt5) and it downloads the source, builds the project.</p>
<p>When using vcpkg to build a project, it copies the DLLs to the build directory which makes the program easier to deploy/share. Whoa!</p>
<p>As far as I can tell, static-linking with vcpkg would be easy, too, since vcpkg builds the packages from source.</p>
<p>One downside is that not all projects support all generators. (e.g. I couldn’t use ninja with OpenCV on Windows for MSVC. But this is upstream, and not vcpkg’s fault).</p>
<p>Compared to conan.io?<br />
The vcpkg FAQ argues that vcpkg targets only Windows/MSVC, so doesn’t have to solve the problems which conan.io is trying to solve (and which are solved by distribution package managers like brew, pacman).<br />
And that since vcpkgs is a privately-maintained repository of packages, rather than a ‘public federation’ of packages, there’s less effort required to find the dependencies which work for your project.</p>
<h3 id="setting-up-appveyor">Setting Up AppVeyor</h3>
<p>One of the cool things about open-source projects these days is the fancy badges they have saying “hey the project is working”.</p>
<p>Travis-CI is one such CI service which offers free builds for “open source” projects. (i.e. free stuff for public repositories).<br />
But Travis-CI only supports Linux/macOS. The equivalent for Windows is AppVeyor.</p>
<p>Despite my newfound knowledge of how to build the project reliably on Windows, I found this not-so-easy.</p>
<p>Using vcpkg for the build is a nice idea. But vcpkg doesn’t use binaries for its packages. So although vcpkg makes it super easy to get a development environment going, … it takes too long for an AppVeyor build, if using sufficiently heavy dependencies. (AppVeyor builds time out after an hour).</p>
<p>Fortunately, the machine does have common heavy dependencies like Qt5 installed already.<br />
But it didn’t have OpenCV.</p>
<p>It may be that using chocolatey (Windows’ answer to macOS’ homebrew) to install OpenCV is probably ‘best’.<br />
But I wanted to keep with vcpkg.</p>
<p>The main difficult I had was to cache the vcpkg directory. It took me some time to realise that I was the caching didn’t affect the <code>init</code> section of the AppVeyor build. (i.e. the cache only gets loaded for the <code>build</code> step, and cache gets saved after the <code>build</code> step).<br />
Oops.</p>
<h3 id="thoughts-on-the-c-language">Thoughts on the C++ Language</h3>
<p>The above remarks (e.g. about not knowing how to find DLLs, &amp; that it’s hard to install dependencies) are more about the environment C++ runs in, and the developer ecosystem.<br />
But considering C++ as a language:</p>
<p>Okay to be fair, I don’t think anyone really defends C++ as a “good” language (aside from maybe the pragmatic case that “it’s what people use”, and that having an imperfect which works is better than not having anything, etc.).</p>
<p>C++ is monstrously complex. (e.g. a C++ parser is something which has to be hand-written, since the language is so complex). “Effective C++” describes C++ as a ‘federation of four languages’. (If I recall correctly: C, C with classes, standard-template library, and template meta-programming).<br />
– There are competing languages for “better C” replacement: Go, Rust, and then more obscure languages like D (which I’ve heard is really nice, but seems to lack the community which e.g. Rust has gunned for).</p>
<p>What I’ve come to realise maintaining this C++ project is that there’s a lot of C++ stuff which I’d consider ‘fundamental’ in other languages, where with C++ “I just don’t know it”.<br />
And I don’t think other languages suffer this problem as easily.</p>
<p>The details sound fairly easy, but it’s not necessarily clear how they combine.<br />
For example: individually the words <code>const</code>, <code>pointer</code>, <code>reference</code> are individually easy to understand, but very quickly difficult to understand when combined.<br />
<em>Especially</em> for someone who hasn’t maintained a C++ project in a long time.</p>
<p>e.g. Coming from other languages, it may not be clear that there’s a difference between ‘direct initialization’ and ‘copy initialization’. cf. <a href="http://en.cppreference.com/w/cpp/language/initialization">CPP Reference</a>.</p>
<p>Every language inevitably has a ‘long tail’ of obscure details that an experienced programmer will run into. I don’t even know what kindof weird stuff that’d involve for C++!<br />
But with C++, I feel it’s more like the ‘lowest common denominator’ of being able to write simple C++ programs (e.g. “Undergrad C++”) doesn’t cover very much.</p>
<h2 id="concluding-thoughts">Concluding Thoughts</h2>
<p>One way to summarize the above is I’ve gone from ‘I wrote a project in C++ while not knowing much about C++’ to ‘I had to learn a bit more about how C++ stuff works for polishing the project’.<br />
– I kindof have mixed thoughts about these things. It’s .. nice that with programming, it’s ‘easy’ to do a lot of cool stuff without having a good understanding of what’s really going on.<br />
But it also seems a bit uncraftsmanlike to make stuff with such a poor understanding.</p>
<p>I think polishing this side-project a bit has been a good project for understanding what to avoid in a project, and what’s good to have.</p>
]]></summary>
</entry>
<entry>
    <title>Hitman is Fun</title>
    <link href="http://www.rgoulter.com/blog//posts/games/2018-02-11-hitman-is-fun.html" />
    <id>http://www.rgoulter.com/blog//posts/games/2018-02-11-hitman-is-fun.html</id>
    <published>2018-02-11T00:00:00Z</published>
    <updated>2018-02-11T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on February 11, 2018
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>I hadn’t really played any of the previous games in the Hitman series.<br />
My experience was limited to watching games on YouTube.</p>
<p>I picked up the game recently.</p>
<p>The game was released episodically.<br />
So, they released level-by-level. Each new release did see improvements to the gameplay and such, too. This seems much more sober and professional than “early access”.<br />
– An advantage of not picking it up ‘as it came out’ is I have the option to play it all at once.</p>
<p>And, interestingly, I have the option to play <em>any level I want</em>.<br />
Which is weird for a game. Because, usually games with single-play have stories. And usually the story should be experienced in-order. And so usually the game gets you to play it in order.<br />
Hitman <em>does</em> have a story-based single-player campaign. Which should be played in-order.<br />
But. I think Hitman’s formula is really aimed at “replayability”. In this sense, each map isn’t so much a ‘level’ so much as an arena.<br />
The story-based missions have particular, prominent targets; and most of the special details and potential interactions <em>are</em> designed around the main targets.<br />
– But what makes Hitman replayable is a fairly rich set of gameplay rules, and levels designed to make the most of the dynamics which come from that.</p>
<p>Some examples of this, which enhance replayability: - The game will highlight / show interactions, even if you don’t have the requisite disguise or equipment. This shows the player what is possible. e.g. In the first level, you can hide an explosive in a camera, and trigger the explosive when the camera is used in an interview. – So you know next time you try the level, to keep an eye out for explosives. - As per the design of “modern” games, Hitman does ‘tell’ you what things are possible by listing certain ‘challenges’ to try. (e.g. “use a sniper rifle and kill both targets within 10s of each other”). - There’s a game-mode, “escalations”, which iteratively reveals a set of objectives on each replay (of that mode). e.g. 1st stage would be “kill this target while disguised as a guard”; 2nd stage may add a complication that you <em>must</em> hide any dead bodies. Or the escalated complication might change the disguise required. - Completing certain challenges/etc. unlocks different equipment, and different entry-points into the level. (Sometimes with different disguises!).</p>
<p>To clarify the gameplay rules: The player is on his own, and must kill targets (or sometimes steal something), and the map is filled with guards and people. Typically set in a relatively normal context. e.g. a fashion show.<br />
But the levels aren’t especially designed for “sneak around the guards, kill the target” as much as around the particular ‘disguises’. That is, outfits that the different kinds of game characters wear. The puzzle to the game is to find out what your outfit allows you to do, how to acquire a better outfit, and how to make use of the different outfits. – e.g. if you’re disguised as a kitchen chef, you won’t be allowed into where you could go if you were disguised as a guard.<br />
But, it’s not as if being a guard is necessarily the best outfit for every situation: some of the enemy guards will notice that they don’t recognise you! (Another example: It’s not suspicious to see a waitor add <em>something</em> to a drink (like poison). But if they see a guard adding something to a drink, that’s just suspicious).</p>
<p>There are more subtle gameplay aspects crafted around the disguise-game. e.g. people can hear gunshots, or combat.. and will be suspicious if they see you using a picklock to open a lock, or whatever.</p>
<p>But the dynamics this leads to?<br />
- Learning what the layout of the level is. (Where are all the good items? Where’s the key/wrench/coin/etc.? Where are easy places to get particular outfits? Which places allow which outfits?). - More than one way to skin a cat! – In particular, you usually get the feeling that maybe there was a less ‘awkward’ way to complete the mission than you did.</p>
<p>Simple plain run-and-gun is discouraged.<br />
The player isn’t a bullet-sponge, and will die fairly quickly to a guard shooting him. That said, with the right choke points it is possible to eliminate the guards in an area. – IMHO, this is kindof useful for learning the location of certain key items, and getting familiar with the layout of a map.</p>
<hr />
<p>So far I’ve spent my time only in one map. But I’ve poured more time into it than a typical Call of Duty campaign, so I’m kindof impressed by how the game manages to achieve a degree of “replayability”.</p>
]]></summary>
</entry>
<entry>
    <title>Asking for Help Threshold</title>
    <link href="http://www.rgoulter.com/blog//posts/programming/2017-11-08-asking-for-help-threshold.html" />
    <id>http://www.rgoulter.com/blog//posts/programming/2017-11-08-asking-for-help-threshold.html</id>
    <published>2017-11-08T00:00:00Z</published>
    <updated>2017-11-08T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on November  8, 2017
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>I think my experience is probably similar to other talented programmers fresh to the workforce: To not ‘ask for help’ with a problem until too much time has been spent stuck on the problem.</p>
<p>This isn’t too strange.<br />
As hobbyists, or as students in school, we program and learn individually. I think ‘talented’ really means ‘has made more mistakes’. Surely you can’t be ‘talented’ without having curiousity to understand how the tools/programs you’re using work.</p>
<p>For what it’s worth: Personally, I’m not curious about <em>everything</em>. I find git a tool where add/commit/push/pull covers 95% of what I do, 5% is Googling for how to undo some mistake.</p>
<p>On the other hand, there are people who apparently lack all curiousity (or capability) to investigate how to self-correct.<br />
My experience is they’ll ask for help as soon as possible.<br />
Which is fine for project-specific knowledge which I know and they don’t. And ‘okay’ for things which they might not have known.</p>
<p>But “asking for help without trying” is just irritating. I like the admonishment “don’t ask the same question twice”. (I mean, I’ll answer it, but eventually the asker loses my respect).</p>
<p>I saw some tech-culture discussion complaining about this kindof thing:<br />
“no one is really ‘self-taught’; e.g. communities like StackOverflow involve <em>people</em>”.<br />
I think that’s a somewhat disingenuous point. – If the programmer attitude of ‘I shouldn’t have to bother learning it to know how to do it’ weren’t so prevalent, then StackOverflow wouldn’t be so popular.<br />
It’s fair to say the process of ‘try it’, ‘search it’, ‘try that again’ (without asking someone else directly) is ‘self-taught’. Since anyone can do try doing that. By themselves.<br />
– On the other hand, it’s interesting to point out that “on the shoulders of giants” does include someone else who had the same stupid question you’re googling for.</p>
]]></summary>
</entry>
<entry>
    <title>Thoughts on Using DuoLingo</title>
    <link href="http://www.rgoulter.com/blog//posts/2017-08-24-thoughts-on-using-duolingo.html" />
    <id>http://www.rgoulter.com/blog//posts/2017-08-24-thoughts-on-using-duolingo.html</id>
    <published>2017-08-24T00:00:00Z</published>
    <updated>2017-08-24T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on August 24, 2017
    
        by Richard Goulter
    <br/>
    
    Tags: 
    
</div>

<p>So I’ve been using DuoLingo for just over two weeks now.</p>
<p>It’s been fun.<br />
And I think if you’re interested in learning a language, it’s another tool-in-the-belt to use. As in, it has its limitations.<br />
My impression is, though, that it’s great for introducing words, and some grammar.</p>
<p>For better or worse, DuoLingo is quite gamified.<br />
I don’t think that is so bad.<br />
DuoLingo organises its vocabulary into groups of words around a theme (e.g. ‘Food’, ‘Animals’, ‘Verbs 1’, etc.); and within each of these groups, has sub-groups of up-to five or six words.<br />
The groups of words are organised visually, like a skill-progression tree in an RPG game. As you complete the exercises on these groups, they light up; and, they decay over time as you get questions with these words wrong, or due to an induced decay over time.</p>
<p>I guess people have different expectations for motivation/feedback.<br />
DuoLingo errs on the side of ‘motivational’.<br />
e.g. The way the groups of words are organised disguises just how many words you can be introduced to. (Some groups have 20, some of the bigger groups have 50 words).</p>
<p>Maybe DuoLingo knows better than be about what a good way to ‘learn’ words is.<br />
But at the moment, I feel the feedback is a false “you’re doing well”. (As opposed to, “here’s where you’re at; but, going far requires constant effort over a long time, so”).<br />
Maybe I’d prefer it were more explicit about how it plans to progress.</p>
<p>You see, the exercises ranging in difficulty. Generally an exercise consists of a question in source-language, and user must provide a target translation. (Also, sometimes vice versa). - Sometimes the UI may allow you to check the translations of the words in the question. - Besides this, most of the variation comes from input method, ranging from: - Multichoice: select the correct answers. (This is easiest, since you generally only need to recognise the words of the question/answer which you know). - Word-boxes: Possible word choices are provided. Sometimes with spare words. (This is relatively easy; when the word-boxes are your native-language, you’ll recognise which sentences make sense. When in the language you’re learning, then it reminds you of the words you need to remember). - Free-form input.</p>
<p>What makes it a bit easier to game-the-system is that it may become easy to remember what the translation of a sentence is, rather than understanding how to translate it. (e.g. within the same exercise session, the same question may come up in foreign-to-English, English-to-foreign forms; as well as an iteratively more difficult input kind. – So, being able to answer a hard question may be done with the same memory as answering an easier question).<br />
– Or, to put it another way: If I show my friend the list of words I’ve seen on DuoLingo, it doesn’t necessarily mean I can remember the source-to-target (or vice versa) translation. Which is <em>fine</em>. Because ‘learning progress’ isn’t a binary value.</p>
<p>I imagine my progression is something like: - “recognise it in questions with English word-box” - “recognise the word in questions with foreign-language word-box” - “recognise the word is free-form English input” - “get vaguely the right letters in free-form foreign input” - “get the right letters in free-form free-form input”</p>
<p>So when DuoLingo says I’ve ‘mastered’ a group of words (because I can use English word-boxes for answering questions), I feel a little deceived.<br />
I guess it’s for motivation.<br />
I just wish I had more visibility on a “progress indicator”. (&amp; their expectation of progress).</p>
<p>Again.<br />
DuoLingo is really fun to use.<br />
But it has limitations.<br />
And I think when used combined with other resources for learning a language, it’s quite cool (since what you learn in DuoLingo you’ll see elsewhere, and vice versa).</p>
]]></summary>
</entry>

</feed>
